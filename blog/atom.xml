<?xml version="1.0" encoding="utf-8"?><?xml-stylesheet type="text/xsl" href="atom.xsl"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://indianapoly.github.io/blog</id>
    <title>KO HYEON LIM Blog</title>
    <updated>2025-08-24T00:00:00.000Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://indianapoly.github.io/blog"/>
    <subtitle>KO HYEON LIM Blog</subtitle>
    <icon>https://indianapoly.github.io/img/favicon.ico</icon>
    <entry>
        <title type="html"><![CDATA[회사에서 진행하고 있는 프로젝트가 왜 SSG로 구현이 되어있을까?]]></title>
        <id>https://indianapoly.github.io/blog/2025/08/24/frontend/SSG-SSR-title</id>
        <link href="https://indianapoly.github.io/blog/2025/08/24/frontend/SSG-SSR-title"/>
        <updated>2025-08-24T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[개요]]></summary>
        <content type="html"><![CDATA[<h2 class="anchor anchorWithStickyNavbar_LWe7" id="개요">개요<a href="https://indianapoly.github.io/blog/2025/08/24/frontend/SSG-SSR-title#%EA%B0%9C%EC%9A%94" class="hash-link" aria-label="개요에 대한 직접 링크" title="개요에 대한 직접 링크">​</a></h2>
<p>회사에서 쿠폰몰과 관련된 프로젝트를 진행함에 있어서 SSG 기반의 프로젝트임을 인지하고 프로젝트에 참가했어요.</p>
<p>하지만 SSG가 정작 사이트 생성기라는 개념과 학교 동아리 홈페이지를 개발하는 과정에 있어서 서버에서는 만들어진 html을 제공하기 때문에 효율적이다라는 개념 + API가 없이 정적인 데이터만 보여주면 되기 때문에 괜찮지만, 왜 현업에서 SSG가 사용되는지 이해하고자 해당 글을 작성하였습니다.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="나의-생각">나의 생각<a href="https://indianapoly.github.io/blog/2025/08/24/frontend/SSG-SSR-title#%EB%82%98%EC%9D%98-%EC%83%9D%EA%B0%81" class="hash-link" aria-label="나의 생각에 대한 직접 링크" title="나의 생각에 대한 직접 링크">​</a></h2>
<p>정확하게 이해를 하지 못했던 저의 처음 생각은 <code>api 호출을 하면 어차피 거기서 거기 아닌가?</code> 였어요. 학교 동아리 홈페이지를 개발 할 때는 모든 데이터가 정적 데이터였기 때문에 SSR과 SSG를 순수히 정적 데이터를 기반으로 구분했던 것이 잘못된 생각이었어요.</p>
<p>하지만 이는 명확하게 달랐습니다.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="내용-이해">내용 이해<a href="https://indianapoly.github.io/blog/2025/08/24/frontend/SSG-SSR-title#%EB%82%B4%EC%9A%A9-%EC%9D%B4%ED%95%B4" class="hash-link" aria-label="내용 이해에 대한 직접 링크" title="내용 이해에 대한 직접 링크">​</a></h2>
<ul>
<li>
<p>SSR은 NextJS에서 html을 생성을 하고 이를 클라이언트에게 보내줍니다.</p>
<ul>
<li>여기서 API 호출과 같은 부분은 Next JS 서버에서 호출을 하기 때문에 트래픽이 몰리면 Next JS 서버 자체에 과부하가 생길 수 있어요.</li>
</ul>
</li>
<li>
<p>SSG는 빌드에서 HTML을 생성하고 이를 "static file storage"로 그대로 서빙해요. 그래서 트래픽이 몰려도 Next JS의 서버 부하가 일어나지 않아요.</p>
<ul>
<li>API 요청을 서버에서 부담을 하기 때문에 가격 측면에서 이점을 가질 수 있어요.</li>
</ul>
</li>
</ul>
<p>즉 모든 요청이 NextJS 서버에서 거치는 SSR은 캐시백 쿠폰몰과 같이 사람들이 정말 많이 몰리고 API를 계속 요청해야하는 프로젝트에서는 되려 비용 부담이 배로 발생하는 점을 알게 되었어요.
추가적으로 해당 프로젝트는 웹 뷰 형태로 제공이 되게 때문에 SEO를 최적화 하는것이 중요한 부분이 아니었어요. 따라서 SSG를 사용하는 것을 이해했습니다.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="그러면-무조건-ssg만-쓰는게-메리트가-있는건지">그러면 무조건 SSG만 쓰는게 메리트가 있는건지?<a href="https://indianapoly.github.io/blog/2025/08/24/frontend/SSG-SSR-title#%EA%B7%B8%EB%9F%AC%EB%A9%B4-%EB%AC%B4%EC%A1%B0%EA%B1%B4-ssg%EB%A7%8C-%EC%93%B0%EB%8A%94%EA%B2%8C-%EB%A9%94%EB%A6%AC%ED%8A%B8%EA%B0%80-%EC%9E%88%EB%8A%94%EA%B1%B4%EC%A7%80" class="hash-link" aria-label="그러면 무조건 SSG만 쓰는게 메리트가 있는건지?에 대한 직접 링크" title="그러면 무조건 SSG만 쓰는게 메리트가 있는건지?에 대한 직접 링크">​</a></h2>
<p>위 내용을 보면 무조건 SSG + CSR 구조가 더 메리트가 있어 보이는 점 때문에 왜 SSR이 있는거지라고 생각을 할 수 있어요.</p>
<p>하지만 최신성과 개인화 그리고 보안이 필요한 경우에는 반드시 SSR을 사용해야하요. 즉 어떠한 상황에 놓여있는지 그리고 중요하게 생각하는 가치가 무엇인지에 따라서 기술을 선택하는 것이 보다 중요하다는 것을 알게 되었습니다.</p>]]></content>
        <author>
            <name>고현림</name>
            <uri>https://www.linkedin.com/in/%ED%98%84%EB%A6%BC-%EA%B3%A0-b53602221/</uri>
        </author>
        <category label="TIL" term="TIL"/>
        <category label="Frontend" term="Frontend"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[iframe과 React 컴포넌트 간 메시지 통신으로 결제창 닫기 구현]]></title>
        <id>https://indianapoly.github.io/blog/2025/08/24/frontend/iframe-title</id>
        <link href="https://indianapoly.github.io/blog/2025/08/24/frontend/iframe-title"/>
        <updated>2025-08-24T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[한줄 요약]]></summary>
        <content type="html"><![CDATA[<h2 class="anchor anchorWithStickyNavbar_LWe7" id="한줄-요약">한줄 요약<a href="https://indianapoly.github.io/blog/2025/08/24/frontend/iframe-title#%ED%95%9C%EC%A4%84-%EC%9A%94%EC%95%BD" class="hash-link" aria-label="한줄 요약에 대한 직접 링크" title="한줄 요약에 대한 직접 링크">​</a></h2>
<p>결제 마무리 화면이 마운트가 되면 신호를 iframe으로 전송해, iframe이 수신 후 스스로 닫히는 방식으로 결제 플로우를 제어했다.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="문제-상황">문제 상황<a href="https://indianapoly.github.io/blog/2025/08/24/frontend/iframe-title#%EB%AC%B8%EC%A0%9C-%EC%83%81%ED%99%A9" class="hash-link" aria-label="문제 상황에 대한 직접 링크" title="문제 상황에 대한 직접 링크">​</a></h2>
<p>서비스의 결제 플로우에서는 항상 뒤로가기, 닫기와 같은 UI 제어가 필요해요. 보통은 앱 공통 Header를 활용해서 뒤로가기를 처리합니다. 하지만 PG 결제창은 외부 URL로 강제로 이동하기 떄문에, 이 경우 앱의 Header는 유지가 되지 않아요.</p>
<p>이를 단순히 외부 링크로 열어버리는 서비스 UI와 결제 UI가 완전히 분리되면서 UX가 끊기게 돼요. 따라서 결제창을 앱 안에서 제어할 수 있는 방법이 필요했습니다.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="iframe으로-결제창-띄우기">iframe으로 결제창 띄우기<a href="https://indianapoly.github.io/blog/2025/08/24/frontend/iframe-title#iframe%EC%9C%BC%EB%A1%9C-%EA%B2%B0%EC%A0%9C%EC%B0%BD-%EB%9D%84%EC%9A%B0%EA%B8%B0" class="hash-link" aria-label="iframe으로 결제창 띄우기에 대한 직접 링크" title="iframe으로 결제창 띄우기에 대한 직접 링크">​</a></h2>
<p>제가 선택한 방법은 iframe에서 PG 결제창을 띄우는 것이었습니다. 이렇게 하면 앱의 Layer은 그대로 유지되고, 결제창만 iframe에서 열 수 있어요.</p>
<div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">type</span><span class="token plain"> </span><span class="token class-name">PaymentIframeOptions</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  scriptUrl</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">string</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  payload</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> Record</span><span class="token operator" style="color:#393A34">&lt;</span><span class="token builtin">string</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token builtin">string</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> </span><span class="token builtin">number</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> </span><span class="token builtin">boolean</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">export</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">openPaymentInIframeDynamic</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">opts</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> PaymentIframeOptions</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> scriptUrl</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> payload </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> opts</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> iframe </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> document</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">getElementById</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token string" style="color:#e3116c">'pg_pay_iframe'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">as</span><span class="token plain"> HTMLIFrameElement </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">null</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> wrap </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> document</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">getElementById</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'pgPayWindow'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">as</span><span class="token plain"> HTMLElement </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">null</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">!</span><span class="token plain">iframe</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">throw</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">new</span><span class="token plain"> </span><span class="token class-name">Error</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'#pg_pay_iframe not found'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">!</span><span class="token plain">wrap</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">throw</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">new</span><span class="token plain"> </span><span class="token class-name">Error</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'#pgPayWindow not found'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  wrap</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">style</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">display </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'block'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  wrap</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">style</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">pointerEvents </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'none'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> inputs </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> Object</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">entries</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">payload </span><span class="token operator" style="color:#393A34">||</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">filter</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> v</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=&gt;</span><span class="token plain"> v </span><span class="token operator" style="color:#393A34">!==</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">undefined</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&amp;&amp;</span><span class="token plain"> v </span><span class="token operator" style="color:#393A34">!==</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">null</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">map</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">k</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> v</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token template-string template-punctuation string" style="color:#e3116c">`</span><span class="token template-string string" style="color:#e3116c">&lt;input type="hidden" name="</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">${</span><span class="token template-string interpolation function" style="color:#d73a49">String</span><span class="token template-string interpolation punctuation" style="color:#393A34">(</span><span class="token template-string interpolation">k</span><span class="token template-string interpolation punctuation" style="color:#393A34">)</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">}</span><span class="token template-string string" style="color:#e3116c">" value="</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">${</span><span class="token template-string interpolation function" style="color:#d73a49">String</span><span class="token template-string interpolation punctuation" style="color:#393A34">(</span><span class="token template-string interpolation">v</span><span class="token template-string interpolation punctuation" style="color:#393A34">)</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">}</span><span class="token template-string string" style="color:#e3116c">" /&gt;</span><span class="token template-string template-punctuation string" style="color:#e3116c">`</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">join</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">''</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> html </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token template-string template-punctuation string" style="color:#e3116c">`</span><span class="token template-string string" style="color:#e3116c">&lt;!DOCTYPE html&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token template-string string" style="color:#e3116c">&lt;html&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token template-string string" style="color:#e3116c">&lt;head&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token template-string string" style="color:#e3116c">  &lt;meta charset="utf-8" /&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token template-string string" style="color:#e3116c">  &lt;meta</span><br></span><span class="token-line" style="color:#393A34"><span class="token template-string string" style="color:#e3116c">    name="viewport"</span><br></span><span class="token-line" style="color:#393A34"><span class="token template-string string" style="color:#e3116c">    content="width=device-width,initial-scale=1,viewport-fit=cover"</span><br></span><span class="token-line" style="color:#393A34"><span class="token template-string string" style="color:#e3116c">  /&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token template-string string" style="color:#e3116c">  &lt;title&gt;Payment Frame&lt;/title&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token template-string string" style="color:#e3116c">  &lt;style&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token template-string string" style="color:#e3116c">    html,body{margin:0;padding:0;height:100%;background:#fff;font:14px system-ui}</span><br></span><span class="token-line" style="color:#393A34"><span class="token template-string string" style="color:#e3116c">    #boot{position:absolute;inset:0;display:flex;align-items:center;justify-content:center}</span><br></span><span class="token-line" style="color:#393A34"><span class="token template-string string" style="color:#e3116c">  &lt;/style&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token template-string string" style="color:#e3116c">&lt;/head&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token template-string string" style="color:#e3116c">&lt;body&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token template-string string" style="color:#e3116c">  &lt;form id="payForm" method="post"&gt;</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">${</span><span class="token template-string interpolation">inputs</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">}</span><span class="token template-string string" style="color:#e3116c">&lt;/form&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token template-string string" style="display:inline-block;color:#e3116c"></span><br></span><span class="token-line" style="color:#393A34"><span class="token template-string string" style="color:#e3116c">  &lt;script&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token template-string string" style="color:#e3116c">    function loadScript(src){</span><br></span><span class="token-line" style="color:#393A34"><span class="token template-string string" style="color:#e3116c">      return new Promise(function(resolve, reject){</span><br></span><span class="token-line" style="color:#393A34"><span class="token template-string string" style="color:#e3116c">        var s = document.createElement('script');</span><br></span><span class="token-line" style="color:#393A34"><span class="token template-string string" style="color:#e3116c">        s.src = src; s.async = true; s.onload = function(){ resolve() };</span><br></span><span class="token-line" style="color:#393A34"><span class="token template-string string" style="color:#e3116c">        s.onerror = function(e){ reject(new Error('Failed to load '+src)) };</span><br></span><span class="token-line" style="color:#393A34"><span class="token template-string string" style="color:#e3116c">        document.head.appendChild(s);</span><br></span><span class="token-line" style="color:#393A34"><span class="token template-string string" style="color:#e3116c">      });</span><br></span><span class="token-line" style="color:#393A34"><span class="token template-string string" style="color:#e3116c">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token template-string string" style="display:inline-block;color:#e3116c"></span><br></span><span class="token-line" style="color:#393A34"><span class="token template-string string" style="color:#e3116c">    (async function bootstrap(){</span><br></span><span class="token-line" style="color:#393A34"><span class="token template-string string" style="color:#e3116c">      try{</span><br></span><span class="token-line" style="color:#393A34"><span class="token template-string string" style="color:#e3116c">        await loadScript("</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">${</span><span class="token template-string interpolation">scriptUrl</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">}</span><span class="token template-string string" style="color:#e3116c">");</span><br></span><span class="token-line" style="color:#393A34"><span class="token template-string string" style="display:inline-block;color:#e3116c"></span><br></span><span class="token-line" style="color:#393A34"><span class="token template-string string" style="color:#e3116c">        var form = document.getElementById('payForm');</span><br></span><span class="token-line" style="color:#393A34"><span class="token template-string string" style="color:#e3116c">        if(!form){ throw new Error('payForm not found'); }</span><br></span><span class="token-line" style="color:#393A34"><span class="token template-string string" style="display:inline-block;color:#e3116c"></span><br></span><span class="token-line" style="color:#393A34"><span class="token template-string string" style="color:#e3116c">        // 외부 스크립트가 정의한 전역 함수 호출</span><br></span><span class="token-line" style="color:#393A34"><span class="token template-string string" style="color:#e3116c">        if(typeof window.SendPay !== 'function'){</span><br></span><span class="token-line" style="color:#393A34"><span class="token template-string string" style="color:#e3116c">          throw new Error('SendPay is not available');</span><br></span><span class="token-line" style="color:#393A34"><span class="token template-string string" style="color:#e3116c">        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token template-string string" style="display:inline-block;color:#e3116c"></span><br></span><span class="token-line" style="color:#393A34"><span class="token template-string string" style="color:#e3116c">        // 결제 시작</span><br></span><span class="token-line" style="color:#393A34"><span class="token template-string string" style="color:#e3116c">        document.getElementById('boot')?.remove();</span><br></span><span class="token-line" style="color:#393A34"><span class="token template-string string" style="color:#e3116c">        window.SendPay(form)</span><br></span><span class="token-line" style="color:#393A34"><span class="token template-string string" style="color:#e3116c">      }catch(err){</span><br></span><span class="token-line" style="color:#393A34"><span class="token template-string string" style="color:#e3116c">        var boot = document.getElementById('boot');</span><br></span><span class="token-line" style="color:#393A34"><span class="token template-string string" style="color:#e3116c">        if(boot){ boot.textContent = '결제 로딩 실패: ' + (err &amp;&amp; err.message || err); }</span><br></span><span class="token-line" style="color:#393A34"><span class="token template-string string" style="color:#e3116c">      }</span><br></span><span class="token-line" style="color:#393A34"><span class="token template-string string" style="color:#e3116c">    })();</span><br></span><span class="token-line" style="color:#393A34"><span class="token template-string string" style="color:#e3116c">  &lt;/script&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token template-string string" style="color:#e3116c">&lt;/body&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token template-string string" style="color:#e3116c">&lt;/html&gt;</span><span class="token template-string template-punctuation string" style="color:#e3116c">`</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  iframe</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">srcdoc </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> html</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre></div></div>
<p>해당 코드와 같이 iframe을 열어서 처리할 수 있는 함수를 생성하면 정상적으로 코드가 열리는 것을 확인할 수 있어요. 이 때 중요한 점이 해당 iframe의 form에서는 결제가 성공하면 returnUrl을 클라이언트 주소로 작성을 하게되면 문제가 해결이 되지 않아요. 왜냐하면 returnUrl로 넘어오는 요청은 get이 아니라 post였기 때문이에요.</p>
<p>물론 NextJS api 서버를 활용해 이를 처리할 수도 있지만 해당 프로젝트라 SSG가 불가능했고, 서버 측에서 리다이렉트 할 수 있는 api를 요청하여 해당 문제를 해결했습니다.</p>
<p>하지만 iframe 만으로는 문제를 해결 할 수 없었습니다. 하지만 제일 큰 문제는 결제 완료 페이지가 iframe 내부가 이동했기 때문에 Header가 그대로 남아있는 문제가 있었어요.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="iframe을-없애기-위해서-한-삽질과-해결">iframe을 없애기 위해서 한 삽질과 해결<a href="https://indianapoly.github.io/blog/2025/08/24/frontend/iframe-title#iframe%EC%9D%84-%EC%97%86%EC%95%A0%EA%B8%B0-%EC%9C%84%ED%95%B4%EC%84%9C-%ED%95%9C-%EC%82%BD%EC%A7%88%EA%B3%BC-%ED%95%B4%EA%B2%B0" class="hash-link" aria-label="iframe을 없애기 위해서 한 삽질과 해결에 대한 직접 링크" title="iframe을 없애기 위해서 한 삽질과 해결에 대한 직접 링크">​</a></h2>
<p>처음에는 iframe의 onLoad 이벤트를 이용해 결제 완료 화면이 뜨면 iframe을 닫는 방식을 시도했어요. 하지만 기대대로 동작하지 않았습니다. 다음으로는 부모–자식 간 통신을 떠올려, 부모 컴포넌트와 메시지를 주고받도록 구현했지만, useEffect만으로는 변화를 안정적으로 감지할 수 없었어요.</p>
<p>그래서 결제 완료 화면이 어디에 있든, 마운트 순간에는 반드시 useEffect가 실행된다는 점을 활용했어요. 결제 완료 시점에 iframe 내부에 있으면 postMessage를 부모에게 전송하도록 했고, 부모는 이를 받아 iframe을 닫고 앱의 결제 완료 화면으로 리다이렉트하도록 처리했습니다.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="부모가-데이터를-받았을-때">부모가 데이터를 받았을 때<a href="https://indianapoly.github.io/blog/2025/08/24/frontend/iframe-title#%EB%B6%80%EB%AA%A8%EA%B0%80-%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%A5%BC-%EB%B0%9B%EC%95%98%EC%9D%84-%EB%95%8C" class="hash-link" aria-label="부모가 데이터를 받았을 때에 대한 직접 링크" title="부모가 데이터를 받았을 때에 대한 직접 링크">​</a></h3>
<div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">useEffect</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">handleMessage</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">e</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> MessageEvent</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">e</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">data</span><span class="token operator" style="color:#393A34">?.</span><span class="token plain">type </span><span class="token operator" style="color:#393A34">===</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'pay:finish'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> wrap </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> document</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">getElementById</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token string" style="color:#e3116c">'pgPayWindow'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">as</span><span class="token plain"> HTMLElement </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">null</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">wrap</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> wrap</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">style</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">display </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'none'</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// iframe 닫기</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token comment" style="color:#999988;font-style:italic">// 부모 라우터에서 finish 페이지 열기</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        window</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">addEventListener</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'message'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> handleMessage</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=&gt;</span><span class="token plain"> window</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">removeEventListener</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'message'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> handleMessage</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">go</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><br></span></code></pre></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="결제창이-열렸을-때">결제창이 열렸을 때<a href="https://indianapoly.github.io/blog/2025/08/24/frontend/iframe-title#%EA%B2%B0%EC%A0%9C%EC%B0%BD%EC%9D%B4-%EC%97%B4%EB%A0%B8%EC%9D%84-%EB%95%8C" class="hash-link" aria-label="결제창이 열렸을 때에 대한 직접 링크" title="결제창이 열렸을 때에 대한 직접 링크">​</a></h3>
<p>window.self는 현재 실행 중인 윈도우 자신을 가리켜요. window.top은 현재 창이 프레임 안에 있다면 최상위 객체를 가리켜요.</p>
<p>즉 window.self와 window.top이 일치하지 않는다고 한다면 해당 창은 iframe 내부에서 실행하고 있다는 것을 알 수 있어요.</p>
<div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">useEffect</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> isInIframe </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> window</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">self </span><span class="token operator" style="color:#393A34">!==</span><span class="token plain"> window</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">top</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">isInIframe</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        window</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">parent</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">postMessage</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> type</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'pay:finish'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> payload</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> 전송할 데이터 </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token string" style="color:#e3116c">'*'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="배운점">배운점<a href="https://indianapoly.github.io/blog/2025/08/24/frontend/iframe-title#%EB%B0%B0%EC%9A%B4%EC%A0%90" class="hash-link" aria-label="배운점에 대한 직접 링크" title="배운점에 대한 직접 링크">​</a></h2>
<p>이번 문제를 해결하면서 부모와 자식 간의 통신이 왜 필요한지 더 명확하게 이해할 수 있었어요.</p>
<p>단순히 iframe 내부에서만 로직을 처리하는 것이 아니라, 부모 컴포넌트와 메시지를 주고받아야 전체 플로우를 안정적으로 제어할 수 있다는 점을 배웠습니다.</p>
<p>또한 페이지가 렌더링되는 시점에 어떤 동작을 수행할 수 있는지를 이해하는 것도 중요한 포인트였습니다. 특히 useEffect와 같은 훅이 실행되는 순간을 활용해 원하는 이벤트를 트리거할 수 있다는 흐름을 이해하고, 이를 통해 화면 제어와 이벤트 설계에 대한 감각을 키울 수 있었습니다.</p>]]></content>
        <author>
            <name>고현림</name>
            <uri>https://www.linkedin.com/in/%ED%98%84%EB%A6%BC-%EA%B3%A0-b53602221/</uri>
        </author>
        <category label="TIL" term="TIL"/>
        <category label="Frontend" term="Frontend"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Toggle Button translation 동작에 대해서]]></title>
        <id>https://indianapoly.github.io/blog/2025/08/24/frontend/toggle-transition-title</id>
        <link href="https://indianapoly.github.io/blog/2025/08/24/frontend/toggle-transition-title"/>
        <updated>2025-08-24T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[transition의 기본 개념]]></summary>
        <content type="html"><![CDATA[<h2 class="anchor anchorWithStickyNavbar_LWe7" id="transition의-기본-개념">transition의 기본 개념<a href="https://indianapoly.github.io/blog/2025/08/24/frontend/toggle-transition-title#transition%EC%9D%98-%EA%B8%B0%EB%B3%B8-%EA%B0%9C%EB%85%90" class="hash-link" aria-label="transition의 기본 개념에 대한 직접 링크" title="transition의 기본 개념에 대한 직접 링크">​</a></h2>
<p>css의 transition은 어떤 속성 값이 바뀔 때 그 변화를 "즉시" 변경하는 것이 아니라, 일정 시간과 속도로 "서서히" 적용하는 기능이에요.</p>
<p>값의 변화가 있다면 이를 점진적으로 변화시킵니다. 문법은 아래와 같이 확인할 수 있어요.</p>
<div class="language-css codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-css codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token selector class" style="color:#00009f">.button</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token property" style="color:#36acaa">transition</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> [속성] [지속시간] [타이밍 함수] [지연시간]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    ex. </span><span class="token property" style="color:#36acaa">transition</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> all </span><span class="token number" style="color:#36acaa">0.3</span><span class="token unit">s</span><span class="token plain"> ease-in-out</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="속성">속성<a href="https://indianapoly.github.io/blog/2025/08/24/frontend/toggle-transition-title#%EC%86%8D%EC%84%B1" class="hash-link" aria-label="속성에 대한 직접 링크" title="속성에 대한 직접 링크">​</a></h3>
<p>속성은 어떤 css 속성이 바뀔 때 애니메이션을 적용할지에 지정해주어야 해요.</p>
<ul>
<li>all을 사용하게 되면 모든 속성에 대해서 transition이 걸리기 때문에 편하게 할 수는 있지만 성능에 좋지 않아요.</li>
<li>레이아웃에 영향을 주는 속성보다는, transform, opacity와 같은 속성을 쓰는 게 더 자연스러워요.</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="지속시간">지속시간<a href="https://indianapoly.github.io/blog/2025/08/24/frontend/toggle-transition-title#%EC%A7%80%EC%86%8D%EC%8B%9C%EA%B0%84" class="hash-link" aria-label="지속시간에 대한 직접 링크" title="지속시간에 대한 직접 링크">​</a></h3>
<p>속성이 변하는 데 걸리는 시간이에요. UI/UX에서는 보통 150ms ~ 500ms 사이가 가장 자연스럽다고 알려져있어요.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="타이밍-함수">타이밍 함수<a href="https://indianapoly.github.io/blog/2025/08/24/frontend/toggle-transition-title#%ED%83%80%EC%9D%B4%EB%B0%8D-%ED%95%A8%EC%88%98" class="hash-link" aria-label="타이밍 함수에 대한 직접 링크" title="타이밍 함수에 대한 직접 링크">​</a></h3>
<p>변화가 일어나는 속도의 곡선의 정의해요. 시간이 흐름에 따라 애니메이션이 빨라졌다, 느려졌다 하는 방식을 결정해요.</p>
<ul>
<li>기본값은 ease로 천천히 시작하였다가 빨라졌다가 천천히 끝나요. 가장 많이 사용되는 것은 ease-in-out과 같은 속성이 있어요.</li>
<li>추가적으로 고급으로 사용할 수 있는 함수에는 <code>cubic-bezier</code> 함수가 있어요.</li>
</ul>
<div class="language-css codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-css codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token selector class" style="color:#00009f">.button</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token property" style="color:#36acaa">transition</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> transform </span><span class="token number" style="color:#36acaa">0.6</span><span class="token unit">s</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">cubic-bezier</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">x1</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> y1</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> x2</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> y2</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre></div></div>
<p>이와 같이 사용을 할 수 있는데 x 값은 0에서 1사이의 값이고, y값은 제한이 없어요.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="toggle-button-사용-예시">Toggle Button 사용 예시<a href="https://indianapoly.github.io/blog/2025/08/24/frontend/toggle-transition-title#toggle-button-%EC%82%AC%EC%9A%A9-%EC%98%88%EC%8B%9C" class="hash-link" aria-label="Toggle Button 사용 예시에 대한 직접 링크" title="Toggle Button 사용 예시에 대한 직접 링크">​</a></h2>
<p>테마 변경 버튼을 만들어보는 예시를 통해서 어떻게 동작이 되는지 보다 명확하게 파악할 수 있어요. 여기서 실수하면 안되는 것은 부모의 transition은 자식의 속성 값 변경에 대해서 영향을 주지 않아요. 따라서 불필요한 코드 작성은 안하도록 하는 것이 중요해요.</p>
<div class="language-tsx codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-tsx codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token string" style="color:#e3116c">'use client'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">export</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">ThemeToggleButton</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">dark</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> setDark</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">useState</span><span class="token punctuation" style="color:#393A34">(</span><span class="token boolean" style="color:#36acaa">false</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">useEffect</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token arrow operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> currentTheme </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">getTheme</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// 외부에서 다크 모드에 대한 값을 가져옴.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token comment" style="color:#999988;font-style:italic">/**</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">            if (currentTheme === 'dark') {</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">               setDark(true);</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">            } else {</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">               setDart(false);</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">            }</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">        */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token function" style="color:#d73a49">setDart</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">currentTheme </span><span class="token operator" style="color:#393A34">===</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'dark'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// 위와 같이 길어지는 것을 간단하게 줄여주는게 중요해요.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> </span><span class="token function-variable function" style="color:#d73a49">handleToggle</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token arrow operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> newTheme </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> dark </span><span class="token operator" style="color:#393A34">?</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'light'</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"dark"</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// 다크 모드이면 라이트모드로 변경, 다크 모드가 아니면 다크 모드로 변경해요</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token function" style="color:#d73a49">setTheme</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">newTheme</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// 외부 함수를 통해 전체 모드를 변경을 해주어요.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token function" style="color:#d73a49">setDark</span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">!</span><span class="token plain">dark</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">div</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">onClick</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:#393A34">=</span><span class="token tag script language-javascript punctuation" style="color:#393A34">{</span><span class="token tag script language-javascript" style="color:#00009f">handleToggle</span><span class="token tag script language-javascript punctuation" style="color:#393A34">}</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">            </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">div</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">style</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:#393A34">=</span><span class="token tag script language-javascript punctuation" style="color:#393A34">{</span><span class="token tag script language-javascript punctuation" style="color:#393A34">{</span><span class="token tag script language-javascript" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag script language-javascript" style="color:#00009f">                left</span><span class="token tag script language-javascript operator" style="color:#393A34">:</span><span class="token tag script language-javascript" style="color:#00009f"> </span><span class="token tag script language-javascript template-string template-punctuation string" style="color:#e3116c">`</span><span class="token tag script language-javascript template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">${</span><span class="token tag script language-javascript template-string interpolation" style="color:#00009f">dark </span><span class="token tag script language-javascript template-string interpolation operator" style="color:#393A34">?</span><span class="token tag script language-javascript template-string interpolation" style="color:#00009f"> </span><span class="token tag script language-javascript template-string interpolation string" style="color:#e3116c">'calc(100% - 34px)'</span><span class="token tag script language-javascript template-string interpolation" style="color:#00009f"> </span><span class="token tag script language-javascript template-string interpolation operator" style="color:#393A34">:</span><span class="token tag script language-javascript template-string interpolation" style="color:#00009f"> </span><span class="token tag script language-javascript template-string interpolation string" style="color:#e3116c">'2px'</span><span class="token tag script language-javascript template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">}</span><span class="token tag script language-javascript template-string template-punctuation string" style="color:#e3116c">`</span><span class="token tag script language-javascript" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag script language-javascript" style="color:#00009f">                transition</span><span class="token tag script language-javascript operator" style="color:#393A34">:</span><span class="token tag script language-javascript" style="color:#00009f"> </span><span class="token tag script language-javascript string" style="color:#e3116c">"all 0.3s cubic-bezier(0.4, 0, 0.2, 1)"</span><span class="token tag script language-javascript" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag script language-javascript" style="color:#00009f">            </span><span class="token tag script language-javascript punctuation" style="color:#393A34">}</span><span class="token tag script language-javascript punctuation" style="color:#393A34">}</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">                </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">div</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">style</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:#393A34">=</span><span class="token tag script language-javascript punctuation" style="color:#393A34">{</span><span class="token tag script language-javascript punctuation" style="color:#393A34">{</span><span class="token tag script language-javascript" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag script language-javascript" style="color:#00009f">                    opacity</span><span class="token tag script language-javascript operator" style="color:#393A34">:</span><span class="token tag script language-javascript" style="color:#00009f"> </span><span class="token tag script language-javascript template-string template-punctuation string" style="color:#e3116c">`</span><span class="token tag script language-javascript template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">${</span><span class="token tag script language-javascript template-string interpolation" style="color:#00009f">dark </span><span class="token tag script language-javascript template-string interpolation operator" style="color:#393A34">?</span><span class="token tag script language-javascript template-string interpolation" style="color:#00009f"> </span><span class="token tag script language-javascript template-string interpolation number" style="color:#36acaa">0</span><span class="token tag script language-javascript template-string interpolation" style="color:#00009f"> </span><span class="token tag script language-javascript template-string interpolation operator" style="color:#393A34">:</span><span class="token tag script language-javascript template-string interpolation" style="color:#00009f"> </span><span class="token tag script language-javascript template-string interpolation number" style="color:#36acaa">1</span><span class="token tag script language-javascript template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">}</span><span class="token tag script language-javascript template-string template-punctuation string" style="color:#e3116c">`</span><span class="token tag script language-javascript" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag script language-javascript" style="color:#00009f">                    transition</span><span class="token tag script language-javascript operator" style="color:#393A34">:</span><span class="token tag script language-javascript" style="color:#00009f"> </span><span class="token tag script language-javascript string" style="color:#e3116c">"all 0.3s ease"</span><span class="token tag script language-javascript" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag script language-javascript" style="color:#00009f">                </span><span class="token tag script language-javascript punctuation" style="color:#393A34">}</span><span class="token tag script language-javascript punctuation" style="color:#393A34">}</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">                    </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">img</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">style</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:#393A34">=</span><span class="token tag script language-javascript punctuation" style="color:#393A34">{</span><span class="token tag script language-javascript punctuation" style="color:#393A34">{</span><span class="token tag script language-javascript" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag script language-javascript" style="color:#00009f">                        src</span><span class="token tag script language-javascript operator" style="color:#393A34">:</span><span class="token tag script language-javascript" style="color:#00009f"> </span><span class="token tag script language-javascript string" style="color:#e3116c">"/light.svg"</span><span class="token tag script language-javascript" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag script language-javascript" style="color:#00009f">                    </span><span class="token tag script language-javascript punctuation" style="color:#393A34">}</span><span class="token tag script language-javascript punctuation" style="color:#393A34">}</span><span class="token tag" style="color:#00009f"> </span><span class="token tag punctuation" style="color:#393A34">/&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">                </span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">div</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">                </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">div</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">style</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:#393A34">=</span><span class="token tag script language-javascript punctuation" style="color:#393A34">{</span><span class="token tag script language-javascript punctuation" style="color:#393A34">{</span><span class="token tag script language-javascript" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag script language-javascript" style="color:#00009f">                    opacity</span><span class="token tag script language-javascript operator" style="color:#393A34">:</span><span class="token tag script language-javascript" style="color:#00009f"> </span><span class="token tag script language-javascript template-string template-punctuation string" style="color:#e3116c">`</span><span class="token tag script language-javascript template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">${</span><span class="token tag script language-javascript template-string interpolation" style="color:#00009f">dark </span><span class="token tag script language-javascript template-string interpolation operator" style="color:#393A34">?</span><span class="token tag script language-javascript template-string interpolation" style="color:#00009f"> </span><span class="token tag script language-javascript template-string interpolation number" style="color:#36acaa">1</span><span class="token tag script language-javascript template-string interpolation" style="color:#00009f"> </span><span class="token tag script language-javascript template-string interpolation operator" style="color:#393A34">:</span><span class="token tag script language-javascript template-string interpolation" style="color:#00009f"> </span><span class="token tag script language-javascript template-string interpolation number" style="color:#36acaa">0</span><span class="token tag script language-javascript template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">}</span><span class="token tag script language-javascript template-string template-punctuation string" style="color:#e3116c">`</span><span class="token tag script language-javascript" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag script language-javascript" style="color:#00009f">                    transition</span><span class="token tag script language-javascript operator" style="color:#393A34">:</span><span class="token tag script language-javascript" style="color:#00009f"> </span><span class="token tag script language-javascript string" style="color:#e3116c">"all 0.3s ease"</span><span class="token tag script language-javascript" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag script language-javascript" style="color:#00009f">                </span><span class="token tag script language-javascript punctuation" style="color:#393A34">}</span><span class="token tag script language-javascript punctuation" style="color:#393A34">}</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">                    </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">img</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">style</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:#393A34">=</span><span class="token tag script language-javascript punctuation" style="color:#393A34">{</span><span class="token tag script language-javascript punctuation" style="color:#393A34">{</span><span class="token tag script language-javascript" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag script language-javascript" style="color:#00009f">                        src</span><span class="token tag script language-javascript operator" style="color:#393A34">:</span><span class="token tag script language-javascript" style="color:#00009f"> </span><span class="token tag script language-javascript string" style="color:#e3116c">"/dark.svg"</span><span class="token tag script language-javascript" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag script language-javascript" style="color:#00009f">                    </span><span class="token tag script language-javascript punctuation" style="color:#393A34">}</span><span class="token tag script language-javascript punctuation" style="color:#393A34">}</span><span class="token tag" style="color:#00009f"> </span><span class="token tag punctuation" style="color:#393A34">/&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">                </span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">div</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">            </span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">div</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">        </span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">div</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre></div></div>]]></content>
        <author>
            <name>고현림</name>
            <uri>https://www.linkedin.com/in/%ED%98%84%EB%A6%BC-%EA%B3%A0-b53602221/</uri>
        </author>
        <category label="TIL" term="TIL"/>
        <category label="Frontend" term="Frontend"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Next.js 서버 컴포넌트와 HTML 렌더링에 대한 정확한 이해]]></title>
        <id>https://indianapoly.github.io/blog/2025/08/06/frontend/nextjs_server_component_rendering-title</id>
        <link href="https://indianapoly.github.io/blog/2025/08/06/frontend/nextjs_server_component_rendering-title"/>
        <updated>2025-08-06T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[{/ truncate /}]]></summary>
        <content type="html"><![CDATA[
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="서버에서-html을-만들어서-클라이언트에-보낸다">"서버에서 HTML을 만들어서 클라이언트에 보낸다"<a href="https://indianapoly.github.io/blog/2025/08/06/frontend/nextjs_server_component_rendering-title#%EC%84%9C%EB%B2%84%EC%97%90%EC%84%9C-html%EC%9D%84-%EB%A7%8C%EB%93%A4%EC%96%B4%EC%84%9C-%ED%81%B4%EB%9D%BC%EC%9D%B4%EC%96%B8%ED%8A%B8%EC%97%90-%EB%B3%B4%EB%82%B8%EB%8B%A4" class="hash-link" aria-label="&quot;서버에서 HTML을 만들어서 클라이언트에 보낸다&quot;에 대한 직접 링크" title="&quot;서버에서 HTML을 만들어서 클라이언트에 보낸다&quot;에 대한 직접 링크">​</a></h2>
<p>이 표현은 전통적인 SSR(서버사이드 렌더링) 방식에선 적절하지만, **Next.js의 서버 컴포넌트(Server Components)**에선 정확하지 않아요.</p>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="정확한-표현은-nextjs-rsc-기준">정확한 표현은? (Next.js RSC 기준)<a href="https://indianapoly.github.io/blog/2025/08/06/frontend/nextjs_server_component_rendering-title#%EC%A0%95%ED%99%95%ED%95%9C-%ED%91%9C%ED%98%84%EC%9D%80-nextjs-rsc-%EA%B8%B0%EC%A4%80" class="hash-link" aria-label="정확한 표현은? (Next.js RSC 기준)에 대한 직접 링크" title="정확한 표현은? (Next.js RSC 기준)에 대한 직접 링크">​</a></h2>
<blockquote>
<p>서버는 React 컴포넌트 트리를 실행하여 RSC Payload라는 직렬화된 데이터 스트림을 생성하고, 브라우저는 이를 기반으로 HTML을 점진적으로 구성하며, 클라이언트 컴포넌트는 hydration 과정을 통해 상호작용을 담당해요.</p>
</blockquote>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="비교-전통-ssr-vs-서버-컴포넌트-기반-렌더링">비교: 전통 SSR vs 서버 컴포넌트 기반 렌더링<a href="https://indianapoly.github.io/blog/2025/08/06/frontend/nextjs_server_component_rendering-title#%EB%B9%84%EA%B5%90-%EC%A0%84%ED%86%B5-ssr-vs-%EC%84%9C%EB%B2%84-%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8-%EA%B8%B0%EB%B0%98-%EB%A0%8C%EB%8D%94%EB%A7%81" class="hash-link" aria-label="비교: 전통 SSR vs 서버 컴포넌트 기반 렌더링에 대한 직접 링크" title="비교: 전통 SSR vs 서버 컴포넌트 기반 렌더링에 대한 직접 링크">​</a></h2>
<table><thead><tr><th>항목</th><th>전통 SSR</th><th>RSC (Server Components)</th></tr></thead><tbody><tr><td>HTML 생성 위치</td><td>서버에서 완성된 HTML 생성</td><td>서버에서 React 트리 직렬화</td></tr><tr><td>전송 형태</td><td>완성된 HTML</td><td>HTML 뼈대 + RSC Payload + JS 번들</td></tr><tr><td>동작 방식</td><td>한 번에 완성된 문서 전달</td><td><code>&lt;script&gt;</code>로 chunked 페이로드 전달</td></tr><tr><td>hydration</td><td>전체 또는 부분 hydration</td><td>클라이언트 컴포넌트만 hydration</td></tr><tr><td>브라우저 역할</td><td>렌더된 HTML 표시</td><td>HTML 구성 + hydration 수행</td></tr></tbody></table>
<p>표와 같이 쉽게 이해를 할 수 있어요.</p>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="rsc-payload란">RSC Payload란?<a href="https://indianapoly.github.io/blog/2025/08/06/frontend/nextjs_server_component_rendering-title#rsc-payload%EB%9E%80" class="hash-link" aria-label="RSC Payload란?에 대한 직접 링크" title="RSC Payload란?에 대한 직접 링크">​</a></h2>
<ul>
<li>서버 컴포넌트의 React 트리 렌더링 결과를 직렬화한 특수한 데이터 형식를 의미해요.</li>
<li>브라우저는 <code>&lt;script&gt;self.__next_f.push(...)&lt;/script&gt;</code> 형식으로 이를 받아 처리해줍니다.</li>
<li>이 Payload에는 아래와 같은 내용이 포함이 돼요.<!-- -->
<ul>
<li>서버 컴포넌트의 결과</li>
<li>클라이언트 컴포넌트 위치 정보</li>
<li>전달된 props 정보 등이 포함됨</li>
</ul>
</li>
</ul>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="실제-네트워크-동작">실제 네트워크 동작<a href="https://indianapoly.github.io/blog/2025/08/06/frontend/nextjs_server_component_rendering-title#%EC%8B%A4%EC%A0%9C-%EB%84%A4%ED%8A%B8%EC%9B%8C%ED%81%AC-%EB%8F%99%EC%9E%91" class="hash-link" aria-label="실제 네트워크 동작에 대한 직접 링크" title="실제 네트워크 동작에 대한 직접 링크">​</a></h2>
<ul>
<li>초기 진입 시 <code>document</code> 요청에 HTML + RSC Payload + JS 번들이 포함돼요.</li>
<li>이후 탐색 시엔 <code>.rsc</code> 또는 <code>/_next/data/...</code> 등을 통해 RSC Payload만 전송해요.</li>
<li>DevTools &gt; Network &gt; <code>document</code> &gt; Response 에서 <code>&lt;script&gt;self.__next_f.push(...)&lt;/script&gt;</code> 블록을 확인할 수 있어요.</li>
</ul>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-결론">🧠 결론<a href="https://indianapoly.github.io/blog/2025/08/06/frontend/nextjs_server_component_rendering-title#-%EA%B2%B0%EB%A1%A0" class="hash-link" aria-label="🧠 결론에 대한 직접 링크" title="🧠 결론에 대한 직접 링크">​</a></h2>
<blockquote>
<p>Next.js RSC는 "서버에서 HTML을 만든다"는 개념이 아니라, <strong>"React 트리의 결과를 직렬화하여 스트리밍"</strong> 한다는 것이 핵심이에요.</p>
</blockquote>]]></content>
        <author>
            <name>고현림</name>
            <uri>https://www.linkedin.com/in/%ED%98%84%EB%A6%BC-%EA%B3%A0-b53602221/</uri>
        </author>
        <category label="TIL" term="TIL"/>
        <category label="Frontend" term="Frontend"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Next.js 프로젝트 회고 및 서버 컴포넌트와 클라이언트 컴포넌트]]></title>
        <id>https://indianapoly.github.io/blog/2025/08/03/frontend/nextjs_15-title</id>
        <link href="https://indianapoly.github.io/blog/2025/08/03/frontend/nextjs_15-title"/>
        <updated>2025-08-03T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[개요]]></summary>
        <content type="html"><![CDATA[<h2 class="anchor anchorWithStickyNavbar_LWe7" id="개요">개요<a href="https://indianapoly.github.io/blog/2025/08/03/frontend/nextjs_15-title#%EA%B0%9C%EC%9A%94" class="hash-link" aria-label="개요에 대한 직접 링크" title="개요에 대한 직접 링크">​</a></h2>
<p>최근 실시간 주식 데이터 프로젝트를 진행할 때 <code>Next.js 15.3.2</code>를 사용해서 개발을 진행한 적이 있습니다. 이 때 돌이켜보면 NEXT.js가 유행하니깐 사용을 했었는데 왜 사용했고 이점을 보지 못한 부분이 많이 아쉬웠습니다. 이를 회고하고 어떻게 하면 수정할 수 있을지에 대해서 고민을 해보았습니다.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="개념-공부와-수정-사항-제안">개념 공부와 수정 사항 제안<a href="https://indianapoly.github.io/blog/2025/08/03/frontend/nextjs_15-title#%EA%B0%9C%EB%85%90-%EA%B3%B5%EB%B6%80%EC%99%80-%EC%88%98%EC%A0%95-%EC%82%AC%ED%95%AD-%EC%A0%9C%EC%95%88" class="hash-link" aria-label="개념 공부와 수정 사항 제안에 대한 직접 링크" title="개념 공부와 수정 사항 제안에 대한 직접 링크">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="런타임">런타임<a href="https://indianapoly.github.io/blog/2025/08/03/frontend/nextjs_15-title#%EB%9F%B0%ED%83%80%EC%9E%84" class="hash-link" aria-label="런타임에 대한 직접 링크" title="런타임에 대한 직접 링크">​</a></h3>
<p>런타임이 무엇인지 알아보았고, NEXT.js에서 런타임은 아래와 같다는 것을 알 수 있었습니다:</p>
<ul>
<li>런타임은 기본적으로 사용자가 웹페이지를 열거나, 코드가 실제로 실행되었을 때를 의미합니다. 혹은 서버에서 SSR이 일어날 때도 해당이됩니다.</li>
<li>서버 런타임 환경<!-- -->
<ul>
<li>NEXT.js 서버에서 실행되는 것읠 의미합니다.</li>
<li>서버 런타임의 실행 위치는 Node.js 혹은 Edge가 있습니다.</li>
</ul>
</li>
<li>클라이언트 런타임 환경<!-- -->
<ul>
<li>사용자의 브라우저에서 실행되는 것을 의미합니다.</li>
</ul>
</li>
</ul>
<div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token string" style="color:#e3116c">"use client"</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword module" style="color:#00009f">import</span><span class="token plain"> </span><span class="token imports punctuation" style="color:#393A34">{</span><span class="token imports"> useEffect </span><span class="token imports punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword module" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"react"</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> </span><span class="token function-variable function maybe-class-name" style="color:#d73a49">ClientComponent</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token arrow operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token function" style="color:#d73a49">useEffect</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token arrow operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token console class-name">console</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">log</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"브라우저에서 실행이 됩니다."</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword control-flow" style="color:#00009f">return</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&lt;</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain">client component</span><span class="token operator" style="color:#393A34">&lt;</span><span class="token operator" style="color:#393A34">/</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre></div></div>
<div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> </span><span class="token function-variable function maybe-class-name" style="color:#d73a49">Page</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">async</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token arrow operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> response </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword control-flow" style="color:#00009f">await</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">fetch</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"api url"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token literal-property property" style="color:#36acaa">cache</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"no-store"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> data </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword control-flow" style="color:#00009f">await</span><span class="token plain"> response</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">json</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword control-flow" style="color:#00009f">return</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain">div</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">data</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">length</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain">개의 데이터</span><span class="token operator" style="color:#393A34">&lt;</span><span class="token operator" style="color:#393A34">/</span><span class="token plain">div</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre></div></div>
<p>해당 코드에서의 클라이언트 컴포넌트는 클라이언트 런타임 환경이고 즉 브라우저에서 실행이 되는 코드입니다. 하지만 Page 컴포넌트를 보게 되면 해당 코드는 서버에서 먼저 실행이 되고 이후 HTML 결과를 브라우저에 전달을 해줍니다.</p>
<p>이처럼 서버 컴포넌트와 클라이언트 컴포넌트는 실행되는 위치가 다르고 이에 따라 적절하고 사용해주는 것이 중요합니다.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="이전-내가-코드를-작성했던-로직-및-변경-사항-고민">이전 내가 코드를 작성했던 로직 및 변경 사항 고민<a href="https://indianapoly.github.io/blog/2025/08/03/frontend/nextjs_15-title#%EC%9D%B4%EC%A0%84-%EB%82%B4%EA%B0%80-%EC%BD%94%EB%93%9C%EB%A5%BC-%EC%9E%91%EC%84%B1%ED%96%88%EB%8D%98-%EB%A1%9C%EC%A7%81-%EB%B0%8F-%EB%B3%80%EA%B2%BD-%EC%82%AC%ED%95%AD-%EA%B3%A0%EB%AF%BC" class="hash-link" aria-label="이전 내가 코드를 작성했던 로직 및 변경 사항 고민에 대한 직접 링크" title="이전 내가 코드를 작성했던 로직 및 변경 사항 고민에 대한 직접 링크">​</a></h3>
<p>실시간 주식 데이터 그래프를 시각화 하는 과정에서 모든 로직을 <code>use client</code>로 설정하여 구현하였습니다. 하지만 이렇게 하게 되면</p>
<ol>
<li>NEXT.js의 강점인 초기 렌더링 속도</li>
<li>SEO 및 포퍼먼스</li>
</ol>
<p>이 2개의 강점을 가져오지 못한다는 점을 알게 되었습니다. 하지만 <code>use client</code>를 사용하지 않으면 서버 컴포넌트는 reChart 라이브러리와 호환이 되지 않는다는 것을 알게 되었습니다. 그럼에도 해당 분기를 통해 처리를 하게 된다면 javascript 파일의 크기를 줄일 수 있어, 충분히 가치가 있을 것이라도 판단을 하였습니다.</p>
<p>따라서 전체적인 흐름을 아래와 같이 구성해보았습니다.</p>
<div class="language-md codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-md codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">[1] 사용자가 페이지에 접근</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">[2] 기존에 클라이언트 컴포넌트에서 시간을 처리하던 것을 서버 컴포넌트로 가져와 데이터를 처리</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token list punctuation" style="color:#393A34">-</span><span class="token plain"> 열려 있음: 직전 데이터 1개만 fetch</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token list punctuation" style="color:#393A34">-</span><span class="token plain"> 닫혀 있음: 지난 데이터 목록 fetch</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">[3] 장이 열려있을 때와 닫혀있을 때 그래프를 분기하여 처리합니다.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">[4] 클라이언트 컴포넌트에서 실시간 데이터 요청 시작 (useSWR, 3초마다)</span><br></span></code></pre></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="수정-방향">수정 방향<a href="https://indianapoly.github.io/blog/2025/08/03/frontend/nextjs_15-title#%EC%88%98%EC%A0%95-%EB%B0%A9%ED%96%A5" class="hash-link" aria-label="수정 방향에 대한 직접 링크" title="수정 방향에 대한 직접 링크">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="page-코드-수정">Page 코드 수정<a href="https://indianapoly.github.io/blog/2025/08/03/frontend/nextjs_15-title#page-%EC%BD%94%EB%93%9C-%EC%88%98%EC%A0%95" class="hash-link" aria-label="Page 코드 수정에 대한 직접 링크" title="Page 코드 수정에 대한 직접 링크">​</a></h3>
<ol>
<li>이전 Page 소스코드</li>
</ol>
<div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword module" style="color:#00009f">import</span><span class="token plain"> </span><span class="token imports punctuation" style="color:#393A34">{</span><span class="token imports"> notFound </span><span class="token imports punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword module" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"next/navigation"</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword module" style="color:#00009f">import</span><span class="token plain"> </span><span class="token imports punctuation" style="color:#393A34">{</span><span class="token imports"> </span><span class="token imports maybe-class-name">StockGraph</span><span class="token imports"> </span><span class="token imports punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword module" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"@/components/stock/StockGraph"</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> </span><span class="token function-variable function maybe-class-name" style="color:#d73a49">StockDetailPage</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">async</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter punctuation" style="color:#393A34">{</span><span class="token parameter"></span><br></span><span class="token-line" style="color:#393A34"><span class="token parameter">  params</span><span class="token parameter punctuation" style="color:#393A34">,</span><span class="token parameter"></span><br></span><span class="token-line" style="color:#393A34"><span class="token parameter"></span><span class="token parameter punctuation" style="color:#393A34">}</span><span class="token parameter operator" style="color:#393A34">:</span><span class="token parameter"> </span><span class="token parameter punctuation" style="color:#393A34">{</span><span class="token parameter"></span><br></span><span class="token-line" style="color:#393A34"><span class="token parameter">  </span><span class="token parameter literal-property property" style="color:#36acaa">params</span><span class="token parameter operator" style="color:#393A34">:</span><span class="token parameter"> </span><span class="token parameter known-class-name class-name">Promise</span><span class="token parameter operator" style="color:#393A34">&lt;</span><span class="token parameter punctuation" style="color:#393A34">{</span><span class="token parameter"> </span><span class="token parameter literal-property property" style="color:#36acaa">id</span><span class="token parameter operator" style="color:#393A34">:</span><span class="token parameter"> string </span><span class="token parameter punctuation" style="color:#393A34">}</span><span class="token parameter operator" style="color:#393A34">&gt;</span><span class="token parameter punctuation" style="color:#393A34">,</span><span class="token parameter"></span><br></span><span class="token-line" style="color:#393A34"><span class="token parameter"></span><span class="token parameter punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token arrow operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> id </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword control-flow" style="color:#00009f">await</span><span class="token plain"> params</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword control-flow" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">!</span><span class="token plain">id</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword control-flow" style="color:#00009f">return</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">notFound</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">// ...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword control-flow" style="color:#00009f">return</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain">div className</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">"p-8"</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token operator" style="color:#393A34">&lt;</span><span class="token maybe-class-name">StockGraph</span><span class="token plain"> symbol</span><span class="token operator" style="color:#393A34">=</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">id</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">/</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token operator" style="color:#393A34">&lt;</span><span class="token operator" style="color:#393A34">/</span><span class="token plain">div</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword module" style="color:#00009f">export</span><span class="token plain"> </span><span class="token keyword module" style="color:#00009f">default</span><span class="token plain"> </span><span class="token maybe-class-name">StockDetailPage</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre></div></div>
<ol start="2">
<li>변경된 Page 소스 코드</li>
</ol>
<ul>
<li>GraphWrapper 컴포넌트를 만들어서 관리해주도록 하였습니다.</li>
</ul>
<div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword module" style="color:#00009f">import</span><span class="token plain"> </span><span class="token imports punctuation" style="color:#393A34">{</span><span class="token imports"> notFound </span><span class="token imports punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword module" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"next/navigation"</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword module" style="color:#00009f">import</span><span class="token plain"> </span><span class="token imports punctuation" style="color:#393A34">{</span><span class="token imports"> </span><span class="token imports maybe-class-name">StockGraph</span><span class="token imports"> </span><span class="token imports punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword module" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"@/components/stock/StockGraph"</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> </span><span class="token function-variable function maybe-class-name" style="color:#d73a49">StockDetailPage</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">async</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter punctuation" style="color:#393A34">{</span><span class="token parameter"></span><br></span><span class="token-line" style="color:#393A34"><span class="token parameter">  params</span><span class="token parameter punctuation" style="color:#393A34">,</span><span class="token parameter"></span><br></span><span class="token-line" style="color:#393A34"><span class="token parameter"></span><span class="token parameter punctuation" style="color:#393A34">}</span><span class="token parameter operator" style="color:#393A34">:</span><span class="token parameter"> </span><span class="token parameter punctuation" style="color:#393A34">{</span><span class="token parameter"></span><br></span><span class="token-line" style="color:#393A34"><span class="token parameter">  </span><span class="token parameter literal-property property" style="color:#36acaa">params</span><span class="token parameter operator" style="color:#393A34">:</span><span class="token parameter"> </span><span class="token parameter known-class-name class-name">Promise</span><span class="token parameter operator" style="color:#393A34">&lt;</span><span class="token parameter punctuation" style="color:#393A34">{</span><span class="token parameter"> </span><span class="token parameter literal-property property" style="color:#36acaa">id</span><span class="token parameter operator" style="color:#393A34">:</span><span class="token parameter"> string </span><span class="token parameter punctuation" style="color:#393A34">}</span><span class="token parameter operator" style="color:#393A34">&gt;</span><span class="token parameter punctuation" style="color:#393A34">,</span><span class="token parameter"></span><br></span><span class="token-line" style="color:#393A34"><span class="token parameter"></span><span class="token parameter punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token arrow operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> id </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword control-flow" style="color:#00009f">await</span><span class="token plain"> params</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword control-flow" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">!</span><span class="token plain">id</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword control-flow" style="color:#00009f">return</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">notFound</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">// ...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword control-flow" style="color:#00009f">return</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain">div className</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">"p-8"</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token operator" style="color:#393A34">&lt;</span><span class="token maybe-class-name">GraphWrapper</span><span class="token plain"> symbol</span><span class="token operator" style="color:#393A34">=</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">id</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">/</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token operator" style="color:#393A34">&lt;</span><span class="token operator" style="color:#393A34">/</span><span class="token plain">div</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword module" style="color:#00009f">export</span><span class="token plain"> </span><span class="token keyword module" style="color:#00009f">default</span><span class="token plain"> </span><span class="token maybe-class-name">StockDetailPage</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="graphwrapper-서버-컴포넌트-추가-제작">GraphWrapper 서버 컴포넌트 추가 제작<a href="https://indianapoly.github.io/blog/2025/08/03/frontend/nextjs_15-title#graphwrapper-%EC%84%9C%EB%B2%84-%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8-%EC%B6%94%EA%B0%80-%EC%A0%9C%EC%9E%91" class="hash-link" aria-label="GraphWrapper 서버 컴포넌트 추가 제작에 대한 직접 링크" title="GraphWrapper 서버 컴포넌트 추가 제작에 대한 직접 링크">​</a></h3>
<ul>
<li>GraphWrapper 서버 컴포넌트를 만들고 해당 서버 컴포넌트에서 장 열림여부와 가져와야하는 데이터 및 그래프를 분기하도록 하였습니다.</li>
<li>이렇게 하게 되면 StaticStockGraph에서는 불필요한 로직 등이 제거되어 클라이언트 컴포넌트로 실행이 되기 떄문에 자바스크립트 파일 크기를 줄일 수 있다는 점이 있습니다.</li>
</ul>
<div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> </span><span class="token function-variable function maybe-class-name" style="color:#d73a49">GraphWrapper</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter punctuation" style="color:#393A34">{</span><span class="token parameter">symbol</span><span class="token parameter punctuation" style="color:#393A34">}</span><span class="token parameter"> </span><span class="token parameter operator" style="color:#393A34">:</span><span class="token parameter"> </span><span class="token parameter punctuation" style="color:#393A34">{</span><span class="token parameter literal-property property" style="color:#36acaa">symbol</span><span class="token parameter operator" style="color:#393A34">:</span><span class="token parameter"> string</span><span class="token parameter punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token arrow operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> marketStatus </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">isMarketOpen</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">let</span><span class="token plain"> data</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword control-flow" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">marketStatus</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        data </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword control-flow" style="color:#00009f">await</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">getLastKnownStock</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">symbol</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword control-flow" style="color:#00009f">return</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&lt;</span><span class="token maybe-class-name">LiveStockGraph</span><span class="token plain"> symbol</span><span class="token operator" style="color:#393A34">=</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">id</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> initialData</span><span class="token operator" style="color:#393A34">=</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">data</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">/</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword control-flow" style="color:#00009f">else</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        data </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword control-flow" style="color:#00009f">await</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">getPreviousStockGraph</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">symbol</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword control-flow" style="color:#00009f">return</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&lt;</span><span class="token maybe-class-name">StaticStockGraph</span><span class="token plain"> data</span><span class="token operator" style="color:#393A34">=</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">data</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">/</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="회고를-진행하면서-느낀-점">회고를 진행하면서 느낀 점<a href="https://indianapoly.github.io/blog/2025/08/03/frontend/nextjs_15-title#%ED%9A%8C%EA%B3%A0%EB%A5%BC-%EC%A7%84%ED%96%89%ED%95%98%EB%A9%B4%EC%84%9C-%EB%8A%90%EB%82%80-%EC%A0%90" class="hash-link" aria-label="회고를 진행하면서 느낀 점에 대한 직접 링크" title="회고를 진행하면서 느낀 점에 대한 직접 링크">​</a></h2>
<p>단순하게 생각해보면 Wrapper 컴포넌트를 만들고 분기한 거 말고 화려한 비즈니스 로직이 들어가있지는 않았습니다.</p>
<p>하지만 NEXT.js에서 서버 컴포넌트와 클라이언트 컴포넌트가 무엇인지 이해하고 제가 작성한 코드를 처음으로 분석해보았던거 같습니다. 특히 NEXT.js의 런타임 관점에서 코드를 바라보고 왜 NEXT.js에서 서버 컴포넌트를 사용하는지 그리고 클라이언트 컴포넌트에 너무 많이 의존하는 코드가 작성되는 것 역시 지양되는 것이 좋다고 생각을 하였습니다.</p>
<p>이번을 계기로 기준을 명확히 하여 작업을 진행하는 작업이 정말 중요하다는 것을 배운거 같습니다.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="참고-자료">참고 자료<a href="https://indianapoly.github.io/blog/2025/08/03/frontend/nextjs_15-title#%EC%B0%B8%EA%B3%A0-%EC%9E%90%EB%A3%8C" class="hash-link" aria-label="참고 자료에 대한 직접 링크" title="참고 자료에 대한 직접 링크">​</a></h2>
<a href="https://nextjs-ko.org/docs/app/building-your-application/rendering/edge-and-nodejs-runtimes"><p>NEXT.js 런타임 종류</p></a>]]></content>
        <author>
            <name>고현림</name>
            <uri>https://www.linkedin.com/in/%ED%98%84%EB%A6%BC-%EA%B3%A0-b53602221/</uri>
        </author>
        <category label="TIL" term="TIL"/>
        <category label="Frontend" term="Frontend"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Terraform Basic(2)]]></title>
        <id>https://indianapoly.github.io/blog/2025/08/03/terraform/terraform-basic-2-title</id>
        <link href="https://indianapoly.github.io/blog/2025/08/03/terraform/terraform-basic-2-title"/>
        <updated>2025-08-03T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[{/ truncate /}]]></summary>
        <content type="html"><![CDATA[
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="상태-관리">상태 관리<a href="https://indianapoly.github.io/blog/2025/08/03/terraform/terraform-basic-2-title#%EC%83%81%ED%83%9C-%EA%B4%80%EB%A6%AC" class="hash-link" aria-label="상태 관리에 대한 직접 링크" title="상태 관리에 대한 직접 링크">​</a></h2>
<p>테라폼은 자신이 담당하는 인프라가 무엇인지 어떻게 알까요? 그것을 한 번 알아보고자 합니다.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="테라폼의-상태란">테라폼의 상태란?<a href="https://indianapoly.github.io/blog/2025/08/03/terraform/terraform-basic-2-title#%ED%85%8C%EB%9D%BC%ED%8F%BC%EC%9D%98-%EC%83%81%ED%83%9C%EB%9E%80" class="hash-link" aria-label="테라폼의 상태란?에 대한 직접 링크" title="테라폼의 상태란?에 대한 직접 링크">​</a></h3>
<p>테라폼을 실행할 때마다 테라폼 상태 파일에 생성된 인프라에 대한 정보가 같이 기록이 돼요.</p>
<p><code>/foo/bar</code> 폴더 내부의 .tf 파일을 실행을 하게 되면 해당 폴더 내부에 <code>/terraform.tfstate</code> 파일을 생성해요. 해당 파일에는 trrraform 리소스에서 실제 소스 표현으로의 매핑을 기록이 되어있어요.</p>
<div class="language-tf codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-tf codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">resource "aws_instance" "example" {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    ami = "ami-..."</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    instance_type = "t2.micro"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre></div></div>
<p>해당 테라폼 코드를 실행을 하고 .tfstate 파일을 확인해보면</p>
<div class="language-json codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-json codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token property" style="color:#36acaa">"instance"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token property" style="color:#36acaa">"attributes"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token property" style="color:#36acaa">"ami"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"ami-..."</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token property" style="color:#36acaa">"id"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"i-..."</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre></div></div>
<p>이런식으로 json이 작성이 된 것을 확인할 수 있어요. 이 때 아이디는 실제 aws ec2 인스턴스의 아이디를 의미해요. 따라서 테라폼을 실행할 때마다 aws에서 ec2 인스턴스의 최신 상태를 가져오고 이를 테라폼 구성의 내용과 비교하여 적용해야 할 변경 사항을 결정할 수 있어요.</p>
<p>상태 파일은 비공개 API에요. 이를 직접적으로 편집하거나 직접 읽는 코드를 작성하면 안돼요. 조작해야하는 경우에는 <code>terraform import</code>, <code>terraform state</code> 명령을 사용해주면 돼요.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="tfstate-공유">.tfstate 공유<a href="https://indianapoly.github.io/blog/2025/08/03/terraform/terraform-basic-2-title#tfstate-%EA%B3%B5%EC%9C%A0" class="hash-link" aria-label=".tfstate 공유에 대한 직접 링크" title=".tfstate 공유에 대한 직접 링크">​</a></h3>
<p>테라폼을 개인 프로젝트에서 사용을 하면 문제가 없는데, 실제 제품에서 팀으로 테라폼을 사용하게 되면 아래와 같은 문제에 직면해요.</p>
<ol>
<li>상태 파일을 위한 공유 저장소 : 테라폼을 사용하여 인프라를 업데이트하려면 각 팀 구성원이 동일한 테라폼 상태 파일에 액세스 해야해요. 이는 해당 파일을 공유 위치에 <code>저장</code> 해야하는 것을 의미해요.</li>
<li>상태 파일 잠금 : 잠금 없이 팀 구성원이 동시에 테라폼 코드를 실행하는 경우 테라폼 프로세스가 동시에 업데이트하여 충돌할 수 있어요.</li>
<li>상태 파일 격리 : 인프라를 변경할 때는 다양한 환경을 격리하는 것이 모범적이에요.</li>
</ol>
<p>해당 문제에 대해서 아래와 같이 해결 할 수가 있어요.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="상태-파일을-위한-공유-저장소">상태 파일을 위한 공유 저장소<a href="https://indianapoly.github.io/blog/2025/08/03/terraform/terraform-basic-2-title#%EC%83%81%ED%83%9C-%ED%8C%8C%EC%9D%BC%EC%9D%84-%EC%9C%84%ED%95%9C-%EA%B3%B5%EC%9C%A0-%EC%A0%80%EC%9E%A5%EC%86%8C" class="hash-link" aria-label="상태 파일을 위한 공유 저장소에 대한 직접 링크" title="상태 파일을 위한 공유 저장소에 대한 직접 링크">​</a></h2>
<p>보통은 공통된 것에 엑세스를 할 때는 git과 같은 것에 두는게 좋아요. 하지만 테라폼 코드를 버전 제어에 저장하는 것은 아래와 같은 이유로 좋지 않아요:\</p>
<ul>
<li>수동작업에 대한 오류<!-- -->
<ul>
<li>테라폼을 실행하기 전 버전 제어에서 최신 변경 사항을 풀다운하거나, 실행한 이후에 최신 변경사항을 푸쉬하는 것을 잊어버리기 쉬워요. 팀의 누군가가 오래된 파일을 실행하여 이전 배포로 롤백하거나 할 수 있기 때문이에요.</li>
</ul>
</li>
<li>잠금<!-- -->
<ul>
<li>대부분의 버전 제어 시스템들은 동일한 상태 파일에 대해서 apply하는 것을 방지해주지 않아요.</li>
</ul>
</li>
<li>비밀<!-- -->
<ul>
<li>테라폼의 상태 파일은 기본적으로 일반 텍스트로 저장이 되기 때문에 민감한 데이터가 들어갈 수도 있어요.</li>
</ul>
</li>
</ul>
<p>버전 제이 시스템을 사용하는 것보다 제일 좋은 방법은 <code>원격 백엔드</code>를 사용하는게 좋아요. 기본 백엔드는 로컬 디스크에 상태 파일을 저장하는 로컬 백엔드이고 원격 백엔드는 원격 공유 저장소에 저장할 수 있어요.</p>
<p>대표적으로는 AWS S#, Azure Storage, Google Cloud Storage 가 있어요.</p>
<p>원격 백엔드를 사용을 하면 위의 문제를 해결할 수 있어요.</p>
<ul>
<li>수동작업에 대한 오류<!-- -->
<ul>
<li>원격 백엔드를 구성하고 plan 혹은 apply를 하면 해당 백엔드에 상태 파일을 자동으로 로드하고 상태파일을 저장해주기 때문에 오류가 발생할 가능성이 없어요.</li>
</ul>
</li>
<li>잠금<!-- -->
<ul>
<li>원격 백엔드는 기본적으로 잠금을 지원요. terraform apply를 실행하기 위해 테라폼은 자동으로 잠금이 됩니다.</li>
</ul>
</li>
<li>비밀<!-- -->
<ul>
<li>원격 백엔드는 기본적으로 전송 ㅅ중 암호화와 나머지 상태 파일 암호화를 지원해줍니다.</li>
</ul>
</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="실습">실습<a href="https://indianapoly.github.io/blog/2025/08/03/terraform/terraform-basic-2-title#%EC%8B%A4%EC%8A%B5" class="hash-link" aria-label="실습에 대한 직접 링크" title="실습에 대한 직접 링크">​</a></h3>
<div class="language-tf codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-tf codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">provider "aws" {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    region = "ap-northeast-2"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">resoure "aws_s3_bucket" "terraform_state" {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    bucket = "terraform-state-alias"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    lifecycle {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        prevent_destroy = true</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre></div></div>
<p>버킷 이름을 지정하고 <code>prevent_destroy</code> 설정을 두어 삭제를 방지해줄 수 있어요.</p>
<p>그다음에 몇 가지 보호 계층을 추가해줍니다.</p>
<ol>
<li>버저닝 리소스를 사용하면 버킷의 파일을 업데이트 할 대마다 해당 파일의 새 버전이 생성돼요. 이를 통해서 이전 버전으로 돌릴 수 있어요.</li>
<li>server_side_encryption_configuration을 사용하여 기록되는 모든 데이터에 대해서 서버 측 암호화를 활성화 해요.</li>
<li>public_access_block을 사용해서 모든 퍼블릭 엑세스를 차단합니다.</li>
</ol>
<div class="language-tf codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-tf codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">resource "aws_s3_bucket_versioning" "enabled" {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    bucket = aws_s3_bucket.terraform_state.id</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    versioning_configuration {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        status = "Enabled"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">resource "aws_s3_bucket_server_side_encryption_configuration" "default" {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    bucket = aws_s3_bucket.terraform_state.id</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    rule {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        apply_server_side_encryption_by_default {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            sse_algorithm = "AES256"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">resource "aws_s3_bucket_public_access_block" "public_access" {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    bucket = aws_s3_bucket.terraform_state.id</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    block_public_acls = true</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    block_public_policy = true</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    ignore_public_acls = true</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    restrict_public_buckets = true</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre></div></div>
<p>그 다음에는 dynamoDB를 생성해줍니다. dynamoDB는 NoSQL DB의 일종으로 동시에 여러 사용자가 실행했을 때 발생할 수 있는 충돌을 방지해줍니다.</p>
<div class="language-tf codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-tf codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">resource "aws_dynamodb_table" "terraform_locks" {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  name = "terraform-locks"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  billing_mode = "PAY_PER_REQUEST"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  hash_key = "LockID"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  attribute {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    name = "LockID"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    type = "S"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre></div></div>
<p>기초적인 작업은 모두 마무리했어요. 그런데 해당 상태로만 지정을 해두고 실행을 하면 아직은 로컬 백엔드 환경이에요. 이제 원격 백엔드로 지정을 해주도록 해볼께요.</p>
<p>해당 코드는 제일 최상단에 지정해주면 돼요. 여기에 들어가는 값들은 위에서 지정한 이름들을 하드코딩해주면 됩니다. (더 좋은 방법 충분히 있다고 생각해요.)</p>
<div class="language-tf codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-tf codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">terraform {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    backend "s3" {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        bucket = "terraform-state"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        key = "global/s3/terraform.tfstate"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        region = "ap-northeast-2"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        dynamodb_table = "terraform-locks"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        encrypt = true</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre></div></div>
<p>삭제를 하기 위해서는</p>
<ol>
<li>백엔드 구성을 제거하고 init을 실행합니다.</li>
<li>terraform destroy를 실행하여 리소스를 삭제합니다.</li>
</ol>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="상태-파일-격리">상태 파일 격리<a href="https://indianapoly.github.io/blog/2025/08/03/terraform/terraform-basic-2-title#%EC%83%81%ED%83%9C-%ED%8C%8C%EC%9D%BC-%EA%B2%A9%EB%A6%AC" class="hash-link" aria-label="상태 파일 격리에 대한 직접 링크" title="상태 파일 격리에 대한 직접 링크">​</a></h2>
<p>위와 같이 진행을 해준다면 협업에서는 문제가 안돼요. 하지만 격리 부분에 있어서는 문제가 있습니다.</p>
<p>단일 파일 내에서 모든 리소스를 관리를 하게 되버리면 스테이징 단꼐에서 배포를 시도하다가 프로덕션 단계에서 앱이 중된될 수도 있고, 버그로 인해 모든 리소스가 손상될 수도 있어요.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="작업-공간을-통한-격리">작업 공간을 통한 격리<a href="https://indianapoly.github.io/blog/2025/08/03/terraform/terraform-basic-2-title#%EC%9E%91%EC%97%85-%EA%B3%B5%EA%B0%84%EC%9D%84-%ED%86%B5%ED%95%9C-%EA%B2%A9%EB%A6%AC" class="hash-link" aria-label="작업 공간을 통한 격리에 대한 직접 링크" title="작업 공간을 통한 격리에 대한 직접 링크">​</a></h3>
<p>terraform workspace를 사용하면 테라폼 상태를 별도의 이름이 지정된 여러 작업 공간에 저장할 수 있어요.</p>
<p>작업 공간을 명시하지 않으면 기본 작업 공간이 전체 시간 동안 사용돼요.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="실습-1">실습<a href="https://indianapoly.github.io/blog/2025/08/03/terraform/terraform-basic-2-title#%EC%8B%A4%EC%8A%B5-1" class="hash-link" aria-label="실습에 대한 직접 링크" title="실습에 대한 직접 링크">​</a></h3>
<p>앞서 작업한 부분에서 key를 workspaces-example/terraform.tfstate로 만 수정을 해줍니다.</p>
<div class="language-tf codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-tf codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">terraform {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    backend "s3" {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        bucket = "terraform-state"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        key = "workspaces-example/terraform.tfstate"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        region = "us-east-2"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        dynamodb_table = "terraform-locks"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        encrypt = true</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre></div></div>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">terraform init</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">terraform apply</span><br></span></code></pre></div></div>
<p>위 명령으로 코드를 배포해줍니다.</p>
<p>그 다음에</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">terraform workspace new example1</span><br></span></code></pre></div></div>
<p>을 실행시켜 새 작업 공간을 만들어요 그리고 <code>terraform plan</code> 명령을 실행하면 새로운 ec2를 처음부터 생성하는 것을 확인할 수 있어요.</p>
<p><code>terraform apply</code>를 실행하면 새 작업 공간에 인스턴스가 배포된 것을 확인할 수 있어요.</p>
<p>아래 명령어를 통해서 작업 공간을 바꾸어줄 수 있어요.</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">terraform workspace select default</span><br></span></code></pre></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="파일-레이아웃을-통한-격리">파일 레이아웃을 통한 격리<a href="https://indianapoly.github.io/blog/2025/08/03/terraform/terraform-basic-2-title#%ED%8C%8C%EC%9D%BC-%EB%A0%88%EC%9D%B4%EC%95%84%EC%9B%83%EC%9D%84-%ED%86%B5%ED%95%9C-%EA%B2%A9%EB%A6%AC" class="hash-link" aria-label="파일 레이아웃을 통한 격리에 대한 직접 링크" title="파일 레이아웃을 통한 격리에 대한 직접 링크">​</a></h3>
<p>환경을 완전히 격리하려면 다음과 같이 수행해주면 돼요.</p>
<ol>
<li>각 환경의 테라폼 구성 파일을 별도의 폴더에 넣어요.</li>
<li>서로 다른 인증 매커니즘과 액세스 제어를 사용하여 각 환경에 대한 서로 다른 백엔드를 구성해주어요.</li>
</ol>
<p>테라폼 프로젝트는 환경 -&gt; 구성요소 -&gt; 구성파일의 계층 구조로 관리를 진행해요</p>
<div class="language-md codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-md codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token title important punctuation" style="color:#393A34">##</span><span class="token title important"> 최상위 환경 디렉토리</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token list punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token code-snippet code keyword" style="color:#00009f">`global`</span><span class="token plain"> : 모든 환경에서 공통 사용 (예: S3, IAM)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token list punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token code-snippet code keyword" style="color:#00009f">`mgmt`</span><span class="token plain"> : DevOps 도구 및 인프라 관리 (예: 배스천, CI 서버)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token list punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token code-snippet code keyword" style="color:#00009f">`stage`</span><span class="token plain"> : 테스트/사전 프로덕션 환경</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token list punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token code-snippet code keyword" style="color:#00009f">`prod`</span><span class="token plain"> : 실제 운영 환경</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token title important punctuation" style="color:#393A34">##</span><span class="token title important"> 환경 내 구성요소 디렉토래</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token list punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token code-snippet code keyword" style="color:#00009f">`vpc/`</span><span class="token plain"> : 네트워크 토폴로지 정의</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token list punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token code-snippet code keyword" style="color:#00009f">`services/`</span><span class="token plain"> : 서비스 또는 앱 (예: 웹 서버, API 등)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token list punctuation" style="color:#393A34">-</span><span class="token plain"> ex. </span><span class="token code-snippet code keyword" style="color:#00009f">`services/frontend/`</span><span class="token plain">, </span><span class="token code-snippet code keyword" style="color:#00009f">`services/backend/`</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token list punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token code-snippet code keyword" style="color:#00009f">`data-storage/`</span><span class="token plain"> : 데이터 저장소</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token list punctuation" style="color:#393A34">-</span><span class="token plain"> ex. </span><span class="token code-snippet code keyword" style="color:#00009f">`data-storage/mysql/`</span><span class="token plain">, </span><span class="token code-snippet code keyword" style="color:#00009f">`data-storage/redis/`</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token title important punctuation" style="color:#393A34">##</span><span class="token title important"> 구성 요소 내 파일 구성</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token table table-header-row punctuation" style="color:#393A34">|</span><span class="token table table-header-row table-header important"> 파일명            </span><span class="token table table-header-row punctuation" style="color:#393A34">|</span><span class="token table table-header-row table-header important"> 역할                          </span><span class="token table table-header-row punctuation" style="color:#393A34">|</span><span class="token table table-header-row"></span><br></span><span class="token-line" style="color:#393A34"><span class="token table table-header-row"></span><span class="token table table-line punctuation" style="color:#393A34">|</span><span class="token table table-line"> </span><span class="token table table-line punctuation" style="color:#393A34">-----------------</span><span class="token table table-line"> </span><span class="token table table-line punctuation" style="color:#393A34">|</span><span class="token table table-line"> </span><span class="token table table-line punctuation" style="color:#393A34">-----------------------------</span><span class="token table table-line"> </span><span class="token table table-line punctuation" style="color:#393A34">|</span><span class="token table table-line"></span><br></span><span class="token-line" style="color:#393A34"><span class="token table table-line"></span><span class="token table table-data-rows punctuation" style="color:#393A34">|</span><span class="token table table-data-rows table-data"> </span><span class="token table table-data-rows table-data code-snippet code keyword" style="color:#00009f">`main.tf`</span><span class="token table table-data-rows table-data">         </span><span class="token table table-data-rows punctuation" style="color:#393A34">|</span><span class="token table table-data-rows table-data"> 주요 리소스 정의              </span><span class="token table table-data-rows punctuation" style="color:#393A34">|</span><span class="token table table-data-rows"></span><br></span><span class="token-line" style="color:#393A34"><span class="token table table-data-rows"></span><span class="token table table-data-rows punctuation" style="color:#393A34">|</span><span class="token table table-data-rows table-data"> </span><span class="token table table-data-rows table-data code-snippet code keyword" style="color:#00009f">`variables.tf`</span><span class="token table table-data-rows table-data">    </span><span class="token table table-data-rows punctuation" style="color:#393A34">|</span><span class="token table table-data-rows table-data"> 입력 변수 정의                </span><span class="token table table-data-rows punctuation" style="color:#393A34">|</span><span class="token table table-data-rows"></span><br></span><span class="token-line" style="color:#393A34"><span class="token table table-data-rows"></span><span class="token table table-data-rows punctuation" style="color:#393A34">|</span><span class="token table table-data-rows table-data"> </span><span class="token table table-data-rows table-data code-snippet code keyword" style="color:#00009f">`outputs.tf`</span><span class="token table table-data-rows table-data">      </span><span class="token table table-data-rows punctuation" style="color:#393A34">|</span><span class="token table table-data-rows table-data"> 출력 변수 정의                </span><span class="token table table-data-rows punctuation" style="color:#393A34">|</span><span class="token table table-data-rows"></span><br></span><span class="token-line" style="color:#393A34"><span class="token table table-data-rows"></span><span class="token table table-data-rows punctuation" style="color:#393A34">|</span><span class="token table table-data-rows table-data"> </span><span class="token table table-data-rows table-data code-snippet code keyword" style="color:#00009f">`providers.tf`</span><span class="token table table-data-rows table-data">    </span><span class="token table table-data-rows punctuation" style="color:#393A34">|</span><span class="token table table-data-rows table-data"> provider 설정 정의            </span><span class="token table table-data-rows punctuation" style="color:#393A34">|</span><span class="token table table-data-rows"></span><br></span><span class="token-line" style="color:#393A34"><span class="token table table-data-rows"></span><span class="token table table-data-rows punctuation" style="color:#393A34">|</span><span class="token table table-data-rows table-data"> </span><span class="token table table-data-rows table-data code-snippet code keyword" style="color:#00009f">`dependencies.tf`</span><span class="token table table-data-rows table-data"> </span><span class="token table table-data-rows punctuation" style="color:#393A34">|</span><span class="token table table-data-rows table-data"> 외부 데이터 소스 및 참조 정의 </span><span class="token table table-data-rows punctuation" style="color:#393A34">|</span><br></span></code></pre></div></div>]]></content>
        <author>
            <name>고현림</name>
            <uri>https://www.linkedin.com/in/%ED%98%84%EB%A6%BC-%EA%B3%A0-b53602221/</uri>
        </author>
        <category label="TIL" term="TIL"/>
        <category label="Terraform" term="Terraform"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Terraform Basic(1)]]></title>
        <id>https://indianapoly.github.io/blog/2025/08/01/terraform/traform-basic-1-title</id>
        <link href="https://indianapoly.github.io/blog/2025/08/01/terraform/traform-basic-1-title"/>
        <updated>2025-08-01T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[{/ truncate /}]]></summary>
        <content type="html"><![CDATA[
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="개념-학습">개념 학습<a href="https://indianapoly.github.io/blog/2025/08/01/terraform/traform-basic-1-title#%EA%B0%9C%EB%85%90-%ED%95%99%EC%8A%B5" class="hash-link" aria-label="개념 학습에 대한 직접 링크" title="개념 학습에 대한 직접 링크">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="태라폼-소개">태라폼 소개<a href="https://indianapoly.github.io/blog/2025/08/01/terraform/traform-basic-1-title#%ED%83%9C%EB%9D%BC%ED%8F%BC-%EC%86%8C%EA%B0%9C" class="hash-link" aria-label="태라폼 소개에 대한 직접 링크" title="태라폼 소개에 대한 직접 링크">​</a></h3>
<ul>
<li>구성 파일을 사용하여 버전 관리와 재사용 및 공유 기능을 제공해요. 클라우드 및 온프레미스 리소스를 모두 정의할 수 있는 코드형 인프라 관리 도구입니다.</li>
<li>테라폼으로 리소스를 프로비저닝하면 프로비저닝된 것을 ansible과 같은 것들로 관리를 해줄 수가 있어요.</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="프로비저닝-도구">프로비저닝 도구<a href="https://indianapoly.github.io/blog/2025/08/01/terraform/traform-basic-1-title#%ED%94%84%EB%A1%9C%EB%B9%84%EC%A0%80%EB%8B%9D-%EB%8F%84%EA%B5%AC" class="hash-link" aria-label="프로비저닝 도구에 대한 직접 링크" title="프로비저닝 도구에 대한 직접 링크">​</a></h3>
<p>프로비저닝 도구는 서버 자체를 생성합니다. 도구를 사용하면 서버 뿐만 아니라 모든 측면을 생성할 수 있어요.</p>
<p>아래는 테라폼의 예시 있다 웹 서버를 배표하는 코드에요. 해당 코드에서는 ami와 user_data에 집중하면 좋아요.</p>
<ul>
<li>ami는 서버에서 배포할 ami의 id를 지정해요.</li>
<li>user_data는 웹 서버가 부팅될 때 실행되는 bash 스크립트에요.</li>
</ul>
<div class="language-hcl codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-hcl codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">resource  "aws_instance" "app" {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  instance_type      =  "t2.micro"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  availability_zone  =  "us-east-2a"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  ami                =  "ami-0fb653ca2d3203ac1"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  user_data  =  &lt;&lt;-EOF</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                #!/bin/bash</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                sudo  service  apache 2  start</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                EOF</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="테라폼-동작-방법">테라폼 동작 방법<a href="https://indianapoly.github.io/blog/2025/08/01/terraform/traform-basic-1-title#%ED%85%8C%EB%9D%BC%ED%8F%BC-%EB%8F%99%EC%9E%91-%EB%B0%A9%EB%B2%95" class="hash-link" aria-label="테라폼 동작 방법에 대한 직접 링크" title="테라폼 동작 방법에 대한 직접 링크">​</a></h3>
<p>테라폼은 기본적으로 Go 프로그래밍 언어로 작성된 오픈 소스 도구에요. 따라서 terraform이라는 컴파일된 바이너리를 실행하기만 하면 추가 인프라 실행 없이 인프라를 배포할 수 있어요.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="테라폼-리소스-생성">테라폼 리소스 생성<a href="https://indianapoly.github.io/blog/2025/08/01/terraform/traform-basic-1-title#%ED%85%8C%EB%9D%BC%ED%8F%BC-%EB%A6%AC%EC%86%8C%EC%8A%A4-%EC%83%9D%EC%84%B1" class="hash-link" aria-label="테라폼 리소스 생성에 대한 직접 링크" title="테라폼 리소스 생성에 대한 직접 링크">​</a></h3>
<p>테라폼에서 리소스 생성은 아래와 같이 템플릿을 활용해 작성할 수 있어요.</p>
<div class="language-hcl codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-hcl codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">resource  "&lt;PROVIDER&gt;_&lt;TYPE&gt;" "&lt;NAME&gt;"  {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  [ CONFIG  ... ]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre></div></div>
<ul>
<li>PROVIDER는 aws와 같은 것이고</li>
<li>TYPE은 해당 공급자에서 생성할 리소스 유형 (인스턴스와 같은 것들) 이에요.</li>
<li>Name은 테라폼 코드에서 해당 리소스를 참조하는데 사용하는 식별자입니다.</li>
<li>CONFIG는 해당 리소스와 관련된 하나 이상의 인수로 구성돼요.</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="코드-동기화">코드 동기화<a href="https://indianapoly.github.io/blog/2025/08/01/terraform/traform-basic-1-title#%EC%BD%94%EB%93%9C-%EB%8F%99%EA%B8%B0%ED%99%94" class="hash-link" aria-label="코드 동기화에 대한 직접 링크" title="코드 동기화에 대한 직접 링크">​</a></h3>
<p>terraform으로 구축해놓은 것을 동기화하기 위해서는 작성한 .tf 파일들과 .terraform.lock.hcl 파일만 깃헙에 올리면 돼요.</p>
<div class="language-.gitignore codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-.gitignore codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">.terraform</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">*.tfstate</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">*.tfstate.backup</span><br></span></code></pre></div></div>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="실습">실습<a href="https://indianapoly.github.io/blog/2025/08/01/terraform/traform-basic-1-title#%EC%8B%A4%EC%8A%B5" class="hash-link" aria-label="실습에 대한 직접 링크" title="실습에 대한 직접 링크">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="테라폼-초기-세팅-방법">테라폼 초기 세팅 방법<a href="https://indianapoly.github.io/blog/2025/08/01/terraform/traform-basic-1-title#%ED%85%8C%EB%9D%BC%ED%8F%BC-%EC%B4%88%EA%B8%B0-%EC%84%B8%ED%8C%85-%EB%B0%A9%EB%B2%95" class="hash-link" aria-label="테라폼 초기 세팅 방법에 대한 직접 링크" title="테라폼 초기 세팅 방법에 대한 직접 링크">​</a></h3>
<ol>
<li>IAM 사용자를 만들어줍니다. 원래는 최소한의 권한만 주지만 실습을 진행하기 위해서 권한을 <code>AdministratorAccess</code> 로 설정 후 만들어줍니다.</li>
<li>만든 사용자로 들어가서 개발을 access key를 설정해줍니다. 이 때 access key와 secret access key를 잘 보관해둡니다. 이때 AWS CLI를 선택하여 키를 만들어줍니다.</li>
</ol>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="테러폼-셋팅">테러폼 셋팅<a href="https://indianapoly.github.io/blog/2025/08/01/terraform/traform-basic-1-title#%ED%85%8C%EB%9F%AC%ED%8F%BC-%EC%85%8B%ED%8C%85" class="hash-link" aria-label="테러폼 셋팅에 대한 직접 링크" title="테러폼 셋팅에 대한 직접 링크">​</a></h3>
<p>현재 저는 아마존 리눅스 환경에서 진행을 하기 때문에 yum을 활용해 개발을 진행</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">sudo yum install -y yum-utils</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">sudo yum-config-manager --add-repo https://rpm.releases.hashicorp.com/AmazonLinux/hashicorp.repo</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">sudo yum -y install terraform</span><br></span></code></pre></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="aws-인스턴스-생성">AWS 인스턴스 생성<a href="https://indianapoly.github.io/blog/2025/08/01/terraform/traform-basic-1-title#aws-%EC%9D%B8%EC%8A%A4%ED%84%B4%EC%8A%A4-%EC%83%9D%EC%84%B1" class="hash-link" aria-label="AWS 인스턴스 생성에 대한 직접 링크" title="AWS 인스턴스 생성에 대한 직접 링크">​</a></h3>
<div class="language-hcl codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-hcl codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">provider "aws" {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    region      =  "ap-northeast-2"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">resource "aws_instance" "example" {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    {/* ami id 값은 aws ec2 창의 ami에서 찾으면 나옵니다! */}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    ami           = "ami-.."</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    instance_type = "t2.micro"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre></div></div>
<p>이렇게 작업을 진행해준 다음에 아래 명령를 입력을 해줍니다.</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">terraform init</span><br></span></code></pre></div></div>
<p>그려먼 .terraform이라는 파일이 하나 생성이 됩니다. 공급자의 코드는 여기에 다운로드가 됩니다. .terraform 디렉토리는 git에 따로 올리지 않아요. 만약 다른 사람이 사용하고 싶으면 .terraform.lock.hcl 공유를 받고 실행하면 멱등성으로 인해 안전하게 실행할 수 있습니다.</p>
<p>위 작업이 정상적으로 끝이 나면 <code>Terraform has been successfully initialized!</code>가 뜹니다. 그리고 아래 명령어를 입력줘요.</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">terraform plan</span><br></span></code></pre></div></div>
<p>해당 명령을 실행하면 실제로 반영하기 전에 수행할 작업들을 확인할 수 있어요. + 는 모두 생성되고 -는 모두 삭제가 돼요.</p>
<p>정상적으로 확인이 되고 나면 아래 명령어를 실행줍니다.</p>
<ul>
<li>--auto-approve는 중간에 yes 과정을 없애고 바로 진행할 수 있어요.</li>
</ul>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">terraform apply --auto-approve</span><br></span></code></pre></div></div>
<p>만약 기본 VPC가 없다면 정상적으로 인스턴스가 생성이 안될거에요. 그럴 때는 AWS VPC로 들어가서 기본 VPC를 하나 만들어주면 됩니다.</p>
<p>정상적으로 완료가 되면 <code>Apply complete!</code>를 확인할 수 있어요.</p>
<p>해당 리소스를 지우기 위해서는 destroy를 활용해서 명령어를 지우실 수 있습니다.</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">terraform destroy --auto-approve</span><br></span></code></pre></div></div>
<p>해당 명령어 역시 정상적으로 수행을 하고 나면 <code>Destroy complete!</code>를 확인할 수 있어요.</p>
<p>위 상태에서 실행을 하게 되면 인스턴스 이름이 없는 상태로 나와요. 이름을 지정하기 위해서는 tags에서 Name을 추가해주면 돼요.</p>
<div class="language-hcl codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-hcl codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">resource "aws_instance" "example" {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    {/* ami id 값은 aws ec2 창의 ami에서 찾으면 나옵니다! */}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    ami           = "ami-.."</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    instance_type = "t2.micro"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    tags          = {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        Name = "terraform-exmaple"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre></div></div>
<p>그리고 다시 <code>terraform apply --auto-approve</code>를 하게 되면 기존의 인스턴스를 삭제하지 않고 change가 됩니다.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="aws-httpd-서버-띄우기">AWS httpd 서버 띄우기<a href="https://indianapoly.github.io/blog/2025/08/01/terraform/traform-basic-1-title#aws-httpd-%EC%84%9C%EB%B2%84-%EB%9D%84%EC%9A%B0%EA%B8%B0" class="hash-link" aria-label="AWS httpd 서버 띄우기에 대한 직접 링크" title="AWS httpd 서버 띄우기에 대한 직접 링크">​</a></h3>
<div class="language-hcl codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-hcl codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">resource "aws_instance" "example" {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    {/* ami id 값은 aws ec2 창의 ami에서 찾으면 나옵니다! */}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    ami           = "ami-.."</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    instance_type = "t2.micro"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    user_data     = &lt;&lt;- EOF</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    #!/bin/bash</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    echo "hi" &gt; index.html</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    nohub busybox httpd -f -p 8080 &amp;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    EOF</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    user_data_replace_on_chage</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    tags          = {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        Name = "terraform-exmaple"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre></div></div>
<ul>
<li>user_data를 활용해서 shell script를 전달해줄 수 있습니다. 이 때 <code>&lt;&lt;-EOF ... EOF</code> 구문을 활용해서 여러 줄 문자열을 생성할 수 있어요.</li>
<li>user_data_replace_on_chage를 활용하면 원래 인스턴스를 종료하고 새로운 인스턴스를 새롭게 생성합니다.</li>
</ul>
<p>하지만 이렇게만 해서는 퍼블릭 IP로 접속을 할 수 없어요. 왜냐하면 보안그룹을 설정하지 않았기 때문이에요. 따라서 테라폼을 활용해서 보안그룹을 생성하면 이 문제를 해결할 수 있어요.</p>
<div class="language-hcl codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-hcl codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">resource  "aws_security_group" "instance"  {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  name  =  "terraform-example-instance"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  ingress  {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    from_port    =  8080</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    to_port      =  8080</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    protocol     =  "tcp"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    cidr_blocks  =  [ "0.0.0.0/0" ]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre></div></div>
<p>이렇게 만들었다고 해서 인스턴스와 보안그룹이 자동으로 연결이 되지 않아요. 따라서 Terraform 표현식을 통해서 연결을 해줄 수가 있습니다!</p>
<p>표현식의 기본적인 구조는 <code>&lt;PROVIDER&gt;_&lt;TYPE&gt; . &lt;NAME&gt; . &lt;ATTRIBUTE&gt;</code>에요. 여기서 ATTRIBUTE는</p>
<ul>
<li>해당 리소소 인수</li>
<li>리소스에서 내보낸 속성</li>
</ul>
<p>이거 2개 중 하나라고 알고 있으면 돼요.</p>
<p>보안 그룹은 id라는 속성을 내보내기 때문에 <code>aws_security_group.instance.id</code> 로 해줄 수 있어요. 해당 값을 인스턴스 코드에 넣어주시고 apply를 해주시면 연결이 됩니다.</p>
<div class="language-hcl codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-hcl codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">resource "aws_instance" "example" {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    ...기존의 코드들</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    vpc_security_group_ids = [aws_security_group.id]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre></div></div>
<p>apply가 되면 최종적으로 public ip에 정상적으로 접속이 된 것을 확인할 수 있어요.</p>
<p>그리고 코드를 보게 되면 port를 확인하게 되면 동일하게 사용이 되는 것은 변수로 처리해 줄 수 있어요. 지정된 변수들은 var. 으로 접근하여서 사용해줄 수 있습니다.</p>
<div class="language-hcl codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-hcl codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">variable "server_port" {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    description = "The port the ..."</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    type = number</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    default = 8080</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">resource "aws_security_group" "instance" {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    name  =  "terraform-example-instance"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    ingress  {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        from_port    =  var.server_port</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        to_port      =  var.server_port</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        protocol     =  "tcp"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        cidr_blocks  =  [ "0.0.0.0/0" ]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre></div></div>]]></content>
        <author>
            <name>고현림</name>
            <uri>https://www.linkedin.com/in/%ED%98%84%EB%A6%BC-%EA%B3%A0-b53602221/</uri>
        </author>
        <category label="TIL" term="TIL"/>
        <category label="Terraform" term="Terraform"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Next JS + gh Pages 배포 삽질 후기]]></title>
        <id>https://indianapoly.github.io/blog/2025/07/27/frontend/nextjs_export-title</id>
        <link href="https://indianapoly.github.io/blog/2025/07/27/frontend/nextjs_export-title"/>
        <updated>2025-07-27T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[{/ truncate /}]]></summary>
        <content type="html"><![CDATA[
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="문제">문제<a href="https://indianapoly.github.io/blog/2025/07/27/frontend/nextjs_export-title#%EB%AC%B8%EC%A0%9C" class="hash-link" aria-label="문제에 대한 직접 링크" title="문제에 대한 직접 링크">​</a></h2>
<p>Next.js App Router(<code>app/</code> 디렉토리)로 만든 사이트를 GitHub Pages에 배포하는 와중에 아래와 같은 에러가 뜨는 것을 확인했습니다.</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">&gt; next export</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">⨯ next export has been removed in favor of 'output: export' in next.config.js</span><br></span></code></pre></div></div>
<p>App Router에서는 <code>next export</code> 명령어가 <strong>완전히 제거</strong>되었다는 것을 알았습니다.. ㅠ</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="올바른-설정-방법">올바른 설정 방법<a href="https://indianapoly.github.io/blog/2025/07/27/frontend/nextjs_export-title#%EC%98%AC%EB%B0%94%EB%A5%B8-%EC%84%A4%EC%A0%95-%EB%B0%A9%EB%B2%95" class="hash-link" aria-label="올바른 설정 방법에 대한 직접 링크" title="올바른 설정 방법에 대한 직접 링크">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="1-nextconfigjs-설정">1. next.config.js 설정<a href="https://indianapoly.github.io/blog/2025/07/27/frontend/nextjs_export-title#1-nextconfigjs-%EC%84%A4%EC%A0%95" class="hash-link" aria-label="1. next.config.js 설정에 대한 직접 링크" title="1. next.config.js 설정에 대한 직접 링크">​</a></h3>
<div class="language-typescript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-typescript codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">type</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> NextConfig </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"next"</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> nextConfig</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> NextConfig </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  output</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"export"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  assetPrefix</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"https://&lt;USERNAME&gt;.github.io/&lt;REPO_NAME&gt;/"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  trailingSlash</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">true</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// 선택사항: URL 끝에 슬래시 추가</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">export</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">default</span><span class="token plain"> nextConfig</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre></div></div>
<p><strong>핵심</strong>: <code>output: 'export'</code> 설정만 하면 <code>next build</code> 실행 시 자동으로 <code>out/</code> 폴더가 생성됩니다.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="2-packagejson-스크립트">2. package.json 스크립트<a href="https://indianapoly.github.io/blog/2025/07/27/frontend/nextjs_export-title#2-packagejson-%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8" class="hash-link" aria-label="2. package.json 스크립트에 대한 직접 링크" title="2. package.json 스크립트에 대한 직접 링크">​</a></h3>
<div class="language-json codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-json codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token property" style="color:#36acaa">"scripts"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token property" style="color:#36acaa">"build"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"next build"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre></div></div>
<p>❌ <code>"export": "next export"</code> 추가하면 안됩니다.
✅ <code>build</code> 명령어만 있으면 됩니다.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="3-github-actions-워크플로우">3. GitHub Actions 워크플로우<a href="https://indianapoly.github.io/blog/2025/07/27/frontend/nextjs_export-title#3-github-actions-%EC%9B%8C%ED%81%AC%ED%94%8C%EB%A1%9C%EC%9A%B0" class="hash-link" aria-label="3. GitHub Actions 워크플로우에 대한 직접 링크" title="3. GitHub Actions 워크플로우에 대한 직접 링크">​</a></h3>
<div class="language-yaml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-yaml codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> Deploy to GitHub Pages</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">on</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">push</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">branches</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">main</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">paths</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">"app/**"</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">workflow_dispatch</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic"># 수동 실행 가능</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">jobs</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">deploy</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">runs-on</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> ubuntu</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">latest</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">steps</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> Checkout</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token key atrule" style="color:#00a4db">uses</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> actions/checkout@v4</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> Setup Node.js</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token key atrule" style="color:#00a4db">uses</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> actions/setup</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">node@v4</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token key atrule" style="color:#00a4db">with</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token key atrule" style="color:#00a4db">node-version</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">18</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token key atrule" style="color:#00a4db">cache</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"npm"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token key atrule" style="color:#00a4db">cache-dependency-path</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> app/package</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">lock.json</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> Install dependencies</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token key atrule" style="color:#00a4db">run</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> npm ci</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token key atrule" style="color:#00a4db">working-directory</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> app</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> Build</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token key atrule" style="color:#00a4db">run</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> npm run build</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token key atrule" style="color:#00a4db">working-directory</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> app</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> Deploy to GitHub Pages</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token key atrule" style="color:#00a4db">uses</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> peaceiris/actions</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">gh</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">pages@v3</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token key atrule" style="color:#00a4db">with</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token key atrule" style="color:#00a4db">github_token</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> $</span><span class="token punctuation" style="color:#393A34">{</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> secrets.GITHUB_TOKEN </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token key atrule" style="color:#00a4db">publish_dir</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> ./app/out</span><br></span></code></pre></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-주요-변경사항-요약">🔍 주요 변경사항 요약<a href="https://indianapoly.github.io/blog/2025/07/27/frontend/nextjs_export-title#-%EC%A3%BC%EC%9A%94-%EB%B3%80%EA%B2%BD%EC%82%AC%ED%95%AD-%EC%9A%94%EC%95%BD" class="hash-link" aria-label="🔍 주요 변경사항 요약에 대한 직접 링크" title="🔍 주요 변경사항 요약에 대한 직접 링크">​</a></h2>
<table><thead><tr><th>기존 Pages Router</th><th>새로운 App Router</th></tr></thead><tbody><tr><td><code>next export</code> 명령어</td><td><code>output: 'export'</code> 설정</td></tr><tr><td>별도 export 단계</td><td><code>next build</code>에 통합</td></tr><tr><td><code>out/</code> 수동 생성</td><td>자동 생성</td></tr></tbody></table>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-마무리">🎉 마무리<a href="https://indianapoly.github.io/blog/2025/07/27/frontend/nextjs_export-title#-%EB%A7%88%EB%AC%B4%EB%A6%AC" class="hash-link" aria-label="🎉 마무리에 대한 직접 링크" title="🎉 마무리에 대한 직접 링크">​</a></h2>
<p><code>next export</code> 명령어에 의존하던 기존 방식에서 벗어나 <code>output: 'export'</code> 설정 하나로 깔끔하게 해결할 수 있다는 것을 알게 되었습니다.</p>]]></content>
        <author>
            <name>고현림</name>
            <uri>https://www.linkedin.com/in/%ED%98%84%EB%A6%BC-%EA%B3%A0-b53602221/</uri>
        </author>
        <category label="TIL" term="TIL"/>
        <category label="Frontend" term="Frontend"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[AWS basic (3)]]></title>
        <id>https://indianapoly.github.io/blog/2025/07/23/aws/AWS-basic-3-title</id>
        <link href="https://indianapoly.github.io/blog/2025/07/23/aws/AWS-basic-3-title"/>
        <updated>2025-07-23T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[{/ truncate /}]]></summary>
        <content type="html"><![CDATA[
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="database-service">Database Service<a href="https://indianapoly.github.io/blog/2025/07/23/aws/AWS-basic-3-title#database-service" class="hash-link" aria-label="Database Service에 대한 직접 링크" title="Database Service에 대한 직접 링크">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="aws-rds개요">AWS RDS개요<a href="https://indianapoly.github.io/blog/2025/07/23/aws/AWS-basic-3-title#aws-rds%EA%B0%9C%EC%9A%94" class="hash-link" aria-label="AWS RDS개요에 대한 직접 링크" title="AWS RDS개요에 대한 직접 링크">​</a></h3>
<ul>
<li>관계형 데이터베이스를 완전관리형으로 제공하는 서비스입니다.</li>
<li>RDS 서버 시스템을 직접 접속이 불가능해요.</li>
<li>VPC 내부에 배치해서 사용하며 VPC 환경을 이용한 보안 환경 구성 외에도 IAM, Secret Manager 등의 서비스를 통해 데이터베이스 보안을 강화할 수 있어요.</li>
</ul>
<p>AWS RDS DBMS engine type은 아래와 같습니다.</p>
<img src="https://indianapoly.github.io/img/blog/aws/2025-07-23/img1.png" width="600">
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="백업">백업<a href="https://indianapoly.github.io/blog/2025/07/23/aws/AWS-basic-3-title#%EB%B0%B1%EC%97%85" class="hash-link" aria-label="백업에 대한 직접 링크" title="백업에 대한 직접 링크">​</a></h3>
<p>자동 백업과 수동 백업으로 나누어져있어요:</p>
<ul>
<li>
<p>자동 백업</p>
<ul>
<li>스냅샷과 트랜잭션 로그를 참고해서 데이터를 백업하는 방식으로 기본적으로 default로 활성화 됩니다. 특정 시점 데이터 상태로 복구할 수 있어요.</li>
<li>원본 DBMS가 삭제되면 함께 삭제 되는 데이터에요.</li>
</ul>
</li>
<li>
<p>수동 백업</p>
<ul>
<li>사용자가 수동으로 원하는 시점에 스냅샷을 생성하는 방식이에요. 원본 DBMS가 삭제돼도 스냅샷은 삭제되지 않고 S3에 보관이 됩니다.</li>
<li>다른 리전으로 복제를 하거나 다른 계정에 공유할 수 있어요.</li>
</ul>
</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="aws-rds-read-replica">AWS RDS Read Replica<a href="https://indianapoly.github.io/blog/2025/07/23/aws/AWS-basic-3-title#aws-rds-read-replica" class="hash-link" aria-label="AWS RDS Read Replica에 대한 직접 링크" title="AWS RDS Read Replica에 대한 직접 링크">​</a></h3>
<ul>
<li>대규모 서비스 트래픽을 분산처리하기 위해서 데이터베이스 읽기 작업만 지원하는 복제 데이터 베이스 입니다.</li>
<li>최대 15개의 읽기 전용 복제 본을 리전, 가용영역에 걸쳐 구성 가능해요. 읽기 전용 복제본은 원본 데이터베이스 시스템이 다운될 경우 별도의 독립된 DB 인스턴스로 수동 승격이 가능해요.</li>
</ul>
<img src="https://indianapoly.github.io/img/blog/aws/2025-07-23/img2.png" width="600">
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="aws-rds-multi-az가용영역">AWS RDS Multi AZ(가용영역)<a href="https://indianapoly.github.io/blog/2025/07/23/aws/AWS-basic-3-title#aws-rds-multi-az%EA%B0%80%EC%9A%A9%EC%98%81%EC%97%AD" class="hash-link" aria-label="AWS RDS Multi AZ(가용영역)에 대한 직접 링크" title="AWS RDS Multi AZ(가용영역)에 대한 직접 링크">​</a></h3>
<ul>
<li>Write Database를 Active-StanBy 형태로 이중화 구성이 되어있어 장애 대비 자동 복구 대응을 할 수 있어요.</li>
<li>Read Replica의 쓰기 전용 데이터베이스 승격과 유사하지만 다운타임이 없어요.</li>
<li>예비용 인스턴스를 하나 더 생성하기 때문에 기존 대비 비용이 2배 증가합니다.</li>
<li>성능향상에 대한 이점보다는 고가용성을 확보하기 위한 옵션이에요.</li>
</ul>
<img src="https://indianapoly.github.io/img/blog/aws/2025-07-23/img3.png" width="600">
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="storage-auto-scaling">Storage Auto-Scaling<a href="https://indianapoly.github.io/blog/2025/07/23/aws/AWS-basic-3-title#storage-auto-scaling" class="hash-link" aria-label="Storage Auto-Scaling에 대한 직접 링크" title="Storage Auto-Scaling에 대한 직접 링크">​</a></h3>
<ul>
<li>운영관리 과정에 디스크가 부족해지는 경우 자동으로 용량을 확장할 수 있도록 지원하는 기능입니다.</li>
<li>전체 용량 중 여유 공간이 10% 미만인 상태가 5분 이상 지속되고 &amp;&amp; 지난 6시간 동안 저장소가 변경된 이력이 없을 경우에 자동으로 확장됩니다.</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="rds-storage-structure">RDS Storage Structure<a href="https://indianapoly.github.io/blog/2025/07/23/aws/AWS-basic-3-title#rds-storage-structure" class="hash-link" aria-label="RDS Storage Structure에 대한 직접 링크" title="RDS Storage Structure에 대한 직접 링크">​</a></h3>
<ul>
<li>Aurora에 저장되는 데이터는 최소 3개의 가용영역에서 데이터를 복제하여 6개의 사본으로 저장해요 (4/6 Quorum 방식)</li>
<li>내부에서 데이터 손실이 발생해도 자체적으로 사본을 통해 자동 복구를 합니다.</li>
</ul>
<img src="https://indianapoly.github.io/img/blog/aws/2025-07-23/img4.png" width="600">
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="aurora-storage-read-replica-auto-scaling">Aurora Storage, Read Replica, Auto-Scaling<a href="https://indianapoly.github.io/blog/2025/07/23/aws/AWS-basic-3-title#aurora-storage-read-replica-auto-scaling" class="hash-link" aria-label="Aurora Storage, Read Replica, Auto-Scaling에 대한 직접 링크" title="Aurora Storage, Read Replica, Auto-Scaling에 대한 직접 링크">​</a></h3>
<ul>
<li>데이터의 저장공간은 10GB ~ 128TB 까지 자동으로 사용하는 만큼 확장할 수 있어요.</li>
<li>읽기 전용 복제본은 최대 15개 까지 Auto Scaling 설정이 가능해요. Writter instance에는 적용이 불가능해요.</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="management-service">Management Service<a href="https://indianapoly.github.io/blog/2025/07/23/aws/AWS-basic-3-title#management-service" class="hash-link" aria-label="Management Service에 대한 직접 링크" title="Management Service에 대한 직접 링크">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="cloud-formation">Cloud Formation<a href="https://indianapoly.github.io/blog/2025/07/23/aws/AWS-basic-3-title#cloud-formation" class="hash-link" aria-label="Cloud Formation에 대한 직접 링크" title="Cloud Formation에 대한 직접 링크">​</a></h3>
<p>개요</p>
<ul>
<li>인프라를 코드로 관리하게 해주는 서비스로, AWS 리소스의 생성, 관리, 업데이트를 자동화해줘요.</li>
<li>코드를 템플릿 형태로 만들어서 관리하고, 템플릿을 통해 STACK을 생성하여 코드 내용을 기반으로 인프라를 생성합니다.</li>
</ul>
<img src="https://indianapoly.github.io/img/blog/aws/2025-07-23/img5.png" width="600">
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="cloud-watch">Cloud Watch<a href="https://indianapoly.github.io/blog/2025/07/23/aws/AWS-basic-3-title#cloud-watch" class="hash-link" aria-label="Cloud Watch에 대한 직접 링크" title="Cloud Watch에 대한 직접 링크">​</a></h3>
<p>개요</p>
<ul>
<li>AWS 리소스나 Application의 모니터링 서비스입니다.</li>
<li>운영 데이터를 수집, 분석, 시각화, 관리를 위한 통합 서비스에요</li>
</ul>
<p>주요구성은 아래와 같습니다.</p>
<ul>
<li>Metrics : AWS 리소스에서 생성되는 Metric 수집 및 저장을 해요. Custom Metric 구성 및 수집/저장이 가능합니다. ex. EC2 CPU 사용률 등<!-- -->
<ul>
<li>거의 모든 리소스에서 대한 지표를 기본으로 제공해줘요.</li>
<li>Metrics의 주요 구성 요소는 NameSpace, Metric Name, Dimension, Period가 있어요.</li>
</ul>
</li>
</ul>
<img src="https://indianapoly.github.io/img/blog/aws/2025-07-23/img6.png" width="600">
<ul>
<li>Logs : AWS 리소스에서 생성되는 Log 수집 및 저장을 해요. Custom 설정으로 Application, System, Log 추가 수집 및 저장 가능해요.<!-- -->
<ul>
<li>Standard, Infrequent Access 2개의 클래스를 지원합니다.</li>
<li>로그의 주요 구성요소에는 Log Event, Log Stream, Log Group, Retention Period, Metrics Filter, Subscription Filter 이렇게 있어요.</li>
</ul>
</li>
<li>Dashboards : Metric, Log를 시각화해요.</li>
<li>Alarms : Metric 데이터를 기준으로 Alarms를 설정합니다. 임계치 초과 시 SNS를 만들어 알림을 전송할 수 있어요.</li>
<li>CloudWatch Events : 이벤트를 수집하고 특정 리소스로 라우팅합니다. 기타 서비스와 연동하여 특정 작업을 자동으로 수행합니다.</li>
</ul>
<img src="https://indianapoly.github.io/img/blog/aws/2025-07-23/img7.png" width="600">
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="network-connectivity">Network Connectivity<a href="https://indianapoly.github.io/blog/2025/07/23/aws/AWS-basic-3-title#network-connectivity" class="hash-link" aria-label="Network Connectivity에 대한 직접 링크" title="Network Connectivity에 대한 직접 링크">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="vpc-peering">VPC Peering<a href="https://indianapoly.github.io/blog/2025/07/23/aws/AWS-basic-3-title#vpc-peering" class="hash-link" aria-label="VPC Peering에 대한 직접 링크" title="VPC Peering에 대한 직접 링크">​</a></h3>
<p>개요</p>
<ul>
<li>서로 격리 되어 있는 2개 이상의 VPC의 네트워크를 연결하는 서비스입니다.</li>
<li>동일 리전, 가용영역에서 발생하는 데이터 트래픽은 무료이지만 리전, 가용영역을 교차하는 데이터의 경우에는 트래픽에 따른 금액이 발생해요.</li>
<li>전이적 피어링이 불가능하며, CIDR block이 겹치는 경우에도 VPC Peering 구성이 불가능해요.</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="vpc-endpoint">VPC Endpoint<a href="https://indianapoly.github.io/blog/2025/07/23/aws/AWS-basic-3-title#vpc-endpoint" class="hash-link" aria-label="VPC Endpoint에 대한 직접 링크" title="VPC Endpoint에 대한 직접 링크">​</a></h3>
<p>개요</p>
<ul>
<li>VPC 내부 리소스가 AWS Service에 접근할 때 Private Link를 사용해 사설 통신을 가능하게 해주는 서비스입니다.</li>
<li>인터넷 게이트웨어, NAT 게이터으웨, VPN, Direct Connect를 사용하지 않고 사설 통신 구간을 이용해 AWS 서비스와 통신합니다.</li>
</ul>
<p><strong>Gateway Endpoint</strong>
S3, DynamoDB 서비스를 대상으로 private 연결을 제공, Routing Table을 통해 연결합니다. 무료로 사용 가능합니다.</p>
<p><strong>Interface Endpoint</strong>
Private Link를 지원하는 서비스를 대상으로 Private 연결을 제공합니다. 지정한 VPC 내부에 Elastic Network Interface를 생성하여 통신을 지원해요.
ENI와 AWS 서비스와 연결하여 Private 통신 구간이 활성화되는 구조이며, 트래픽에 따른 통신이 가능합니다.</p>
<img src="https://indianapoly.github.io/img/blog/aws/2025-07-23/img8.png" width="600">
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="route-53">Route 53<a href="https://indianapoly.github.io/blog/2025/07/23/aws/AWS-basic-3-title#route-53" class="hash-link" aria-label="Route 53에 대한 직접 링크" title="Route 53에 대한 직접 링크">​</a></h3>
<ul>
<li>AWS에서 제공하는 완전 관리형 DNS 서버입니다. 도메인 구입 및 도메인 호스팅 관리릴 지원해요. 외부 도메인을 AWS Route53의 Hosted Zone에 등록하여 사용할 수 있습니다.</li>
<li>DNS Routing Policy를 통해 트래픽을 적합한 EndPoint로 라우팅합니다. 또한, 도메인 및 연결된 리소스에 대한 Health Check 기능을 제공해줍니다.</li>
<li>Route 53의 Public / Private Hosted Zone<!-- -->
<ul>
<li>Public Hosted Zone : 인터넷에 연결된 모든 리소스에 접근 가능한 DNS 서비스를 제공해요.</li>
<li>Private Hosted Zone : 특정 VPC 내부 리소스만 접근 가능한 Local DNS 서비스를 제공합니다. VPC 내부 리소스 간 통신을 위한 맞춤형 도메인을 제공해요.</li>
</ul>
</li>
</ul>
<img src="https://indianapoly.github.io/img/blog/aws/2025-07-24/img1.png" width="600">
<p><strong>Public Hosted Zone</strong></p>
<ul>
<li>인터넷에 연결된 리소스의 DNS Record를 관리하는 저장소에요.</li>
<li>AWS 또는 외부에서 구매한 도메인을 등록하여 사용 가능해요. (반나절 저도의 시간을 ㄱ)</li>
</ul>
<p><strong>Private Hosted Zone</strong></p>
<ul>
<li>VPC 내부 네트워크 리소스의 DNS Record를 관리하는 저장소에요.</li>
<li>VPC 내부 통신에만 사용되며, 인터넷에서 접근이 불가능합니다. Private DNS 이름을 사용해 내부 애플리케이션 간 통신을 최적화 할 수 있어요.</li>
</ul>
<img src="https://indianapoly.github.io/img/blog/aws/2025-07-24/img2.png" width="600">
<ul>
<li>Route 53에서 지원되는 DNS Records type은 아래와 같아요.<!-- -->
<ul>
<li>A : 도메인 주소와 IPv4 주소를 직접 할당해요.</li>
<li>AAAA : 도메인 주소와 IPv6 주소를 직접 할당해요.</li>
<li>CNAME(Canonical Name Record) : 도메인 주소를 다른 도메인 주소에 할당해줘요.</li>
<li>MX : 도메인 주소를 이메일 서버에 할당해줘요. 등록 도메인 주소 정보를 이메일 주소로 사용합니다.</li>
<li>NS : Name Server, 구매한 도메인을 관리하는 네임 서버 정보입니다.</li>
<li>SOA : Start of Authority, 구입한 도메인에 대한 기본 정보가 담긴 레코드에요. Open Search로 로그를 검색, 분석, 시각화를 합니다.</li>
</ul>
</li>
</ul>
<p><strong>Policy</strong></p>
<ol>
<li>Simple Policy</li>
</ol>
<ul>
<li>단순한 방식으로 도메인에 대한 트래픽 리소스를 전달하는 방식입니다.</li>
<li>1개의 레코드에 Multi value 설정이 가능해요.</li>
<li>Health Check 기능 사용은 할 수 없습니다.</li>
</ul>
<img src="https://indianapoly.github.io/img/blog/aws/2025-07-24/img3.png" width="600">
<ol start="2">
<li>Weighted</li>
</ol>
<ul>
<li>단순한 방식으로 도메인에 대한 트래픽을 리소스로 전달하는 방식이에요.</li>
<li>도메인에 등록된 리소스 마다 가중치를 적용해 트래픽의 양을 조절합니다. 레코드의 유형과 레코드의 이름을 동일하게 구성하고 각 레코드에 가중치를 설정합니다.</li>
</ul>
<img src="https://indianapoly.github.io/img/blog/aws/2025-07-24/img4.png" width="600">
<ol start="3">
<li>Latency</li>
</ol>
<ul>
<li>응답 지연시간이 가장 적은 리소스의 정보를 반환하는 방식으로 사용합니다. 일정 기간 측정된 결과 값을 기준으로 라우팅해요.</li>
<li>시간이 지남에 따라 다른 값을 반환 받을 수도 있습니다. 다중 리전 환경에서 클라이언트와 가장 근접한 리소스로 연결될 확률이 높아요.</li>
<li>Private Hosted Zone에 등록된 레코드에도 적용이 가능합니다.</li>
</ul>
<img src="https://indianapoly.github.io/img/blog/aws/2025-07-24/img5.png" width="600">
<ol start="4">
<li>Failover</li>
</ol>
<ul>
<li>Route 53에서 제공하는 상태 검사기를 이용해 정상 리소스 값을 반환하는 방식이에요. 하나의 기본 레코드와 보조 레코드로 구성합니다.</li>
</ul>
<ol start="5">
<li>Geolocation</li>
</ol>
<ul>
<li>Client의 위치 정보를 기반으로 가장 가까운 리전의 리소스 정보를 반환하는 방식이에요. 위치 정보와 레코드 반환 값을 Mapping하여 구성합니다.</li>
<li>EDNS(RFC 7871) 기능을 지원하는 않는 경우에 예상과 달리 동작할 수 있습니다.</li>
</ul>]]></content>
        <author>
            <name>고현림</name>
            <uri>https://www.linkedin.com/in/%ED%98%84%EB%A6%BC-%EA%B3%A0-b53602221/</uri>
        </author>
        <category label="TIL" term="TIL"/>
        <category label="AWS" term="AWS"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[AWS basic (2)]]></title>
        <id>https://indianapoly.github.io/blog/2025/07/22/aws/AWS-basic-2-title</id>
        <link href="https://indianapoly.github.io/blog/2025/07/22/aws/AWS-basic-2-title"/>
        <updated>2025-07-22T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[{/ truncate /}]]></summary>
        <content type="html"><![CDATA[
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="elastic-load-balancer-elb">Elastic Load Balancer (ELB)<a href="https://indianapoly.github.io/blog/2025/07/22/aws/AWS-basic-2-title#elastic-load-balancer-elb" class="hash-link" aria-label="Elastic Load Balancer (ELB)에 대한 직접 링크" title="Elastic Load Balancer (ELB)에 대한 직접 링크">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="개요">개요<a href="https://indianapoly.github.io/blog/2025/07/22/aws/AWS-basic-2-title#%EA%B0%9C%EC%9A%94" class="hash-link" aria-label="개요에 대한 직접 링크" title="개요에 대한 직접 링크">​</a></h3>
<p>클라이언트의 서비스 요청 트래픽을 여러 서버로 분산시켜 주는 서비스입니다. 부하로 인한 서비스 중단 및 성능 저하를 방지할 수 있어요.</p>
<ul>
<li>처리 방식은 아래와 같아요:<!-- -->
<ol>
<li>EC2를 타겟 그룹에 할당하고 로드 밸런서가 타겟 그룹을 연동하여 구성해요.</li>
<li>타겟 그룹에서 상태 검사를 통해 정상적인 서버에게만 요청 전달합니다.</li>
<li>수 십대의 서버가 구성되어 있어도 클라이언트는 단일 웹 서비스 endpoint로 접근할 수 있어요.</li>
</ol>
</li>
</ul>
<p>완전 관리형 서비스여서 트래픽 요청이 많으면 ELB 시스템도 내부적으로 자동으로 확장해요. 시스템에 대한 업그레이드, 가용성. 관리 등은 AWS에서 지원을 해줘요.</p>
<p>다른 AWS 서비스와 연계 지원도 합니다. AWS ACM 인증서와 연동하여 HTTPS 암호화 통신을 지원합니다. EC2, Auto-Scaling, Lambda, ECS, EKS 와 같은 컴퓨팅 서비스와 연계 사용할 수 있어요.</p>
<img src="https://indianapoly.github.io/img/blog/aws/2025-07-22/img1.png" width="600">
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="구성-요소">구성 요소<a href="https://indianapoly.github.io/blog/2025/07/22/aws/AWS-basic-2-title#%EA%B5%AC%EC%84%B1-%EC%9A%94%EC%86%8C" class="hash-link" aria-label="구성 요소에 대한 직접 링크" title="구성 요소에 대한 직접 링크">​</a></h3>
<ul>
<li>
<p>Listener</p>
<ul>
<li>프로토콜, 포트를 기준으로 클라이언트 요청 수신 -&gt; 요청 내용 검사 후 결과에 따라서 적절한 Target Group으로 전달합니다.</li>
<li>최소 1개 이상의 리스너가 필요하고, 최대 10개까지 설정할 수 있어요. SSL 인증서로 HTTPS를 적용 가능합니다.</li>
</ul>
</li>
<li>
<p>Rule</p>
<ul>
<li>구성요소는 우선순위, 조건, 동작으로 구성되어 있어요.</li>
<li>요청 검사 과정에서 설정된 조건에 따라 지정된 동작을 수행합니다.</li>
</ul>
</li>
<li>
<p>Target Group</p>
<ul>
<li>EC2, Lambda, IP Address 등으로 구성되어 있습니다.</li>
<li>서버의 Health Check를 통해 서버 상태를 모니터링 합니다.</li>
</ul>
</li>
</ul>
<img src="https://indianapoly.github.io/img/blog/aws/2025-07-22/img2.png" width="600">
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="loadbalancer-종류">LoadBalancer 종류<a href="https://indianapoly.github.io/blog/2025/07/22/aws/AWS-basic-2-title#loadbalancer-%EC%A2%85%EB%A5%98" class="hash-link" aria-label="LoadBalancer 종류에 대한 직접 링크" title="LoadBalancer 종류에 대한 직접 링크">​</a></h3>
<ul>
<li>로드밸런서의 종류에는 크게 4개가 있어요:<!-- -->
<ul>
<li>Application Load Balancer:
Application Layer (layer 7)에서 사용되는 LB 에요.
SSL Offload 기능을 제공해요.(클라이언트가 암호화해서 보냈는데 서버로 보낼 때는 plain text로 보냅니다. 암호화된 것을 복호화하는 과정에서 연산이 많이 일어나기 때문에 사용되는 개념이에요.)</li>
<li>Network Load Balancer:
Elastic IP 적용이 가능하며 초당 수백만 건 요청 처리가 가능해서 ALB보다 성능이 좋아요.
S-NAT이 비활성화 상태에서 트래픽이 들어온다면 클라이언트 IP가 LB에서 변경된 채로 들어오는 것이 아니라 그대로 들어오기 때문에 서버에 도착을 하면 LB로 다시 응답을 보내주는 것이 아닌 NAT GW로 가서 클라이언트에게 전달이 돼요. (LB가 하는 역할이 하나가 되기 때문에 훨씬 성능이 좋아요.)<!-- -->
<div class="language-text codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">## DSR</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">client -&gt; NLB -&gt; Target Group -&gt; NAT Gateway -&gt; client </span><br></span></code></pre></div></div>
</li>
<li>Gateway Load Balancer</li>
</ul>
</li>
</ul>
<p>주로 사용하는 것은 ALB, NLB 이렇게 2개를 주로 사용합니다. Classic Load Balancer는 사용을 하는 곳은 있지만 단종된 서비스 입니다.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="auto-scaling">Auto Scaling<a href="https://indianapoly.github.io/blog/2025/07/22/aws/AWS-basic-2-title#auto-scaling" class="hash-link" aria-label="Auto Scaling에 대한 직접 링크" title="Auto Scaling에 대한 직접 링크">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="구성요소">구성요소<a href="https://indianapoly.github.io/blog/2025/07/22/aws/AWS-basic-2-title#%EA%B5%AC%EC%84%B1%EC%9A%94%EC%86%8C" class="hash-link" aria-label="구성요소에 대한 직접 링크" title="구성요소에 대한 직접 링크">​</a></h3>
<ul>
<li>Auto Scaling Group (ASG)<!-- -->
<ul>
<li>관리 대상 인스턴스를 논리적으로 모아 놓은 집합이에요.</li>
<li>최소 크기, 최대 크기, 희망 용량을 설정하고 이 범위 내에서 인스턴스를 생성 제거 합니다.</li>
<li>로드 밸런서의 특정 Target Group으로 포함되도록 지정 가능해요.</li>
</ul>
</li>
<li>Launch Template<!-- -->
<ul>
<li>auto Scaling을 통해서 새로 생성할 인스턴스의 설정 값의 모음입니다.</li>
<li>AMI, TYPE, Security Group, Key-Pair, User Data 등을 정의해요.</li>
<li>수정이 불가능하고, 새로운 버전을 생성한 뒤에 ASG 설정에서 버전 업데이트가 필요합니다.</li>
</ul>
</li>
<li>Scaling Policies<!-- -->
<ul>
<li>인스턴스를 조정하는 기준, 조건을 설정하는 요소에요.</li>
<li>Scheduled, Dynamic, Predicitive Scaling 방식을 지원합니다.</li>
</ul>
</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="동작-과정">동작 과정<a href="https://indianapoly.github.io/blog/2025/07/22/aws/AWS-basic-2-title#%EB%8F%99%EC%9E%91-%EA%B3%BC%EC%A0%95" class="hash-link" aria-label="동작 과정에 대한 직접 링크" title="동작 과정에 대한 직접 링크">​</a></h3>
<ol>
<li>ALB(Application)에서 EC2 상태 검사를 수행합니다.</li>
<li>Unhealthy 상태 EC2가 발견이 되면 ASG로 전달합니다.</li>
<li>Launch Template 를 Trigger 합니다.</li>
<li>EC2 생성 및 ASG, Target Group에 등록합니다.</li>
<li>인스턴스 매트릭을 수빚하고 CloudWatch로 전달합니다.</li>
<li>Scaling Policy 조건을 충족하면 알람이 울립니다.</li>
<li>Launch Template를 Trigger 합니다.</li>
<li>EC2 생성 및 ASG, Target Group에 등록합니다.</li>
</ol>
<img src="https://indianapoly.github.io/img/blog/aws/2025-07-22/img3.png" width="600">
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="storage-service">Storage Service<a href="https://indianapoly.github.io/blog/2025/07/22/aws/AWS-basic-2-title#storage-service" class="hash-link" aria-label="Storage Service에 대한 직접 링크" title="Storage Service에 대한 직접 링크">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="block-storage">Block Storage<a href="https://indianapoly.github.io/blog/2025/07/22/aws/AWS-basic-2-title#block-storage" class="hash-link" aria-label="Block Storage에 대한 직접 링크" title="Block Storage에 대한 직접 링크">​</a></h3>
<p>대표적으로 AMAZON EBS(Elastic Block Store)</p>
<p>데이터를 일정한 크기의 블록 단위로 저장해요. 블록의 고유 주소로 접근하여 빠른 접근이 가능합니다. 또한, 서로 다른 OS에서 접근가능해요.</p>
<p><strong>Elastic Block Store</strong></p>
<ul>
<li>EC2 인스턴스에 연결해 사용할 수 있는 네트워크 기반 Block Storage 서비스입니다.<!-- -->
<ul>
<li>직접적으로 연결이 되어있지 않아요. 그래서 VM이 끊겨도 주소 기반이기 때문에 접근할 수 있습니다.</li>
</ul>
</li>
<li>Data volume, snapshot에 대한 암호화를 지원해줘요.</li>
<li>하나의 인스턴스에 연결해 사용하며, EC2 인스턴스와 별개로 관리가 됩니다.<!-- -->
<ul>
<li>하나의 인스턴스에 2개 이상의 EBS 볼륨이 연결이 가능합니다.</li>
<li>볼륨 타입이 io1, 2 타입인 경우네는 동일한 가용영역 내에서 여러 인스턴스에 연결이 가능해요.</li>
<li>연결되어 있던 EBS가 분리된 후에 다른 인스턴스에 연결할 수 있어요.</li>
</ul>
</li>
<li>특정 가용영역안에서만 생성되기 때문에 가용영역간 EBS 볼륨 공유가 불가능해요.<!-- -->
<ul>
<li>만약 정보가 다른 가용영역에 필요로 한다면 스냅샷을 활용해 사용할 수 있어요.</li>
</ul>
</li>
</ul>
<img src="https://indianapoly.github.io/img/blog/aws/2025-07-22/img4.png" width="600">
<p><strong>Instance Store</strong></p>
<ul>
<li>호스트 컴퓨터의 디스크를 직접 연결해요. 가장 빠른 소곧의 디스크 타입입니다.</li>
<li>비영구적 저장소(휘발성)이어서 인스턴스 중지 및 종료 시에 하드웨어가 바뀌면서 데이터를 손실할 수 있습니다.</li>
<li>연결해지가 불가능하고, 인스턴스 패밀리에 따라 디스크의 종류와 사이즈가 달라요.</li>
<li>대표적으로 카산드라와 같은 것들이 사용해요.</li>
</ul>
<img src="https://indianapoly.github.io/img/blog/aws/2025-07-22/img5.png" width="600">
<p><strong>EBS Snapshot</strong></p>
<ul>
<li>특정 시점에서 EBS 볼륨에 저장된 데이터를 복사해둔 데이터를 의미해요.</li>
<li>증분 방식 저장(로그와 같은 값들을 저장, 특정 시점으로 맞춰줄 수 있어요.)을 통해서 저장 용량을 효율적으로 관리할 수 있어요.</li>
<li>snapshot은 S3 버킷에 보관돼요. (ec2 인스턴스에서만 볼 수 있고, S3에서는 보이지 않아요.)</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="file-storage">File Storage<a href="https://indianapoly.github.io/blog/2025/07/22/aws/AWS-basic-2-title#file-storage" class="hash-link" aria-label="File Storage에 대한 직접 링크" title="File Storage에 대한 직접 링크">​</a></h3>
<p>대표적으로 AMAZON EFS, AMAZON FSx 가 있어요.</p>
<p>파일과 폴더의 계충 구조로 저장되어 있어요. 파일, 폴더가 많아질 수록 파일 탐색 성능이 저하돼요.</p>
<p>파일 시스템(프로토콜)에 따라서 OS 접근이 안될 수 있어요.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="object-storage">Object Storage<a href="https://indianapoly.github.io/blog/2025/07/22/aws/AWS-basic-2-title#object-storage" class="hash-link" aria-label="Object Storage에 대한 직접 링크" title="Object Storage에 대한 직접 링크">​</a></h3>
<p>대표적으로 S3가 있어요.</p>
<p>오브젝트 단위로 데이터를 저장하고 Application 단에서 동작합니다. 물리적 제약이 적어 원하는 만큼 확장 가능합니다.</p>
<p>오브젝트 별로 KEY<!-- -->:VAULE<!-- --> 형태로 구성 되어있습니다.</p>
<p><strong>Simple Storage Service</strong></p>
<ul>
<li>
<p>웹 서비스를 이용해 어디서나 접근 가능한 object storage에요. 용량 제한 없이 무제한 확장 가능한 스토리지 입니다. 사용한 만큼 과금이 되요.</p>
</li>
<li>
<p>웹 브라우저 GUI를 이용하거나, REST API를 이용해 데이터를 관리합니다. 단순 데이터 저장소로 동작하며, 프로그램 설치 작업은 제한돼요.</p>
</li>
<li>
<p>정적 웹 호스팅을 지원해요.</p>
</li>
<li>
<p>버킷을 생성할 때는 고유한 이름으로 생성해야하며, 생성되는 위치 지정이 필요합니다.</p>
</li>
<li>
<p>버킷 내 저장되는 Object마다 KEY VALUE 로 맵핑이 됩니다.</p>
</li>
<li>
<p>객체를 저장하게 되면 S3 URI(AWS 내부 작업용 식별자), Object URL(http 기반의 외부 접속용 식별자) 정보를 할당해줍니다.</p>
<ul>
<li>Object을 브라우저에서 띄울 때 사용합니다. (조회용으로 사용해요.)</li>
</ul>
</li>
</ul>
<p>S3 Bucket은 아래와 같아요.</p>
<ul>
<li>Effect : Action에 명시된 작업 권환을 Allow 하거나 Deny 합니다.</li>
<li>Principal : 명시된 대상에 접근을 허용할 보안주체 (User, Role 등등)을 지정해요.</li>
<li>Action : 서비스명과 행위 형태로 구성이 되어있어요.</li>
<li>Resource : 정책 적용대상의 ARN 정보를 입력해요.</li>
<li>Condition: 정책이 적용될 조건을 지정해줘요.</li>
</ul>
<div class="language-JSON language-json codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-json codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token property" style="color:#36acaa">"Statement"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token property" style="color:#36acaa">"Effect"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"Allow"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// or "Deny"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token property" style="color:#36acaa">"Principal"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token property" style="color:#36acaa">"AWS"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"arn:...:user"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token property" style="color:#36acaa">"Action"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"s3:GetObejct"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token property" style="color:#36acaa">"Resource"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"arn:...:my_bucket/*"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token property" style="color:#36acaa">"Condition"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token property" style="color:#36acaa">"IpAddress"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    </span><span class="token property" style="color:#36acaa">"aws:SourceIp"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        </span><span class="token string" style="color:#e3116c">"100.10.1.1/32"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        </span><span class="token string" style="color:#e3116c">"10.0.0.0/16"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    </span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre></div></div>
<ul>
<li>S3 public Access Block<!-- -->
<ul>
<li>bucket policy, s3 access control list 설정보다는 public access block이 우선입니다.</li>
<li>기본적으로 버킷은 private 상태로 생성되지만, 데이터를 안전하게 보호하기 위해서 public 접근 허용 정책이 적용되는 것을 방지하기 위한 도구입니다.</li>
<li>Bucket policy, access control list 등에서 public 접근 권한을 허용하는 설정을 무시하거나 차단합니다.</li>
</ul>
</li>
</ul>]]></content>
        <author>
            <name>고현림</name>
            <uri>https://www.linkedin.com/in/%ED%98%84%EB%A6%BC-%EA%B3%A0-b53602221/</uri>
        </author>
        <category label="TIL" term="TIL"/>
        <category label="AWS" term="AWS"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[AWS basic (1)]]></title>
        <id>https://indianapoly.github.io/blog/2025/07/21/aws/AWS-basic-1-title</id>
        <link href="https://indianapoly.github.io/blog/2025/07/21/aws/AWS-basic-1-title"/>
        <updated>2025-07-21T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[{/ truncate /}]]></summary>
        <content type="html"><![CDATA[
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="네이밍-컨벤션">네이밍 컨벤션<a href="https://indianapoly.github.io/blog/2025/07/21/aws/AWS-basic-1-title#%EB%84%A4%EC%9D%B4%EB%B0%8D-%EC%BB%A8%EB%B2%A4%EC%85%98" class="hash-link" aria-label="네이밍 컨벤션에 대한 직접 링크" title="네이밍 컨벤션에 대한 직접 링크">​</a></h2>
<p>회사마다 기준이 있기도 하고, 자신마다 목표를 세워두고 진행할 수 있어요.</p>
<ul>
<li>
<p>시스템 개발 환경
dev(development), stg(staging), qa, prd</p>
</li>
<li>
<p>시스템 명칭
erp, crm, ecommerce, bank</p>
</li>
<li>
<p>리소스 명칭
ec2, rds, dynamodb, redis</p>
</li>
<li>
<p>시스템 역할
web, was, aip, bastion</p>
</li>
<li>
<p>a + 넘버링
pub01a, pri01c</p>
</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="identity-and-access-management">Identity and Access Management<a href="https://indianapoly.github.io/blog/2025/07/21/aws/AWS-basic-1-title#identity-and-access-management" class="hash-link" aria-label="Identity and Access Management에 대한 직접 링크" title="Identity and Access Management에 대한 직접 링크">​</a></h2>
<p>누가(Identity) 어떤 것을 이용할 수 있는지 없는지에 대한 것입니다.</p>
<p>Root User는 개정 생성시 발급이 되는데 초기 설정 이후에는 사용하지 않는 것을 권장해요</p>
<ol>
<li>Root User MFA 설정</li>
<li>Password Policy 설정</li>
<li>대체 연락처 설정</li>
<li>Admin User 생성 (여기서 작업을 하는 것이 좋다.)</li>
</ol>
<p>=&gt; 해당 작업을 제외한 모든 작업에서 Root User 사용을 제한하는 것이 좋아요. 만약 Root User와 동일한 권한을 행세하고 싶으면 아래와 같이 진행을 주면 돼요.</p>
<p>아래 사진을 보게 되면 IAM에 접속하여 사용자를 하나 생성을 해주는데 이 때 AdministratorAccess를 지정해주면 Root 계정이 아닌 다른 계정에 전체 권한을 부여할 수 있도록 해줍니다.
Admin의 Policy(json)은 아래와 같이 구성이 되어있어요.</p>
<div class="language-JSON language-json codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-json codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token property" style="color:#36acaa">"Version"</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"2012-10-17"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token property" style="color:#36acaa">"Statement"</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token property" style="color:#36acaa">"Effect"</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"Allow"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token property" style="color:#36acaa">"Action"</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"*"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token property" style="color:#36acaa">"Resource"</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"*"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre></div></div>
<img src="https://indianapoly.github.io/img/blog/aws/2025-07-21/img2.png" width="600">
<ul>
<li>
<p>Identity (보안 주체, Principal)</p>
<ul>
<li>Root User : 모든 권한을 소유, 초기 설정 후에 사용을 지양, 등록된 이메일 주소로 접근</li>
<li>IAM User : 부여된 권한만 행사, 장기자격증명, 생성된 자격(ID, PW)로 접근</li>
<li>IAM Role : 부여된 권한만 행사, 임시자격증명, AWS API를 사용해 접근</li>
<li>AWS Service(application) : 사용자 대신 작업 수행, IAM User / IAM Role을 이용해서 작업을 대신 수행</li>
</ul>
</li>
<li>
<p>Access Management</p>
<ul>
<li>IAM은 JSON 구조로 구성된 정책(policy) 문서를 기반으로 사용자의 권한을 관리</li>
</ul>
</li>
</ul>
<div class="language-JSON language-json codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-json codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token property" style="color:#36acaa">"누가"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"IAM User / AWS Service .."</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token property" style="color:#36acaa">"무엇을 (대상)"</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"S3 / EC2 / DynamoDB .."</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token property" style="color:#36acaa">"어떻게 (행위)"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"GET / DELETE / CREATE .."</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token property" style="color:#36acaa">"할 수 있다/없다"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"true/false"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre></div></div>
<p>JSON 정책 -&gt; Role에게 부여하고 이것을 다시 Service에 줄 수 있어요. EC2 인스턴스에 동일한 IAM 정책을 부여하고 싶으면 Role에 역할을 부여하고 해당 역할을 부여해주면 돼요.</p>
<img src="https://indianapoly.github.io/img/blog/aws/2025-07-21/img1.png" width="600">
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="network-baseline">Network Baseline<a href="https://indianapoly.github.io/blog/2025/07/21/aws/AWS-basic-1-title#network-baseline" class="hash-link" aria-label="Network Baseline에 대한 직접 링크" title="Network Baseline에 대한 직접 링크">​</a></h2>
<p>네트워크 3가지 설계 포인트</p>
<ul>
<li>
<p>segmentation : private 환경을 만들어 두는 것입니다.</p>
<ul>
<li>CIDR-Subnetting, Public &amp; Private ...</li>
</ul>
</li>
<li>
<p>connectivity : private 환경과 연결이 되는 것을 말합니다.</p>
<ul>
<li>IGW, NAT, Elastic IP, Site to Site VPN ...</li>
</ul>
</li>
<li>
<p>security : 열린 것들을 안전하게 방어하는 것입니다.</p>
<ul>
<li>보안 그룹, Network-ACL, WAF ...</li>
</ul>
</li>
</ul>
<p>Private IP 주소 대역은 아래 사진과 같이 RFC 1918 문서에 표준으로 지정하고 있습니다. 따라서 VPC 네트워크를 설정하게 된다면 사진과 같은 네트워크를 설정하면 됩니다.</p>
<img src="https://indianapoly.github.io/img/blog/aws/2025-07-21/img1.png" width="600">
<p>AWS에서는 예약된 IP 5개를 제외한 나머지를 자유롭게 사용할 수 있어요.</p>
<ul>
<li>x.x.x.0 : Network Address</li>
<li>x.x.x.255 : Broadcast Address</li>
<li>x.x.x.1 : VPC Router</li>
<li>x.x.x.2 : DNS server</li>
<li>x.x.x.3 : Futuer use</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="vpc-virtual-private-cloud">VPC (Virtual Private Cloud)<a href="https://indianapoly.github.io/blog/2025/07/21/aws/AWS-basic-1-title#vpc-virtual-private-cloud" class="hash-link" aria-label="VPC (Virtual Private Cloud)에 대한 직접 링크" title="VPC (Virtual Private Cloud)에 대한 직접 링크">​</a></h2>
<p>VPC는 다른 네트워크 환경 및 외부와 격리된 가상의 사설 네트워크를 말해요.</p>
<ul>
<li>
<p>AWS 안에서는 최소 /28 ~ 최대 /16 생성할 수 있어요.</p>
</li>
<li>
<p>VPC는 최대 5개 생성 가능하며, 더 추가를 하기 위해서는 AWS에 요청을 해주면 돼요.</p>
</li>
<li>
<p>CIDR은 한 번 설정하면 수정이 불가능합니다.</p>
<ul>
<li>추가하고 싶으면 Secondary를 추가해서 네트워크 확장을 할 수 있어요. 이것도 최대 5개인데 5개 초과해서 사용하기 위해서는 AWS에 요청을 해주면 됩니다.</li>
</ul>
</li>
<li>
<p>VPC는 특정 Region에 종속 리소스 (리전안에서만 활동이 가능함)에요.</p>
<ul>
<li>1개의 VPC로 모든 Region을 커버하는 것을 불가능합니다.</li>
</ul>
</li>
<li>
<p>외부와 격리된 VPC는 Internet GateWay를 통해서만 인터넷과 통신을 가능해요.</p>
<ul>
<li>Internet Gateway는 생성 후 VPC에 할당하여 사용합니다.</li>
<li>1개의 VPC에는 1개의 Internet Gateway만 할당 가능합니다.</li>
</ul>
</li>
<li>
<p>격리된 network 간에 통신이 가능하도록 Routing Table을 설정해주면 됩니다.</p>
</li>
<li>
<p>NAT Gateway vs Routing Table</p>
<ul>
<li>Private Subnet의 리소스들이 Nat Gateway의 Public IP를 공유해 인터넷을 이용합니다. 내부 리소스가 외부로 접근하는 경우에만 허용해요.</li>
<li>외부에서 내부로 접속하는 트래픽은 처리할 수 없어요.</li>
</ul>
</li>
</ul>
<img src="https://indianapoly.github.io/img/blog/aws/2025-07-21/img4.png" width="600">
<img src="https://indianapoly.github.io/img/blog/aws/2025-07-21/img5.png" width="600">
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="network-security">Network Security<a href="https://indianapoly.github.io/blog/2025/07/21/aws/AWS-basic-1-title#network-security" class="hash-link" aria-label="Network Security에 대한 직접 링크" title="Network Security에 대한 직접 링크">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="network-acl">Network ACL<a href="https://indianapoly.github.io/blog/2025/07/21/aws/AWS-basic-1-title#network-acl" class="hash-link" aria-label="Network ACL에 대한 직접 링크" title="Network ACL에 대한 직접 링크">​</a></h3>
<ul>
<li>서브넷에 접근 허용할 트래픽 정보를 관리하는 가상의 방화벽이에요. (서브넷 단위로 적용 가능합니다.)</li>
<li>1개의 NACL에 여러 개의 서브넷을 적용하는 것은 가능하나 그 반대는 불가능해요.</li>
<li>상태 비저장 방식이어서 In-bound와 Out-bound 모두 규칙을 적용해주어야 해요.</li>
<li>모든 트래픅을 허용하고, 차단할 IP 주소나 Port를 지정해서 차단하는 방식이라고 생각하면 편해요.</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="보안-그룹">보안 그룹<a href="https://indianapoly.github.io/blog/2025/07/21/aws/AWS-basic-1-title#%EB%B3%B4%EC%95%88-%EA%B7%B8%EB%A3%B9" class="hash-link" aria-label="보안 그룹에 대한 직접 링크" title="보안 그룹에 대한 직접 링크">​</a></h3>
<ul>
<li>리소스에 접근 허용할 트래픽 정보를 관리하는 가상의 방화벽이에요.</li>
<li>Elastic Network Interface에 여러 개의 보안 그룹 적용이 가능해요.</li>
<li>In-bound / Out-bound 트래픽의 허용 규칙만을 정의해요. 기본적으로는 다 막아두지만 특정한 것에 대해서 허용해요.</li>
<li>보안 그룹은 상태 저장 방식의 방화벽이기 때문에 In-bound 허용 규칙이 적용이 되어있으면, Out-bound 허용 규칙이 없어도 통과할 수 있어요.</li>
<li>리소스 단위로 각 허용되어야할 Protocol, Port를 세부적으로 지정하는 방식이라고 알고 있으면 돼요.</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="elastic-compute-cloud-ec2">Elastic Compute Cloud (EC2)<a href="https://indianapoly.github.io/blog/2025/07/21/aws/AWS-basic-1-title#elastic-compute-cloud-ec2" class="hash-link" aria-label="Elastic Compute Cloud (EC2)에 대한 직접 링크" title="Elastic Compute Cloud (EC2)에 대한 직접 링크">​</a></h2>
<p>가상화된 컴퓨팅 자원(인스턴스를 제공)을 빌려줘요.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="naming-rule">Naming Rule<a href="https://indianapoly.github.io/blog/2025/07/21/aws/AWS-basic-1-title#naming-rule" class="hash-link" aria-label="Naming Rule에 대한 직접 링크" title="Naming Rule에 대한 직접 링크">​</a></h3>
<p>EC2 instance Type은 instance family, generation, attributes, size로 구성이 되어있어요.</p>
<div class="language-txt codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-txt codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">ex. t4g. 2xlarge 를 보면 t(instance family) | 4(instance generation) | g(attributes) | 2xlarge(size)</span><br></span></code></pre></div></div>
<ul>
<li>instance family: 기능 별로 그룹으로 묶어 패밀리 단위로 구분해요.</li>
</ul>
<img src="https://indianapoly.github.io/img/blog/aws/2025-07-21/img6.png" width="600">
<ul>
<li>
<p>instance generation</p>
<ul>
<li>주기적으로 최신 기술을 반영한 인스턴스 세대를 출시해요.</li>
<li>이전 세대 인스턴스 대비 비용이 낮아지거나 성능이 향상돼요.</li>
<li>리전, 가용영역(AZ) 별로 지원되는 인스턴스 세대가 달라요.</li>
</ul>
</li>
<li>
<p>attributes</p>
<ul>
<li>추가 지원되는 기능에 따라 attributes가 붙어요.</li>
</ul>
</li>
</ul>
<img src="https://indianapoly.github.io/img/blog/aws/2025-07-21/img7.png" width="600">
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="amazon-machine-imageami">Amazon Machine Image(AMI)<a href="https://indianapoly.github.io/blog/2025/07/21/aws/AWS-basic-1-title#amazon-machine-imageami" class="hash-link" aria-label="Amazon Machine Image(AMI)에 대한 직접 링크" title="Amazon Machine Image(AMI)에 대한 직접 링크">​</a></h3>
<ul>
<li>
<p>EC2 인스턴스를 실행하는데 필요한 설정 정보를 모은 단위입니다.</p>
</li>
<li>
<p>AMI 구성 요소 아래와 3가지에요:</p>
<ul>
<li>루트 볼륨 템플릿: 인스턴스 루트 볼륨에 사용되는 템플릿 (ex. 아마존 리눅스2, 우분투 리눅스 등)</li>
<li>인스턴스 시작 설정 값 : 인스턴스 타입, 네트워크 설정, 스토리지 구성</li>
<li>AMI 권환 관리 정보(Permission): public / private</li>
</ul>
</li>
<li>
<p>리전 단위로 저장되며, 사용하려면 리전에 AMI가 없으면 리전 간 복사를 진행해요.</p>
</li>
<li>
<p>AMI 데이터 자체는 S3에 저장이 되며 저장 비용이 발생해요.</p>
</li>
<li>
<p>실제 사용하는 사례는 아래와 같아요:</p>
<ol>
<li>DevOps CI/CD 환경에서 개발 환경이 사전 구성된 AMI로 테스트 환경을 구성해요.</li>
<li>Autu Scaling을 통해 동일한 설정을 가진 인스턴스를 복제 생성해요.</li>
<li>사내 지정된 보안 소프트웨어가 설치된 AMI 인스턴스를 생성할 때 사용해요.</li>
<li>인스턴스 장애 발생 상황에서 사전에 백업한 인스턴스 AMI 이용하여 시스템을 복원해요.</li>
</ol>
</li>
<li>
<p>AMI 의 종류는 아래와 같이 있어요:</p>
<ol>
<li>AWS AMI : AWS가 기본적으로 제공하는 이미지입니다.</li>
<li>Marketplace AMI : third-party vender가 생성한 이미지입니다.</li>
<li>Community AMI : aws 사용자가 생성한 이미지이고 사용 전 보안과 안정성 검토가 필수에요.</li>
<li>Sharing AMI : 특정 사용자 간에 공유하는 이미지로, 조직 내 협업, 특정 프로젝트에서 사용돼요.</li>
</ol>
</li>
</ul>
<img src="https://indianapoly.github.io/img/blog/aws/2025-07-21/img8.png" width="600">
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="ip">IP<a href="https://indianapoly.github.io/blog/2025/07/21/aws/AWS-basic-1-title#ip" class="hash-link" aria-label="IP에 대한 직접 링크" title="IP에 대한 직접 링크">​</a></h3>
<p>public IP는 서브넷에 생성할 때 자동 할당 되는 IP에요. 최근에는 IPv4 IP갯수가 부족해서 돈을 받아요.</p>
<p>Elastic IP는 영구적인 IP로 인스턴스 중지 후에 다시 시작해도 같은 값을 유지해요.</p>]]></content>
        <author>
            <name>고현림</name>
            <uri>https://www.linkedin.com/in/%ED%98%84%EB%A6%BC-%EA%B3%A0-b53602221/</uri>
        </author>
        <category label="TIL" term="TIL"/>
        <category label="AWS" term="AWS"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Grafana + Prometheus + MySQL Exporter를 활용한 MySQL 모니터링 설정기]]></title>
        <id>https://indianapoly.github.io/blog/2025/07/20/docker/MYSQL-monioring-setting-title</id>
        <link href="https://indianapoly.github.io/blog/2025/07/20/docker/MYSQL-monioring-setting-title"/>
        <updated>2025-07-20T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[{/ truncate /}]]></summary>
        <content type="html"><![CDATA[
<p>최근에 인프라 관련된 수업을 진행하면서 내 스스로 할 수 있는 프로젝트가 뭔지, 어떻게 하면 오픈소스들을 잘 사용할 수 있을지 고민을 해보았습니다. 그 결과 DB를 만들고 DB에 데이터가 많이 몰리게 되었을 때 관리할 수 있는 흐름을 만들면 좋겠다 생각을 했습니다.</p>
<p>따라서 MySQL을 모니터링하기 위해 Prometheus와 Grafana를 연동해 대시보드를 구성하는 작업을 진행했습니다. 이 글에서는 그 전체 과정을 정리해봤어요.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="️-전체-아키텍처">🏗️ 전체 아키텍처<a href="https://indianapoly.github.io/blog/2025/07/20/docker/MYSQL-monioring-setting-title#%EF%B8%8F-%EC%A0%84%EC%B2%B4-%EC%95%84%ED%82%A4%ED%85%8D%EC%B2%98" class="hash-link" aria-label="🏗️ 전체 아키텍처에 대한 직접 링크" title="🏗️ 전체 아키텍처에 대한 직접 링크">​</a></h2>
<p>추후에 좀 더 복잡한 아키텍처도 만져보면서 계속해서 확장해나가보면 좋을거 같은 생각이듭니다!</p>
<div class="language-text codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">MySQL ← mysqld_exporter → Prometheus → Grafana</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  ↑</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">phpMyAdmin (관리용)</span><br></span></code></pre></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-프로젝트-구조">📁 프로젝트 구조<a href="https://indianapoly.github.io/blog/2025/07/20/docker/MYSQL-monioring-setting-title#-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-%EA%B5%AC%EC%A1%B0" class="hash-link" aria-label="📁 프로젝트 구조에 대한 직접 링크" title="📁 프로젝트 구조에 대한 직접 링크">​</a></h2>
<div class="language-text codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">grafana/</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">├── provisioning/</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">│   ├── dashboards/</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">│   │   └── dashboard.yml</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">│   └── datasources/</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">│       └── datasource.yml</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">├── mysql/</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">│   └── mysql_data/</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">├── mysqld-exporter/</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">│   └── my.cnf</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">├── prometheus/</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">│   └── prometheus.yml</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">├── .env</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">└── docker-compose.yml</span><br></span></code></pre></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-docker-compose-설정">🐳 Docker Compose 설정<a href="https://indianapoly.github.io/blog/2025/07/20/docker/MYSQL-monioring-setting-title#-docker-compose-%EC%84%A4%EC%A0%95" class="hash-link" aria-label="🐳 Docker Compose 설정에 대한 직접 링크" title="🐳 Docker Compose 설정에 대한 직접 링크">​</a></h2>
<p>전체 스택을 한 번에 관리하기 위해 다음과 같이 docker-compose.yml을 구성했어요.</p>
<p>볼륨 설정시 파일 위치 실수를 방지하기 위해서 하나의 파일 내에서 관련된 파일들을 모두 관리해주었습니다.(이렇게 하니깐 확실히 상대경로로 관리하기 쉽다는 점이 좋았습니다.) 그리고 $<!-- -->로 표시한 내용에 대해서는 중요파일이기 때문에 .env로 파일을 설정해주었습니다. .env 파일에 대한 내용은 아래에 보면 확인할 수 있어요.</p>
<div class="language-yaml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-yaml codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token key atrule" style="color:#00a4db">version</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"3.8"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">services</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">mysql</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">image</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> mysql</span><span class="token punctuation" style="color:#393A34">:</span><span class="token number" style="color:#36acaa">8.0</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">container_name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> mysql</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">restart</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> always</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">environment</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token key atrule" style="color:#00a4db">MYSQL_ROOT_PASSWORD</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> $</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">MYSQL_ROOT_PASSWORD</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token key atrule" style="color:#00a4db">MYSQL_DATABASE</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> $</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">MYSQL_DATABASE</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">volumes</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> ./mysql/mysql_data</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain">/var/lib/mysql</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">ports</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"3306:3306"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">phpmyadmin</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">image</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> phpmyadmin/phpmyadmin</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">container_name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> phpmyadmin</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">platform</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> linux/amd64</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">ports</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"8080:80"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">environment</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token key atrule" style="color:#00a4db">PMA_HOST</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> mysql</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token key atrule" style="color:#00a4db">PMA_PORT</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">3306</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">depends_on</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> mysql</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">mysqld-exporter</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">image</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> prom/mysqld</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">exporter</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">container_name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> mysqld_exporter</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">volumes</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> ./mysqld</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">exporter/my.cnf</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain">/etc/mysql/my.cnf</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain">ro</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">depends_on</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> mysql</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">ports</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"9104:9104"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">command</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">"--config.my-cnf=/etc/mysql/my.cnf"</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">prometheus</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">image</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> prom/prometheus</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">container_name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> prometheus</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">volumes</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> ./prometheus/prometheus.yml</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain">/etc/prometheus/prometheus.yml</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">ports</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"9090:9090"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">depends_on</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> mysqld</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">exporter</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">grafana</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">image</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> grafana/grafana</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">container_name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> grafana</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">environment</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token key atrule" style="color:#00a4db">GF_SECURITY_ADMIN_USER</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> $</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">GF_SECURITY_ADMIN_USER</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token key atrule" style="color:#00a4db">GF_SECURITY_ADMIN_PASSWORD</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> $</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">GF_SECURITY_ADMIN_PASSWORD</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">volumes</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> ./grafana/provisioning/dashboards</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain">/etc/grafana/provisioning/dashboards</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> ./grafana/provisioning/datasources</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain">/etc/grafana/provisioning/datasources</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">ports</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"3000:3000"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">depends_on</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> prometheus</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">volumes</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  mysql_data</span><span class="token punctuation" style="color:#393A34">:</span><br></span></code></pre></div></div>
<p>.env 설정 파일이에요. MYSQL에서 root로 접근할 때 사용할 수 있는 password와 사용할 database를 지정을 해줍니다. Grafana와 같은 경우에는 비밀번호를 설정해주지 않으면 아이디와 비밀번호가 admin으로 설정이 되어있어요. 그리고 비밀번호를 변경하라는 메세지가 나오는데 docker 컨테이너를 내리고 다시 실행을 하게 되면 계속해서 비밀번호를 설정하라는 창이 나와서 설정해주는게 편했습니다.</p>
<div class="language-.env codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-.env codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">MYSQL_ROOT_PASSWORD=</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">MYSQL_DATABASE=</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">GF_SECURITY_ADMIN_USER=</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">GF_SECURITY_ADMIN_PASSWORD=</span><br></span></code></pre></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-주요-설정-파일들">🔧 주요 설정 파일들<a href="https://indianapoly.github.io/blog/2025/07/20/docker/MYSQL-monioring-setting-title#-%EC%A3%BC%EC%9A%94-%EC%84%A4%EC%A0%95-%ED%8C%8C%EC%9D%BC%EB%93%A4" class="hash-link" aria-label="🔧 주요 설정 파일들에 대한 직접 링크" title="🔧 주요 설정 파일들에 대한 직접 링크">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="1-mysqld_exporter-설정-mycnf">1. mysqld_exporter 설정 (my.cnf)<a href="https://indianapoly.github.io/blog/2025/07/20/docker/MYSQL-monioring-setting-title#1-mysqld_exporter-%EC%84%A4%EC%A0%95-mycnf" class="hash-link" aria-label="1. mysqld_exporter 설정 (my.cnf)에 대한 직접 링크" title="1. mysqld_exporter 설정 (my.cnf)에 대한 직접 링크">​</a></h3>
<p>여기서 중요한 점은 user와 password는 내가 접근하고자하는 mysql의 내용이어야 돼요. 즉 user에 exporter가 설정이 되어 있지 않으면 access denied가 설정이 될 수 있어요. 이를 유의해서 작성해주어야 해요. 아래 내용에서 이와 관련된 문제 해결을 적어두었습니다.</p>
<div class="language-ini codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-ini codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">[client]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">user=exporter</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">password=exporter_password</span><br></span></code></pre></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="2-prometheus-설정-prometheusyml">2. Prometheus 설정 (prometheus.yml)<a href="https://indianapoly.github.io/blog/2025/07/20/docker/MYSQL-monioring-setting-title#2-prometheus-%EC%84%A4%EC%A0%95-prometheusyml" class="hash-link" aria-label="2. Prometheus 설정 (prometheus.yml)에 대한 직접 링크" title="2. Prometheus 설정 (prometheus.yml)에 대한 직접 링크">​</a></h3>
<p>Prometheus가 타겟으로 하는 mysqld-expoert를 설정을 해주어야 합니다.</p>
<div class="language-yaml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-yaml codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token key atrule" style="color:#00a4db">global</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">scrape_interval</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> 15s</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">scrape_configs</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">job_name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"mysqld-exporter"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">static_configs</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">targets</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">"mysqld-exporter:9104"</span><span class="token punctuation" style="color:#393A34">]</span><br></span></code></pre></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="3-grafana-데이터소스-자동-설정-datasourceyml">3. Grafana 데이터소스 자동 설정 (datasource.yml)<a href="https://indianapoly.github.io/blog/2025/07/20/docker/MYSQL-monioring-setting-title#3-grafana-%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%86%8C%EC%8A%A4-%EC%9E%90%EB%8F%99-%EC%84%A4%EC%A0%95-datasourceyml" class="hash-link" aria-label="3. Grafana 데이터소스 자동 설정 (datasource.yml)에 대한 직접 링크" title="3. Grafana 데이터소스 자동 설정 (datasource.yml)에 대한 직접 링크">​</a></h3>
<p>Grafana를 처음 실행을 하게 되면 data source를 정하는 과정이 있습니다. 이 과정을 하지 않으면 데이터를 가져오지 않기 때문에 당연히 대시보드가 정상적으로 만들어지지 않아요. 아래 파일을 설정을 해주면 Grafana가 실행할 때 자동으로 Prometheus를 설정해줍니다.</p>
<div class="language-yaml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-yaml codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token key atrule" style="color:#00a4db">apiVersion</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">datasources</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> Prometheus</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">type</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> prometheus</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">access</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> proxy</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">url</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> http</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain">//prometheus</span><span class="token punctuation" style="color:#393A34">:</span><span class="token number" style="color:#36acaa">9090</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">isDefault</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token boolean important" style="color:#36acaa">true</span><br></span></code></pre></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-주요-문제들과-해결책">🚨 주요 문제들과 해결책<a href="https://indianapoly.github.io/blog/2025/07/20/docker/MYSQL-monioring-setting-title#-%EC%A3%BC%EC%9A%94-%EB%AC%B8%EC%A0%9C%EB%93%A4%EA%B3%BC-%ED%95%B4%EA%B2%B0%EC%B1%85" class="hash-link" aria-label="🚨 주요 문제들과 해결책에 대한 직접 링크" title="🚨 주요 문제들과 해결책에 대한 직접 링크">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="1-mysqld_exporter-access-denied-문제-해결">1. mysqld_exporter <code>access denied</code> 문제 해결<a href="https://indianapoly.github.io/blog/2025/07/20/docker/MYSQL-monioring-setting-title#1-mysqld_exporter-access-denied-%EB%AC%B8%EC%A0%9C-%ED%95%B4%EA%B2%B0" class="hash-link" aria-label="1-mysqld_exporter-access-denied-문제-해결에 대한 직접 링크" title="1-mysqld_exporter-access-denied-문제-해결에 대한 직접 링크">​</a></h3>
<p><strong>문제</strong>: mysqld_exporter 실행 시 다음 오류 발생</p>
<div class="language-text codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">[ERROR] Access denied for user 'exporter'@'localhost'</span><br></span></code></pre></div></div>
<p><strong>해결책</strong>:</p>
<p>exporter가 접근할 user와 해당 user의 password를 my.cnf에 잘 설정 해주는 것이 중요합니다. my.cnf에 exporter를 설정을 해두었는데 mysql user에 exporter가 없다면 당연히 에러가 나요.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="2-grafana에서-prometheus-연결-실패">2. Grafana에서 Prometheus 연결 실패<a href="https://indianapoly.github.io/blog/2025/07/20/docker/MYSQL-monioring-setting-title#2-grafana%EC%97%90%EC%84%9C-prometheus-%EC%97%B0%EA%B2%B0-%EC%8B%A4%ED%8C%A8" class="hash-link" aria-label="2. Grafana에서 Prometheus 연결 실패에 대한 직접 링크" title="2. Grafana에서 Prometheus 연결 실패에 대한 직접 링크">​</a></h3>
<p><strong>문제</strong>: Grafana에서 <code>http://localhost:9090</code>으로 설정했더니 연결 실패</p>
<p><strong>해결책</strong>: 도커 컨테이너 환경에서는 서비스 이름으로 접근하는 것이 핵심이었습니다.</p>
<div class="language-text codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">❌ http://localhost:9090</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">✅ http://prometheus:9090</span><br></span></code></pre></div></div>
<p><strong>이유</strong>: 도커 컨테이너에서 <code>localhost</code>는 자기 자신(컨테이너 내부)을 의미하므로, 같은 네트워크 내의 다른 컨테이너에 접근할 때는 서비스명을 사용해야 합니다!</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="3-grafana-설정-자동화">3. Grafana 설정 자동화<a href="https://indianapoly.github.io/blog/2025/07/20/docker/MYSQL-monioring-setting-title#3-grafana-%EC%84%A4%EC%A0%95-%EC%9E%90%EB%8F%99%ED%99%94" class="hash-link" aria-label="3. Grafana 설정 자동화에 대한 직접 링크" title="3. Grafana 설정 자동화에 대한 직접 링크">​</a></h3>
<p>2번과 같이 수동 설정으로 설정하는 과정에 있어서 문제가 발생할 수도 있고, 컨테이너가 down 된 상태에서 다시 실행을 한다면 매번 해주는 과정이 귀찮아질 수 있어 data source를 자동화 해줄 수 있습니다.</p>
<p><code>provisioning</code> 디렉터리를 활용한 자동화 구현:</p>
<div class="language-text codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">./grafana/provisioning/</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">├── dashboards/     # 대시보드 자동 로딩</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">└── datasources/    # 데이터소스 자동 설정</span><br></span></code></pre></div></div>
<p>이렇게 하면 컨테이너 초기 실행 시 모든 설정이 자동으로 적용됨</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="4-phpmyadmin-추가로-관리-편의성-향상">4. phpMyAdmin 추가로 관리 편의성 향상<a href="https://indianapoly.github.io/blog/2025/07/20/docker/MYSQL-monioring-setting-title#4-phpmyadmin-%EC%B6%94%EA%B0%80%EB%A1%9C-%EA%B4%80%EB%A6%AC-%ED%8E%B8%EC%9D%98%EC%84%B1-%ED%96%A5%EC%83%81" class="hash-link" aria-label="4. phpMyAdmin 추가로 관리 편의성 향상에 대한 직접 링크" title="4. phpMyAdmin 추가로 관리 편의성 향상에 대한 직접 링크">​</a></h3>
<p>터미널 기반 MySQL 관리의 불편함을 해결하기 위해 phpMyAdmin 추가했어요.:</p>
<ul>
<li>포트: 8080 (보통 잘 사용하기 때문에 docker ps -a 를 활용해서 해당 포트를 잡고 있는 컨테이너가 있는지 확인해주어야 해요.)</li>
<li>시각적 테이블 관리</li>
<li>사용자 권한 설정 간편화</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="5-grafana-mysql-overview-dashboard-데이터-표시-문제">5. Grafana MySQL Overview Dashboard 데이터 표시 문제<a href="https://indianapoly.github.io/blog/2025/07/20/docker/MYSQL-monioring-setting-title#5-grafana-mysql-overview-dashboard-%EB%8D%B0%EC%9D%B4%ED%84%B0-%ED%91%9C%EC%8B%9C-%EB%AC%B8%EC%A0%9C" class="hash-link" aria-label="5. Grafana MySQL Overview Dashboard 데이터 표시 문제에 대한 직접 링크" title="5. Grafana MySQL Overview Dashboard 데이터 표시 문제에 대한 직접 링크">​</a></h3>
<p><strong>문제</strong>: 모든 패널이 <code>No data</code> 표시</p>
<p><strong>원인</strong>: 템플릿 변수와 쿼리 간 연동 문제가 있었어요.</p>
<ul>
<li><code>$host</code> 변수 설정 오류가 있어 prometheus로 부터 데이터를 가지고 오지 못해서 No data가 보였어요.</li>
</ul>
<p><strong>해결책</strong>:</p>
<ol>
<li>
<p><strong>$host 변수 재설정</strong>:</p>
<ul>
<li>Query type: <code>Label values</code></li>
<li>Metric: <code>mysql_global_status_threads_connected</code></li>
<li>Label: <code>instance</code></li>
</ul>
</li>
<li>
<p><strong>변수 새로고침 설정</strong>:</p>
<ul>
<li><code>On dashboard load</code>로 설정</li>
<li>또는 패널에서 수동 <code>Run query</code> 실행</li>
</ul>
</li>
</ol>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-최종-구성-결과">📊 최종 구성 결과<a href="https://indianapoly.github.io/blog/2025/07/20/docker/MYSQL-monioring-setting-title#-%EC%B5%9C%EC%A2%85-%EA%B5%AC%EC%84%B1-%EA%B2%B0%EA%B3%BC" class="hash-link" aria-label="📊 최종 구성 결과에 대한 직접 링크" title="📊 최종 구성 결과에 대한 직접 링크">​</a></h2>
<p><a href="https://github.com/indianaPoly/mysql-monitoring" target="_blank" rel="noopener noreferrer">전체 코드 보러 갈래요</a></p>
<p>설정 완료 후 Grafana 대시보드에서 실시간으로 확인 가능한 지표들은 아래와 같아요:</p>
<ul>
<li><strong>MySQL Uptime</strong>: 서버 가동 시간</li>
<li><strong>Threads Connected/Running</strong>: 연결된 스레드 수</li>
<li><strong>QPS (Queries per Second)</strong>: 초당 쿼리 수</li>
<li><strong>InnoDB Buffer Pool</strong>: 버퍼 풀 사용량</li>
<li><strong>Connections</strong>: 연결 상태</li>
<li><strong>Table Locks</strong>: 테이블 잠금 현황</li>
<li><strong>Thread Cache</strong>: 스레드 캐시 상태</li>
</ul>
<p>대시보드 새로고침 간격을 <code>5초</code>로 설정하여 실시간에 가까운 모니터링 환경 구축할 수 있었습니다! 아래는 구성 후 결과물입니다.</p>
<img src="https://indianapoly.github.io/img/blog/docker/2025-07-20/img1.png" width="600">]]></content>
        <author>
            <name>고현림</name>
            <uri>https://www.linkedin.com/in/%ED%98%84%EB%A6%BC-%EA%B3%A0-b53602221/</uri>
        </author>
        <category label="TIL" term="TIL"/>
        <category label="Docker" term="Docker"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Terraform으로 EKS 배포 시 발생하는 리소스 충돌 해결 가이드]]></title>
        <id>https://indianapoly.github.io/blog/2025/07/19/terraform/terraform-errorHandling-title</id>
        <link href="https://indianapoly.github.io/blog/2025/07/19/terraform/terraform-errorHandling-title"/>
        <updated>2025-07-19T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[{/ truncate /}]]></summary>
        <content type="html"><![CDATA[
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-문제-상황">🚨 문제 상황<a href="https://indianapoly.github.io/blog/2025/07/19/terraform/terraform-errorHandling-title#-%EB%AC%B8%EC%A0%9C-%EC%83%81%ED%99%A9" class="hash-link" aria-label="🚨 문제 상황에 대한 직접 링크" title="🚨 문제 상황에 대한 직접 링크">​</a></h2>
<p>Terraform으로 EKS 클러스터를 배포하던 중 다음과 같은 오류들이 연속으로 발생했어요:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">Error: creating EC2 EIP: operation error EC2: AllocateAddress,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">https response error StatusCode: 400, RequestID: &lt;requiest id&gt;,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">api error AddressLimitExceeded: The maximum number of addresses has been reached.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Error: creating KMS Alias (alias/eks/cwave): operation error KMS: CreateAlias,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">https response error StatusCode: 400, RequestID: &lt;requiest id&gt;,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">AlreadyExistsException: An alias with the name arn:aws:kms:ap-northeast-2:368677659737:alias/eks/cwave already exists</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Error: creating EKS Cluster (cwave): operation error EKS: CreateCluster,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">https response error StatusCode: 409, RequestID: &lt;requiest id&gt;,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">ResourceInUseException: Cluster already exists with name: cwave</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Error: creating IAM Role (efs-csi): operation error IAM: CreateRole,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">https response error StatusCode: 409, RequestID: &lt;requiest id&gt;,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">EntityAlreadyExists: Role with name efs-csi already exists.</span><br></span></code></pre></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-문제-원인-분석">🔍 문제 원인 분석<a href="https://indianapoly.github.io/blog/2025/07/19/terraform/terraform-errorHandling-title#-%EB%AC%B8%EC%A0%9C-%EC%9B%90%EC%9D%B8-%EB%B6%84%EC%84%9D" class="hash-link" aria-label="🔍 문제 원인 분석에 대한 직접 링크" title="🔍 문제 원인 분석에 대한 직접 링크">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="근본-원인-개발-환경-혼동으로-인한-리소스-중복">근본 원인: 개발 환경 혼동으로 인한 리소스 중복<a href="https://indianapoly.github.io/blog/2025/07/19/terraform/terraform-errorHandling-title#%EA%B7%BC%EB%B3%B8-%EC%9B%90%EC%9D%B8-%EA%B0%9C%EB%B0%9C-%ED%99%98%EA%B2%BD-%ED%98%BC%EB%8F%99%EC%9C%BC%EB%A1%9C-%EC%9D%B8%ED%95%9C-%EB%A6%AC%EC%86%8C%EC%8A%A4-%EC%A4%91%EB%B3%B5" class="hash-link" aria-label="근본 원인: 개발 환경 혼동으로 인한 리소스 중복에 대한 직접 링크" title="근본 원인: 개발 환경 혼동으로 인한 리소스 중복에 대한 직접 링크">​</a></h3>
<p><strong>실제 발생 과정:</strong></p>
<ol>
<li>개발 환경에 <code>local</code>과 <code>aws</code> 두 개의 폴더가 존재</li>
<li>지금까지 local 환경과 aws 환경을 착각해서 개발을 진행</li>
<li>local 환경에서 생성한 Terraform 리소스를 정확하게 삭제하지 않음</li>
<li>aws 폴더로 이동해서 다시 <code>terraform apply</code>를 시도</li>
<li><strong>결과</strong>: 동일한 리소스명으로 인한 중복 생성 시도로 충돌 발생했어요</li>
</ol>
<p><strong>폴더 구조 예시:</strong></p>
<div class="language-text codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">project/</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">├── local/          # 로컬 개발용 (기존 리소스 잔존)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">│   ├── main.tf</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">│   └── terraform.tfstate</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">└── aws/            # AWS 환경용 (새로 배포 시도)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    ├── main.tf</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    └── terraform.tfstate</span><br></span></code></pre></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="세부-원인들">세부 원인들<a href="https://indianapoly.github.io/blog/2025/07/19/terraform/terraform-errorHandling-title#%EC%84%B8%EB%B6%80-%EC%9B%90%EC%9D%B8%EB%93%A4" class="hash-link" aria-label="세부 원인들에 대한 직접 링크" title="세부 원인들에 대한 직접 링크">​</a></h3>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="1-eip-한도-초과-문제">1. EIP 한도 초과 문제<a href="https://indianapoly.github.io/blog/2025/07/19/terraform/terraform-errorHandling-title#1-eip-%ED%95%9C%EB%8F%84-%EC%B4%88%EA%B3%BC-%EB%AC%B8%EC%A0%9C" class="hash-link" aria-label="1. EIP 한도 초과 문제에 대한 직접 링크" title="1. EIP 한도 초과 문제에 대한 직접 링크">​</a></h4>
<p>AWS 계정당 EIP(Elastic IP) 할당 한도가 있고 제가 확인했을 때는 5개가 할당 한도가 있었어요.</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># 현재 EIP 사용량 확인</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">aws ec2 describe-addresses --region ap-northeast-2</span><br></span></code></pre></div></div>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="2-리소스-중복-문제">2. 리소스 중복 문제<a href="https://indianapoly.github.io/blog/2025/07/19/terraform/terraform-errorHandling-title#2-%EB%A6%AC%EC%86%8C%EC%8A%A4-%EC%A4%91%EB%B3%B5-%EB%AC%B8%EC%A0%9C" class="hash-link" aria-label="2. 리소스 중복 문제에 대한 직접 링크" title="2. 리소스 중복 문제에 대한 직접 링크">​</a></h4>
<p>EKS 클러스터를 삭제했지만 관련 리소스들(IAM 역할, KMS 별칭 등)은 자동으로 삭제되지 않았어요.</p>
<p><strong>왜 이런 일이 발생하는가?</strong></p>
<ul>
<li>EKS 클러스터 삭제 시 <strong>IAM 역할은 자동으로 삭제되지 않아요.</strong></li>
<li>KMS 별칭도 마찬가지로 수동 삭제가 필요해요.</li>
</ul>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="3-terraform-상태-파일-분리로-인한-문제">3. Terraform 상태 파일 분리로 인한 문제<a href="https://indianapoly.github.io/blog/2025/07/19/terraform/terraform-errorHandling-title#3-terraform-%EC%83%81%ED%83%9C-%ED%8C%8C%EC%9D%BC-%EB%B6%84%EB%A6%AC%EB%A1%9C-%EC%9D%B8%ED%95%9C-%EB%AC%B8%EC%A0%9C" class="hash-link" aria-label="3. Terraform 상태 파일 분리로 인한 문제에 대한 직접 링크" title="3. Terraform 상태 파일 분리로 인한 문제에 대한 직접 링크">​</a></h4>
<ul>
<li><code>local/terraform.tfstate</code>와 <code>aws/terraform.tfstate</code>가 각각 관리돼요.</li>
<li>실제 AWS 리소스는 동일하지만 Terraform 상태는 분리되어 있어요.</li>
<li>새로운 폴더에서 배포 시 기존 리소스를 인식하지 못하는 문제가 있는 것을 파악했어요.</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="️-해결-과정">🛠️ 해결 과정<a href="https://indianapoly.github.io/blog/2025/07/19/terraform/terraform-errorHandling-title#%EF%B8%8F-%ED%95%B4%EA%B2%B0-%EA%B3%BC%EC%A0%95" class="hash-link" aria-label="🛠️ 해결 과정에 대한 직접 링크" title="🛠️ 해결 과정에 대한 직접 링크">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="1단계-eip-사용량-확인-및-분석">1단계: EIP 사용량 확인 및 분석<a href="https://indianapoly.github.io/blog/2025/07/19/terraform/terraform-errorHandling-title#1%EB%8B%A8%EA%B3%84-eip-%EC%82%AC%EC%9A%A9%EB%9F%89-%ED%99%95%EC%9D%B8-%EB%B0%8F-%EB%B6%84%EC%84%9D" class="hash-link" aria-label="1단계: EIP 사용량 확인 및 분석에 대한 직접 링크" title="1단계: EIP 사용량 확인 및 분석에 대한 직접 링크">​</a></h3>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># EIP 목록과 연결 상태 확인</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">aws ec2 describe-addresses --region ap-northeast-2 --output table</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># 각 EIP가 무엇에 연결되어 있는지 확인</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">aws ec2 describe-network-interfaces --region ap-northeast-2 \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  --network-interface-ids eni-xxxx eni-yyyy \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  --query 'NetworkInterfaces[*].{NetworkInterfaceId:NetworkInterfaceId,Description:Description,Status:Status}'</span><br></span></code></pre></div></div>
<p><strong>결과 분석:</strong></p>
<div class="language-json codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-json codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token punctuation" style="color:#393A34">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token property" style="color:#36acaa">"NetworkInterfaceId"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"eni-id"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token property" style="color:#36acaa">"Description"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"Interface for NAT Gateway nat-id"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token property" style="color:#36acaa">"Status"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"in-use"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">// ... 5개의 EIP가 모두 NAT Gateway에 연결됨</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">]</span><br></span></code></pre></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="2단계-terraform-상태-확인">2단계: Terraform 상태 확인<a href="https://indianapoly.github.io/blog/2025/07/19/terraform/terraform-errorHandling-title#2%EB%8B%A8%EA%B3%84-terraform-%EC%83%81%ED%83%9C-%ED%99%95%EC%9D%B8" class="hash-link" aria-label="2단계: Terraform 상태 확인에 대한 직접 링크" title="2단계: Terraform 상태 확인에 대한 직접 링크">​</a></h3>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># 현재 Terraform에서 관리하는 EIP 확인</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">terraform plan | grep eip</span><br></span></code></pre></div></div>
<p><strong>결과:</strong></p>
<div class="language-text codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">aws_eip.nat["c"]: Refreshing state... [id=eipalloc-id]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">aws_eip.nat["a"]: Refreshing state... [id=eipalloc-id]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># aws_eip.nat["b"] will be created &lt;- 이 부분이 문제!</span><br></span></code></pre></div></div>
<p><strong>발견한 문제점:</strong></p>
<ul>
<li><code>nat["a"]</code>와 <code>nat["c"]</code>는 이미 Terraform 상태에 존재해요.</li>
<li><code>nat["b"]</code>만 새로 생성하려고 해서 EIP 한도 초과 발생가 발생했어요.</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="3단계-eip-문제-해결">3단계: EIP 문제 해결<a href="https://indianapoly.github.io/blog/2025/07/19/terraform/terraform-errorHandling-title#3%EB%8B%A8%EA%B3%84-eip-%EB%AC%B8%EC%A0%9C-%ED%95%B4%EA%B2%B0" class="hash-link" aria-label="3단계: EIP 문제 해결에 대한 직접 링크" title="3단계: EIP 문제 해결에 대한 직접 링크">​</a></h3>
<p><strong>방법 1: 기존 EIP 재사용</strong></p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># 사용 가능한 EIP 확인 (a, c가 아닌 것들)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># eipalloc-id</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># eipalloc-id</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># eipalloc-id</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># 특정 EIP가 어떤 NAT Gateway에 연결되어 있는지 확인</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">aws ec2 describe-nat-gateways --region ap-northeast-2 \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  --query 'NatGateways[?NatGatewayAddresses[0].AllocationId==`eipalloc-id`].{NatGatewayId:NatGatewayId,State:State}'</span><br></span></code></pre></div></div>
<p><strong>결과:</strong></p>
<div class="language-json codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-json codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token punctuation" style="color:#393A34">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token property" style="color:#36acaa">"NatGatewayId"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"nat-id"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token property" style="color:#36acaa">"State"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"deleted"</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// 이미 삭제됨</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token property" style="color:#36acaa">"NatGatewayId"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"nat-id"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token property" style="color:#36acaa">"State"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"available"</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// 사용 중</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">]</span><br></span></code></pre></div></div>
<p><strong>해결 단계:</strong></p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># 1. 사용 중인 NAT Gateway 삭제</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">aws ec2 delete-nat-gateway --nat-gateway-id nat-id --region ap-northeast-2</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># 2. 삭제 완료 대기</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">aws ec2 describe-nat-gateways --region ap-northeast-2 --nat-gateway-ids nat-id --query 'NatGateways[0].State'</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># 3. 해제된 EIP를 Terraform으로 가져오기</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">terraform import 'aws_eip.nat["b"]' eipalloc-id</span><br></span></code></pre></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="4단계-기존-리소스-import">4단계: 기존 리소스 Import<a href="https://indianapoly.github.io/blog/2025/07/19/terraform/terraform-errorHandling-title#4%EB%8B%A8%EA%B3%84-%EA%B8%B0%EC%A1%B4-%EB%A6%AC%EC%86%8C%EC%8A%A4-import" class="hash-link" aria-label="4단계: 기존 리소스 Import에 대한 직접 링크" title="4단계: 기존 리소스 Import에 대한 직접 링크">​</a></h3>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># EKS 클러스터 가져오기</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">terraform import module.eks.aws_eks_cluster.this[0] cwave</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># KMS 별칭 가져오기 (따옴표 주의!)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">terraform import 'module.eks.module.kms.aws_kms_alias.this["cluster"]' alias/eks/cwave</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># IAM 역할들 가져오기</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">terraform import module.attach_efs_csi_role.aws_iam_role.this[0] efs-csi</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">terraform import module.ebs_csi_irsa.aws_iam_role.this[0] cwave-ebs-csi-controller</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">terraform import module.lb_controller_role.aws_iam_role.this[0] eks-aws-lb-controller-role</span><br></span></code></pre></div></div>
<p><strong>Import 시 주의사항:</strong></p>
<ul>
<li>인덱스가 있는 리소스는 따옴표로 감싸주는 것이 중요해요.</li>
<li>정확한 리소스 이름과 ID 확인 필수입니다.</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="5단계-terraform-적용">5단계: Terraform 적용<a href="https://indianapoly.github.io/blog/2025/07/19/terraform/terraform-errorHandling-title#5%EB%8B%A8%EA%B3%84-terraform-%EC%A0%81%EC%9A%A9" class="hash-link" aria-label="5단계: Terraform 적용에 대한 직접 링크" title="5단계: Terraform 적용에 대한 직접 링크">​</a></h3>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># 계획 확인</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">terraform plan</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># 문제없으면 적용</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">terraform apply</span><br></span></code></pre></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-kubectl-연결-문제-해결">🔧 kubectl 연결 문제 해결<a href="https://indianapoly.github.io/blog/2025/07/19/terraform/terraform-errorHandling-title#-kubectl-%EC%97%B0%EA%B2%B0-%EB%AC%B8%EC%A0%9C-%ED%95%B4%EA%B2%B0" class="hash-link" aria-label="🔧 kubectl 연결 문제 해결에 대한 직접 링크" title="🔧 kubectl 연결 문제 해결에 대한 직접 링크">​</a></h2>
<p>배포 완료 후 kubectl 명령어 실행 시 DNS 오류 발생:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">kubectl get po</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># Error: dial tcp: lookup .gr7.ap-northeast-2.eks.amazonaws.com on 127.0.0.11:53: no such host</span><br></span></code></pre></div></div>
<p><strong>해결 방법:</strong></p>
<p>업데이터를 새로 해줌으로써 기존 context를 switch를 진행해주면 정상적으로 동작하는 것을 확인할 수 있어요.</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># kubeconfig 업데이트</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">aws eks update-kubeconfig --region ap-northeast-2 --name cwave</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># 연결 테스트</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">kubectl get nodes</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">kubectl get pods -A</span><br></span></code></pre></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-교훈-및-예방-방법">📝 교훈 및 예방 방법<a href="https://indianapoly.github.io/blog/2025/07/19/terraform/terraform-errorHandling-title#-%EA%B5%90%ED%9B%88-%EB%B0%8F-%EC%98%88%EB%B0%A9-%EB%B0%A9%EB%B2%95" class="hash-link" aria-label="📝 교훈 및 예방 방법에 대한 직접 링크" title="📝 교훈 및 예방 방법에 대한 직접 링크">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="1-개발-환경-관리-원칙">1. 개발 환경 관리 원칙<a href="https://indianapoly.github.io/blog/2025/07/19/terraform/terraform-errorHandling-title#1-%EA%B0%9C%EB%B0%9C-%ED%99%98%EA%B2%BD-%EA%B4%80%EB%A6%AC-%EC%9B%90%EC%B9%99" class="hash-link" aria-label="1. 개발 환경 관리 원칙에 대한 직접 링크" title="1. 개발 환경 관리 원칙에 대한 직접 링크">​</a></h3>
<ul>
<li><strong>환경별 폴더 분리 시 명확한 네이밍 사용</strong></li>
<li><strong>현재 작업 중인 환경을 항상 확인</strong></li>
<li><strong>환경 전환 시 기존 리소스 정리 후 진행</strong></li>
</ul>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># 환경 확인 습관화</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">pwd                    # 현재 작업 디렉터리 확인</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">terraform workspace show  # Terraform 워크스페이스 확인</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">aws sts get-caller-identity  # 현재 AWS 계정/역할 확인</span><br></span></code></pre></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="2-안전한-환경-전환-절차">2. 안전한 환경 전환 절차<a href="https://indianapoly.github.io/blog/2025/07/19/terraform/terraform-errorHandling-title#2-%EC%95%88%EC%A0%84%ED%95%9C-%ED%99%98%EA%B2%BD-%EC%A0%84%ED%99%98-%EC%A0%88%EC%B0%A8" class="hash-link" aria-label="2. 안전한 환경 전환 절차에 대한 직접 링크" title="2. 안전한 환경 전환 절차에 대한 직접 링크">​</a></h3>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># 기존 환경 정리</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">terraform destroy -auto-approve</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># 상태 파일 백업</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">cp terraform.tfstate terraform.tfstate.backup</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># 새 환경으로 이동</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">cd ../aws</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># 리소스 확인 후 배포</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">terraform plan</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">terraform apply</span><br></span></code></pre></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="3-리소스-정리-시-주의점">3. 리소스 정리 시 주의점<a href="https://indianapoly.github.io/blog/2025/07/19/terraform/terraform-errorHandling-title#3-%EB%A6%AC%EC%86%8C%EC%8A%A4-%EC%A0%95%EB%A6%AC-%EC%8B%9C-%EC%A3%BC%EC%9D%98%EC%A0%90" class="hash-link" aria-label="3. 리소스 정리 시 주의점에 대한 직접 링크" title="3. 리소스 정리 시 주의점에 대한 직접 링크">​</a></h3>
<ul>
<li>EKS 클러스터 삭제 시 IAM 역할, KMS 별칭 등은 수동으로 삭제해주어야 해요.</li>
<li>만약 삭제해주어야 하는게 많다면 Terraform import를 활용하여 기존 리소스 재사용할 수 있어요.</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="4-eip-관리">4. EIP 관리<a href="https://indianapoly.github.io/blog/2025/07/19/terraform/terraform-errorHandling-title#4-eip-%EA%B4%80%EB%A6%AC" class="hash-link" aria-label="4. EIP 관리에 대한 직접 링크" title="4. EIP 관리에 대한 직접 링크">​</a></h3>
<ul>
<li>AWS 계정의 EIP 한도를 미리 확인하는 것이 중요해요.</li>
<li>불필요한 EIP는 정기적으로 정리하고 필요시 AWS Support를 통해 한도 증가 요청해주어야 합니다.</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="5-terraform-상태-관리">5. Terraform 상태 관리<a href="https://indianapoly.github.io/blog/2025/07/19/terraform/terraform-errorHandling-title#5-terraform-%EC%83%81%ED%83%9C-%EA%B4%80%EB%A6%AC" class="hash-link" aria-label="5. Terraform 상태 관리에 대한 직접 링크" title="5. Terraform 상태 관리에 대한 직접 링크">​</a></h3>
<ul>
<li><code>terraform plan</code>으로 생성될 리소스를 미리 확인하는 습관이 정말 중요합니다.</li>
<li>기존 리소스와의 충돌 가능성 검토 및 Import를 활용한 기존 리소스 재사용을 고려할 수 있어요.</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="6-안전한-배포-전략">6. 안전한 배포 전략<a href="https://indianapoly.github.io/blog/2025/07/19/terraform/terraform-errorHandling-title#6-%EC%95%88%EC%A0%84%ED%95%9C-%EB%B0%B0%ED%8F%AC-%EC%A0%84%EB%9E%B5" class="hash-link" aria-label="6. 안전한 배포 전략에 대한 직접 링크" title="6. 안전한 배포 전략에 대한 직접 링크">​</a></h3>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># 배포 전 체크리스트</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">terraform plan                    # 생성될 리소스 확인</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">aws ec2 describe-addresses        # EIP 사용량 확인</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">aws iam list-roles               # 기존 IAM 역할 확인</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">aws kms list-aliases             # 기존 KMS 별칭 확인</span><br></span></code></pre></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-결론">🎯 결론<a href="https://indianapoly.github.io/blog/2025/07/19/terraform/terraform-errorHandling-title#-%EA%B2%B0%EB%A1%A0" class="hash-link" aria-label="🎯 결론에 대한 직접 링크" title="🎯 결론에 대한 직접 링크">​</a></h2>
<p>이번 문제의 근본 원인은 <strong>개발 환경 혼동으로 인한 리소스 중복</strong>이었습니다. local과 aws 환경을 명확히 구분하지 않고 개발하다가, 기존 리소스를 정리하지 않은 상태에서 새로운 환경에 배포를 시도한 것이 문제의 시작이었습니다.</p>
<p>Terraform으로 AWS 리소스를 관리할 때는 다음 사항들을 반드시 고려해야 합니다:</p>
<ol>
<li><strong>환경 분리와 명확한 식별</strong></li>
<li><strong>기존 리소스와의 충돌 가능성</strong></li>
<li><strong>Terraform Import를 활용한 기존 리소스 재사용</strong></li>
</ol>
<p>특히 EKS와 같은 복잡한 서비스는 여러 AWS 서비스와 연동되어 있어, 삭제 시에도 일부 리소스가 남을 수 있습니다. 이런 상황에서는 <strong>Terraform Import</strong>를 활용하여 기존 리소스를 재사용하는 것이 가장 안전하고 효율적인 해결책입니다.</p>
<hr>
<p><strong>관련 명령어 모음:</strong></p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># 환경 확인</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">pwd</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">terraform workspace show</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">aws sts get-caller-identity</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># EIP 관련</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">aws ec2 describe-addresses --region ap-northeast-2</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">aws ec2 release-address --allocation-id eipalloc-xxx --region ap-northeast-2</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># Terraform Import</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">terraform import 'resource_address' resource_id</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">terraform state list</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">terraform plan</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># EKS 관련</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">aws eks update-kubeconfig --region ap-northeast-2 --name cluster-name</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">kubectl config current-context</span><br></span></code></pre></div></div>]]></content>
        <author>
            <name>고현림</name>
            <uri>https://www.linkedin.com/in/%ED%98%84%EB%A6%BC-%EA%B3%A0-b53602221/</uri>
        </author>
        <category label="TIL" term="TIL"/>
        <category label="Terraform" term="Terraform"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Kubernetes Basic(3)]]></title>
        <id>https://indianapoly.github.io/blog/2025/07/17/kubernetes/kubernetes-basic-3-title</id>
        <link href="https://indianapoly.github.io/blog/2025/07/17/kubernetes/kubernetes-basic-3-title"/>
        <updated>2025-07-17T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[{/ truncate /}]]></summary>
        <content type="html"><![CDATA[
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="secret">Secret<a href="https://indianapoly.github.io/blog/2025/07/17/kubernetes/kubernetes-basic-3-title#secret" class="hash-link" aria-label="Secret에 대한 직접 링크" title="Secret에 대한 직접 링크">​</a></h2>
<ul>
<li>생성하는 방법은 cli로 하거나 .yml 파일을 작성해서 만드는 방법이 있어요.</li>
</ul>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">kubectl create secret generic my-secret \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">--from-literal=username=admin \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">--from-literal=password=1234</span><br></span></code></pre></div></div>
<p>cli로 값을 확인을 해주려면, 아래 cli 명령을 통해서 yml을 출력할 수 있어요.</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">kubectl get secret my-secret -o yaml</span><br></span></code></pre></div></div>
<img src="https://indianapoly.github.io/img/blog/kubernetes/2025-07-17/img1.png">
<p>여기서 출력되는 데이터 역시 base64로 인코딩이 되기 때문에 이를 확인해주기 위해서는
복호화해주어야 해요.</p>
<p>yml 파일로 넣어줄때는 base64 인코딩된 값을 넣어주어야 해요.</p>
<div class="language-yml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-yml codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token key atrule" style="color:#00a4db">apiVersion</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> v1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">kind</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> Secret</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">metadata</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> my</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">secret2</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">type</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> Opaque</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">data</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">username</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> YWRtaW4= </span><span class="token comment" style="color:#999988;font-style:italic"># admin (base64 인코딩)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">password</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> MTIzNA== </span><span class="token comment" style="color:#999988;font-style:italic"># 1234 (base64 인코딩)</span><br></span></code></pre></div></div>
<p>위와 같이 설정을 하고 난 이후에 환경변수로 넘겨줄 수도 있고, 볼륨으로 넘겨줄 수도 있어요.</p>
<p>환경변수로 넘겨 줄때는 아래와 같이 key값을 지정해서 넘겨주어야 해요.</p>
<div class="language-yml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-yml codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token key atrule" style="color:#00a4db">spec</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">containers</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> mycontainer</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token key atrule" style="color:#00a4db">image</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> nginx</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token key atrule" style="color:#00a4db">env</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> USERNAME</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token key atrule" style="color:#00a4db">valueFrom</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token key atrule" style="color:#00a4db">secretKeyRef</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">              </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> my</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">secret</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">              </span><span class="token key atrule" style="color:#00a4db">key</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> username</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> PASSWORD</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token key atrule" style="color:#00a4db">valueFrom</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token key atrule" style="color:#00a4db">secretKeyRef</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">              </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> my</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">secret</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">              </span><span class="token key atrule" style="color:#00a4db">key</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> password</span><br></span></code></pre></div></div>
<p>볼륨으로 넘겨주는 것은 따로 key를 설정해주는 것이 아니라 생성한 secret를 전체 넘겨주어요.</p>
<div class="language-yml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-yml codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token key atrule" style="color:#00a4db">spec</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">containers</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> mycontainer</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token key atrule" style="color:#00a4db">image</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> nginx</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token key atrule" style="color:#00a4db">volumeMounts</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> secret</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">volume</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token key atrule" style="color:#00a4db">mountPath</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"/etc/secret"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token key atrule" style="color:#00a4db">readOnly</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token boolean important" style="color:#36acaa">true</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">volumes</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> secret</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">volume</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token key atrule" style="color:#00a4db">secret</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token key atrule" style="color:#00a4db">secretName</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> my</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">secret</span><br></span></code></pre></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="statefulset">StateFulSet<a href="https://indianapoly.github.io/blog/2025/07/17/kubernetes/kubernetes-basic-3-title#statefulset" class="hash-link" aria-label="StateFulSet에 대한 직접 링크" title="StateFulSet에 대한 직접 링크">​</a></h2>
<ul>
<li>
<p>생성된 Pod마다 별도의 디스크 공간을 가져야하는 경우에 주로 사용해요. 분산 기반 애플리케이션의 경우 호스트명과 IP 등이 바뀌면 안돼요.</p>
</li>
<li>
<p>ReplicaSet의 경우에는 생성 및 삭제가 동시에 진행되는 반면에, StatefullSet은 순차적으로 진행되어서 시간 조절이 가능해요.</p>
</li>
<li>
<p>Pod를 삭제하는 경우 ID 값이 가장 큰 것부터 삭제가 돼요. 제일 마지막에 생성된 Pod가 먼저 삭제가 되고 마스터의 경우에는 가장 마지막에 삭제가 돼요.</p>
</li>
<li>
<p>스케일리에서 Pod가 삭제가 되면 해당 Pod가 물고 있는 PVC는 Pod에 대한 정보를 가지고 있어요. 따라서 Pod를 생성하면 이전과 동일한 ID로 재생성이 돼요.</p>
</li>
</ul>
<p>‼ Deployment는 Elastic Block Store를 사용하지 않아요. 만약 Deployment에 디스크를 붙히라고 한다면 EFS를 붙혀야 해요.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="kustomize--helm-차트">Kustomize / Helm 차트<a href="https://indianapoly.github.io/blog/2025/07/17/kubernetes/kubernetes-basic-3-title#kustomize--helm-%EC%B0%A8%ED%8A%B8" class="hash-link" aria-label="Kustomize / Helm 차트에 대한 직접 링크" title="Kustomize / Helm 차트에 대한 직접 링크">​</a></h2>
<p>2개를 같이 사용할 수 있지만 거의 같이 사용하지 않아요.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="kustomize">Kustomize<a href="https://indianapoly.github.io/blog/2025/07/17/kubernetes/kubernetes-basic-3-title#kustomize" class="hash-link" aria-label="Kustomize에 대한 직접 링크" title="Kustomize에 대한 직접 링크">​</a></h3>
<ul>
<li>base + overlay를 조합하여 환경별 배포 YAML을 kustomize build 명령으로 추출합니다.</li>
</ul>
<div class="language-csharp codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-csharp codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">kustomize/</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">├── base/</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">│   └── deployment.yaml</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">├── overlays/</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">│   ├── dev/</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">│   │   └── kustomization.yaml</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">│   ├── stage/</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">│   └── prod/</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">│   └── aws/</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">│   └── gcp/</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="helm-chart">Helm chart<a href="https://indianapoly.github.io/blog/2025/07/17/kubernetes/kubernetes-basic-3-title#helm-chart" class="hash-link" aria-label="Helm chart에 대한 직접 링크" title="Helm chart에 대한 직접 링크">​</a></h3>
<ul>
<li>
<p>예를 들어서 MYSQL 개발자가 yml을 제공을 하고 소비자가 환경변수나 설정 등을 변경하고 싶을 때 :</p>
<ul>
<li>개발자가 Helm 차트를 활용하면 변경 가능한 인터페이스를 제공해줘요. 이를 통해서 사용자는 환경변수나 설정을 쉽게 바꿀 수 있어요.</li>
</ul>
</li>
</ul>
<p><strong>설치 방법</strong></p>
<p>아래와 같은 명령어를 순서대로 입력을 해주면 helm chart를 설치할 수 있어요.</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">chmod 700 get_helm.sh</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">./get_helm.sh</span><br></span></code></pre></div></div>
<p>잘 설치가 되었는지 확인하기 위해서 mysql를 검색을 해보면 잘 나오는 것을 확인할 수 있어요.</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">helm show chart stable/mysql</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">apiVersion: v1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">appVersion: 5.7.30</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">deprecated: true</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">description: DEPRECATED - Fast, reliable, scalable, and easy to use open-source relational</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  database system.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">home: https://www.mysql.com/</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">icon: https://www.mysql.com/common/logos/logo-mysql-170x115.png</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">keywords:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">- mysql</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">- database</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">- sql</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">name: mysql</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">sources:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">- https://github.com/kubernetes/charts</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">- https://github.com/docker-library/mysql</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">version: 1.6.9</span><br></span></code></pre></div></div>
<p><strong>helm chart 생성하기</strong></p>
<p>해당 명령어를 통해서 생성해주세요.</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">helm create &lt;이름&gt;</span><br></span></code></pre></div></div>
<p>templates 폴더에서 deployment.yml와 service.yml을 생성을 해줘요. _helpers.tpl을 제외한 나머지 파일들은 삭제를 진행해줘요.</p>
<div class="language-yml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-yml codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic"># deployment.yml</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">apiVersion</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> apps/v1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">kind</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> Deployment</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">metadata</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> .Values.container.name </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">spec</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">replicas</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> .Values.replicas </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">selector</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">matchLabels</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token key atrule" style="color:#00a4db">app</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> .Values.container.name </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">template</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">metadata</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token key atrule" style="color:#00a4db">labels</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token key atrule" style="color:#00a4db">app</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> .Values.container.name </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token key atrule" style="color:#00a4db">environment</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> .Values.environment </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">spec</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token key atrule" style="color:#00a4db">containers</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> .Values.container.name </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token key atrule" style="color:#00a4db">image</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> .Values.container.image </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">:</span><span class="token punctuation" style="color:#393A34">{</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> .Values.container.tag </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token key atrule" style="color:#00a4db">ports</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">containerPort</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> .Values.container.port </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token key atrule" style="color:#00a4db">env</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> environment</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">              </span><span class="token key atrule" style="color:#00a4db">value</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> .Values.environment </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre></div></div>
<div class="language-yml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-yml codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic"># service.yml</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">apiVersion</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> v1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">kind</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> Service</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">metadata</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> .Values.container.name </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">service</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">labels</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">app</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> .Values.container.name </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">spec</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">ports</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">port</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">80</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">protocol</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> TCP</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">targetPort</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> .Values.container.port </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">selector</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">app</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> .Values.container.name </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">type</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> LoadBalancer</span><br></span></code></pre></div></div>
<p>기존의 values.yaml을 전체 삭제를 해줘요. 그런다음에 아래를 넣어줘요. 이렇게 하면 사용자는 여기에 지정된 변수만 건들 수 있다는 것을 알려줘요.</p>
<div class="language-yml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-yml codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token key atrule" style="color:#00a4db">environment</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> development</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">container</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> nginx</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">port</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">80</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">image</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> nginx</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">tag</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> latest</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">replicas</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">2</span><br></span></code></pre></div></div>
<p>위에서 작업한 것을 설치를 진행해줘요.</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">helm install nginxstd ./nginxstd</span><br></span></code></pre></div></div>
<p>패키지를 생성해주고 파일을 이동시켜줍니다. 그리고 helm repository 파일을 생성해요.</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">helm package ./nginxstd</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">mkdir prod</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">mv ./nginx-std-0.1.0.tgz ./prod/</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># 리포지토리 파일 생성 (index.yaml)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">heml repo index ./prod</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># 파일 생성 확인</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">cat ./prod/index.yaml</span><br></span></code></pre></div></div>
<p>위 작업까지 다 했다면 Github Repository를 만들어요. 그리고 Repository에 우리가 작업한 것을 올려줘요. Github에 정상적으로 등록이 완료가 되었다면 아래 명령어를 통해서 repository를 추가시켜줍니다.</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">helm repo add helm-prod &lt;자신 github 주소에 올라가 있는 helm Repository&gt;</span><br></span></code></pre></div></div>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="실습">실습<a href="https://indianapoly.github.io/blog/2025/07/17/kubernetes/kubernetes-basic-3-title#%EC%8B%A4%EC%8A%B5" class="hash-link" aria-label="실습에 대한 직접 링크" title="실습에 대한 직접 링크">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="mysql-db-secret-생성-및-사용">MySQL DB Secret 생성 및 사용<a href="https://indianapoly.github.io/blog/2025/07/17/kubernetes/kubernetes-basic-3-title#mysql-db-secret-%EC%83%9D%EC%84%B1-%EB%B0%8F-%EC%82%AC%EC%9A%A9" class="hash-link" aria-label="MySQL DB Secret 생성 및 사용에 대한 직접 링크" title="MySQL DB Secret 생성 및 사용에 대한 직접 링크">​</a></h3>
<p>Secret를 생성하는데 요구조건은 아래와 같아요. 해당 내용을 넣기 위해서는 그대로 작성하는 것이 아니라 base64로 인코딩을 진행해야해요.</p>
<div class="language-txt codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-txt codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">MYSQL_USER: user1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">MYSQL_PASSWORD: pw1234</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">MYSQL_ROOT_PASSWORD: rootpw9876</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">MYSQL_DATABASE: mydb</span><br></span></code></pre></div></div>
<p>첫 번째로 Secret를 생성을 해요.</p>
<div class="language-yml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-yml codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token key atrule" style="color:#00a4db">apiVersion</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> v1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">kind</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> Secret</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">metadata</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> mysql</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">secret</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">labels</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">app</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> mysql</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">data</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">MYSQL_USER</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> dXNlcjE= </span><span class="token comment" style="color:#999988;font-style:italic">#user1</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">MYSQL_PASSWORD</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> cHcxMjM0 </span><span class="token comment" style="color:#999988;font-style:italic">#pw1234</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">MYSQL_ROOT_PASSWORD</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> cm9vdHB3OTg3Ng== </span><span class="token comment" style="color:#999988;font-style:italic">#rootpw9876</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">MYSQL_DATABASE</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> bXlkYg== </span><span class="token comment" style="color:#999988;font-style:italic">#mydb</span><br></span></code></pre></div></div>
<p><code>kubectl apply -f ./파일이름</code> 명령어로 실행을 하면 생성이 돼요.</p>
<p>생성을 해준다음에 환경변수 방법을 사용해서 Pod를 생성을 해줄거에요. 이 때 secretKeyRef의 이름을 생성한 secret의 이름으로 지정을 해주면 돼요.</p>
<div class="language-yml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-yml codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token key atrule" style="color:#00a4db">apiVersion</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> v1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">kind</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> Pod</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">metadata</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> mysql</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">secret</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">env</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">pod</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">spec</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">containers</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> mysql</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">test</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token key atrule" style="color:#00a4db">image</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> mysql</span><span class="token punctuation" style="color:#393A34">:</span><span class="token number" style="color:#36acaa">8.0</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token key atrule" style="color:#00a4db">env</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> MYSQL_USER</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token key atrule" style="color:#00a4db">valueFrom</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token key atrule" style="color:#00a4db">secretKeyRef</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">              </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> mysql</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">secret</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">              </span><span class="token key atrule" style="color:#00a4db">key</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> MYSQL_USER</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> MYSQL_PASSWORD</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token key atrule" style="color:#00a4db">valueFrom</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token key atrule" style="color:#00a4db">secretKeyRef</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">              </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> mysql</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">secret</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">              </span><span class="token key atrule" style="color:#00a4db">key</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> MYSQL_PASSWORD</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> MYSQL_ROOT_PASSWORD</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token key atrule" style="color:#00a4db">valueFrom</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token key atrule" style="color:#00a4db">secretKeyRef</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">              </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> mysql</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">secret</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">              </span><span class="token key atrule" style="color:#00a4db">key</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> MYSQL_ROOT_PASSWORD</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> MYSQL_DATABASE</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token key atrule" style="color:#00a4db">valueFrom</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token key atrule" style="color:#00a4db">secretKeyRef</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">              </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> mysql</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">secret</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">              </span><span class="token key atrule" style="color:#00a4db">key</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> MYSQL_DATABASE</span><br></span></code></pre></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="statefulset-1">StatefulSet<a href="https://indianapoly.github.io/blog/2025/07/17/kubernetes/kubernetes-basic-3-title#statefulset-1" class="hash-link" aria-label="StatefulSet에 대한 직접 링크" title="StatefulSet에 대한 직접 링크">​</a></h3>
<div class="language-yml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-yml codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token key atrule" style="color:#00a4db">apiVersion</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> apps/v1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">kind</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> StatefulSet</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">metadata</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> nodejs</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">sfs</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">spec</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">selector</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">matchLabels</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token key atrule" style="color:#00a4db">app</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> nodejs</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">sfs</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">serviceName</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> nodejs</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">sfs</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">replicas</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">2</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">template</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">metadata</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token key atrule" style="color:#00a4db">labels</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token key atrule" style="color:#00a4db">app</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> nodejs</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">sfs</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">spec</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token key atrule" style="color:#00a4db">containers</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> nodejs</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">sfs</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token key atrule" style="color:#00a4db">image</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> hyeonlim/nodejs</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain">sfs</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token key atrule" style="color:#00a4db">ports</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> http</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">              </span><span class="token key atrule" style="color:#00a4db">containerPort</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">8080</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token key atrule" style="color:#00a4db">volumeMounts</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> data</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">              </span><span class="token key atrule" style="color:#00a4db">mountPath</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> /var/data</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">volumeClaimTemplates</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">metadata</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> data</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token key atrule" style="color:#00a4db">spec</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token key atrule" style="color:#00a4db">resources</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token key atrule" style="color:#00a4db">requests</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token key atrule" style="color:#00a4db">storage</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> 1Mi</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token key atrule" style="color:#00a4db">accessModes</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> ReadWriteOnce</span><br></span></code></pre></div></div>
<p>해당 작업을 통해서 아래와 같은 리스소를 가지는 PVC를 만들어주고, volumeClaimTemplates를 통해서 Pod 마다 독립적인 PVC를 만들 수 있어요.</p>
<div class="language-yml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-yml codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token key atrule" style="color:#00a4db">resources</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">requests</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">storage</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> 1Mi</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">accessModes</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> ReadWriteOnce</span><br></span></code></pre></div></div>
<p>위 작업이 마무리가 되고 나면 load balancer를 설정하여 트래픽을 Pod 별로 분산을 진행해줘요.</p>
<div class="language-yml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-yml codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token key atrule" style="color:#00a4db">apiVersion</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> v1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">kind</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> Service</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">metadata</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> nodesjs</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">sfs</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">lb</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">annotations</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">service.beta.kubernetes.io/aws-load-balancer-type</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> external</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">service.beta.kubernetes.io/aws-load-balancer-nlb-target-type</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> ip</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">service.beta.kubernetes.io/aws-load-balancer-scheme</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> internet</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">facing</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">spec</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">type</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> LoadBalancer</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">sessionAffinity</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> None</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">ports</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">port</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">80</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token key atrule" style="color:#00a4db">targetPort</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">8080</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">selector</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">app</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> nodejs</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">sfs</span><br></span></code></pre></div></div>
<p>✅ 중요한 점</p>
<ul>
<li>
<p>StatefulSet Pod마다 데이터가 다르면, 로드밸런서로 접근한 사용자마다 다른 결과를 받게 돼요. 따라서 이러한 문제를 해결하기 위해서</p>
<ul>
<li>
<p>Shared Storage (NFS, S3)를 사용해요.</p>
</li>
<li>
<p>사용자 마다 Pod 접속을 고정을 시킬 수 있어요. sticky session이라고 해요. 아래와 같은 예시로 설정을 해줄 수 있어요.</p>
</li>
</ul>
<div class="language-yml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-yml codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token key atrule" style="color:#00a4db">sessionAffinity</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> ClientIP</span><br></span></code></pre></div></div>
</li>
</ul>]]></content>
        <author>
            <name>고현림</name>
            <uri>https://www.linkedin.com/in/%ED%98%84%EB%A6%BC-%EA%B3%A0-b53602221/</uri>
        </author>
        <category label="TIL" term="TIL"/>
        <category label="Kubernetes" term="Kubernetes"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[개발하기 전 아이디어 회의 이렇게 해보자.]]></title>
        <id>https://indianapoly.github.io/blog/2025/07/16/etc/idea_meeting-title</id>
        <link href="https://indianapoly.github.io/blog/2025/07/16/etc/idea_meeting-title"/>
        <updated>2025-07-16T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[{/ truncate /}]]></summary>
        <content type="html"><![CDATA[
<p>cloudwave에서 진행했던 idea 회의와 관련된 회고에요. 앞으로 도움이 될 거 같아서 기록 해두어요.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="주제">주제<a href="https://indianapoly.github.io/blog/2025/07/16/etc/idea_meeting-title#%EC%A3%BC%EC%A0%9C" class="hash-link" aria-label="주제에 대한 직접 링크" title="주제에 대한 직접 링크">​</a></h2>
<p><code>대학생을 위한 완벽한 아침 루틴에 대한 고민</code> 이에요. 이 때 수면을 시간을 잘 지키고 추가적으로 건강한 루틴을 만드는 것이 목표인 것을 잊지 말아야 해요.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="process">process<a href="https://indianapoly.github.io/blog/2025/07/16/etc/idea_meeting-title#process" class="hash-link" aria-label="process에 대한 직접 링크" title="process에 대한 직접 링크">​</a></h2>
<ol>
<li>
<p><code>07시 기상</code>, <code>09시 자리 착석</code> 해당 2개의 시작점과 끝점은 고정을 한 상태에서 통학 시간이 1시간임을 고려해서 각자의 아침 루틴을 만들어요.
ex. 기상 -&gt; 식사 -&gt; 옷을 입는다 -&gt; 집을 나간다 -&gt; 지하철을 탄다 -&gt; .. -&gt; 자리에 착석한다.</p>
<p>이렇게 각자만의 루틴을 만들었어요.</p>
</li>
<li>
<p>각자 만든 루틴들을 팀원들에게 설명을 해요. 이때 팀원들은 모든 질문에 대해서 의문을 가지고 하나하나 물어보는 작업을 진행을 해요.</p>
</li>
<li>
<p>그리고 만든 루틴 중 제일 괜찮다 아니면 해보고 싶다 하는 사람이 손을 들어요. 해당 손을 든 사람은 이제 Product Owner가 돼요.</p>
</li>
<li>
<p>각자 만든 루틴들을 모두 합쳐요. 동일한 카테고리에 대해서는 하나의 문제로 처리를 하고, 분야가 다르면 무조건 분리 시키는게 중요해요.</p>
</li>
<li>
<p>4번에서 만든 결과물을 바탕으로 투표를 진행을 해요. 먼저 PO가 아닌 사람들이 x개의 투표권을 가지고 꼭 있어야 하는 것들에 대해서 투표를 진행해요. 그리고 PO는 투표권의 수와 관계 없이 투표를 하는데 이 때 PO가 선택한 것은 무조건 채택이 되기 때문에 PO의 선택으로 제품의 방향성이 바뀔 수도 있어요.</p>
</li>
<li>
<p>투표를 한 것을 바탕으로 4번에 만든 흐름 밑에 검은 줄을 하나 만들고, 해당 프로세스에서 출발 시간을 07시 30분에 출발하는 것으로 변경을 했을 때, 5번의 결과에서 꼭 필요 없는 것들을 아래 칸으로 내려요. 이 때 PO의 선택은 절대 내리지 않아요.</p>
</li>
<li>
<p>6번의 결과물 밑에 검은 줄을 하나 또 만들고, 그 다음에 해당 프로세스를 출 시간이 07시 50분이라고 했을 때 꼭 필요한 것들만 남기고 나머지는 내리는 작업을 진행을 해요.</p>
</li>
</ol>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="우리가-했던-것에-대한-결과물">우리가 했던 것에 대한 결과물<a href="https://indianapoly.github.io/blog/2025/07/16/etc/idea_meeting-title#%EC%9A%B0%EB%A6%AC%EA%B0%80-%ED%96%88%EB%8D%98-%EA%B2%83%EC%97%90-%EB%8C%80%ED%95%9C-%EA%B2%B0%EA%B3%BC%EB%AC%BC" class="hash-link" aria-label="우리가 했던 것에 대한 결과물에 대한 직접 링크" title="우리가 했던 것에 대한 결과물에 대한 직접 링크">​</a></h2>
<ul>
<li>
<p>그러면 총 3개의 영역이 나오게 되는데 이 때 07시 50분일 때 꼭 하는 것이 MVP가 되고 이는 fix가 돼요. 그리고 아리 07시 30분에 진행하는 것이 release 1 되고 그 이후는 release 2가 돼요.</p>
</li>
<li>
<p>우리는 해당 과정을 해오면서 기능을 시간 순으로 표시를 했어요. 왜냐하면 완료 시간은 고정이 되어있기 때문이에요. 또한 발산하는 과정을 거치고, 동일한 카테고리에 대해서 의견을 합치면서 수렴하는 과정을 거쳤어요.</p>
</li>
<li>
<p>여기서 중요한 것은 각 release는 1개의 기능을 해야해요. 즉 자동차를 만드는 MVP가 있었다고 한다면. 다음 release는 바퀴를 만드는 것이 아니라 오토바이나 혹은 다른 기능을 하는 것이 만들어져야 하는 것을 의미해요.</p>
</li>
<li>
<p>또한 여기서 우리는 아직 안정한게 있는데 바로 페르소나에요. 대학생을 타겟으로 했는데 어떤 대학생을 타겟으로 했는지 기준이 없어요. 페르소나가 없다면 제품이 어떠한 방향으로 나아가는지에 대해서 불명확해지고 프로젝트가 원하는 방향성으로 흘러가지 못할 수 있어요.</p>
</li>
</ul>]]></content>
        <author>
            <name>고현림</name>
            <uri>https://www.linkedin.com/in/%ED%98%84%EB%A6%BC-%EA%B3%A0-b53602221/</uri>
        </author>
        <category label="TIL" term="TIL"/>
        <category label="Etc" term="Etc"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Kubernetes Basic(2)]]></title>
        <id>https://indianapoly.github.io/blog/2025/07/16/kubernetes/kubernetes-basic-2-title</id>
        <link href="https://indianapoly.github.io/blog/2025/07/16/kubernetes/kubernetes-basic-2-title"/>
        <updated>2025-07-16T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[{/ truncate /}]]></summary>
        <content type="html"><![CDATA[
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="volume">volume<a href="https://indianapoly.github.io/blog/2025/07/16/kubernetes/kubernetes-basic-2-title#volume" class="hash-link" aria-label="volume에 대한 직접 링크" title="volume에 대한 직접 링크">​</a></h2>
<ul>
<li>
<p><code>Persistent Volume Access Mode</code>의 모델은 아래 4개의 모드가 있어요.</p>
<ul>
<li>ReadWriteOnce (RWO)</li>
<li>ReadOnlyMany (ROX) : 로그를 주로 읽을 때 사용해요.</li>
<li>ReadWriteMany (RWX) : 분산형 데이터베이스에서 주로 사용해요.</li>
<li>ReadWriteOncePOD (RWOP)</li>
</ul>
</li>
<li>
<p>컨테이너는 볼륨을 마운트를 하면 POD 안에서는 공유가 가능해져요. 노드 입장에서 보면 해당 노드에 속해있는 POD에 대해서는 같이 읽고 쓸 수 있다는 것을 의미해요.</p>
</li>
<li>
<p>pv-w-pvc 와 pv-w-sc의 차이점을 아시나요?</p>
<ul>
<li>pv-w-pvc는 AWS의 Elastic Blokc Store 의 디스크 중 하나를 볼륨으로 설정해요. zone에 해당하는 볼륨을 설정하고 해당 볼륨을 pv로 해야지만 k8s가 해당 볼륨을 인식을 해요.
pvc를 설장하기 위해서는 storageClassName을 빈문자열로 두면 돼요.<!-- -->
<ul>
<li>pvc는 pod와 상관이 없어요. pod가 삭제된다고 해서 pvc가 삭제되는 것은 아니에요.</li>
</ul>
</li>
</ul>
<div class="language-yml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-yml codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token key atrule" style="color:#00a4db">spec</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">storageClassName</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">""</span><br></span></code></pre></div></div>
<ul>
<li>pv-w-sc는 sc(aws에서는 gp2라고 해요.)를 설정만 해두면 pv-w-pvc의 과정을 자동으로 설정해요. 이후 과정은 pvc와 동일하게 진행이 되요. 이렇게 진행을 디스크를 삭제하고 생성하는 책임이 개발자로 역할이 넘어가면서 관리자의 관리 부담이 줄어들어요.<!-- -->
<ul>
<li>gp2를 default를 설정하기 위해서는 아래와 같은 명령어를 작성을 해줘요.</li>
</ul>
</li>
</ul>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">  kubectl patch storageclass gp2 -p '{"metadata": {"annotations":{"storageclass.kubernetes.io/is-default-class":"true"}}}'</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre></div></div>
<ul>
<li>따라서 pvc는 정적 프로비저닝이라고 하고, sc는 동적 프로비저닝이라고 해요.</li>
</ul>
</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="cicd">CICD<a href="https://indianapoly.github.io/blog/2025/07/16/kubernetes/kubernetes-basic-2-title#cicd" class="hash-link" aria-label="CICD에 대한 직접 링크" title="CICD에 대한 직접 링크">​</a></h2>
<ul>
<li>AWS에는 code deploy(CI), commit, code pipe line(CD) 이렇게 3가지의 서비스가 있어요.<!-- -->
<ul>
<li>commit은 곧 없어질 예정이에요.</li>
<li>code deploy를 사용하려면 산출된 결과물(압축 파일)을 S3에 저장을 해야해요. - app.spec.yml 파일이 있어야 해여.</li>
</ul>
</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="ci-continuous-integration">CI: continuous Integration<a href="https://indianapoly.github.io/blog/2025/07/16/kubernetes/kubernetes-basic-2-title#ci-continuous-integration" class="hash-link" aria-label="CI: continuous Integration에 대한 직접 링크" title="CI: continuous Integration에 대한 직접 링크">​</a></h3>
<p>CI의 순서는 아래와 같아요.</p>
<div class="language-text codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">빌드 -&gt; 테스트(테스트의 종류에는 유닛 테스트, e2e 테스트, 부하 테스트가 있어요) -&gt; 취약점 검사 (코드 정적 분석) -&gt; 코드 리뷰 | 코드 컨밴션</span><br></span></code></pre></div></div>
<ul>
<li>예전에는 최종산출물이 Artifact이 나왔어요. Artifact는 .jar 이런게 있어요.</li>
<li>요즘에는 최종산출물이 container image가 나와요.</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="cd-continuous-delivery-deployment">CD: continuous Delivery, Deployment<a href="https://indianapoly.github.io/blog/2025/07/16/kubernetes/kubernetes-basic-2-title#cd-continuous-delivery-deployment" class="hash-link" aria-label="CD: continuous Delivery, Deployment에 대한 직접 링크" title="CD: continuous Delivery, Deployment에 대한 직접 링크">​</a></h3>
<ul>
<li>
<p>Delivery는 마지막 배포는 사림이 직접 진행을 해요. 하지만 Deployment는 배포하는 전과정이 자동으로 이루어져요.</p>
</li>
<li>
<p>주로 사용되는 CI,CD 툴은 github action, gitlab runner, Jenkins, CircleCI pipe, bitbucket pipeline 등이 활용이 돼요.</p>
<ul>
<li>github action : 많이 사용되는 이유는 접근하기 쉽기 때문이에요. 코드가 공개가 되어있어 보안상 문제가 있을 거 같지만 매일 fetch가 이루어지기 때문에 보안상 안전해요.</li>
<li>gitlab runner : 설치해서 사용을 해요. (공공기관 같은데에서 주로 사용해요.)</li>
<li>Circle CI : 오픈소스 프로젝트에서 많이 사용해요.</li>
<li>Jenkins: 스크립트형으로 작성되기 때문에 명령형이에요.</li>
</ul>
</li>
<li>
<p>CD만 전문적으로 하는 도구들이 있는데 나온 이유는 컨테이너가 나오면서 배포 전략이 다양하게 생겼기 때문이에요.</p>
<ul>
<li>ArgoCD (제일 빠르다는 점 때문에 제일 많이 사용해요.)</li>
<li>FluxCD</li>
<li>Spinnake (대규모 시스템이 적합해요.)</li>
<li>JenkinsX</li>
</ul>
</li>
</ul>
<hr>
<h1>실습</h1>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="랜덤으로-명언을-보여주는-간단한-서비스empty-dir">랜덤으로 명언을 보여주는 간단한 서비스(empty dir)<a href="https://indianapoly.github.io/blog/2025/07/16/kubernetes/kubernetes-basic-2-title#%EB%9E%9C%EB%8D%A4%EC%9C%BC%EB%A1%9C-%EB%AA%85%EC%96%B8%EC%9D%84-%EB%B3%B4%EC%97%AC%EC%A3%BC%EB%8A%94-%EA%B0%84%EB%8B%A8%ED%95%9C-%EC%84%9C%EB%B9%84%EC%8A%A4empty-dir" class="hash-link" aria-label="랜덤으로 명언을 보여주는 간단한 서비스(empty dir)에 대한 직접 링크" title="랜덤으로 명언을 보여주는 간단한 서비스(empty dir)에 대한 직접 링크">​</a></h3>
<p>속도가 느리다고 한다면 이것을 사용해서 빠르게 처리할 수 있어요.
medium: Memory를 설정을 하면 OS의 메모리 기반 파일시스템을 사용해요. 따라서 디스크보다 더 빠른 I/O 성능을 제공해요.</p>
<div class="language-yml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-yml codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token key atrule" style="color:#00a4db">volumes</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> cache</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">volume</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">emptyDir</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token key atrule" style="color:#00a4db">medium</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> Memory</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token key atrule" style="color:#00a4db">sizeLimit</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> 64Mi</span><br></span></code></pre></div></div>
<p>해당 프로젝트의 경우 context는 aws로 설정이 되어있어요.</p>
<p>왜 해당 프로젝트에서는 emptyDir이 적절할까요?</p>
<ul>
<li>명언 데이터들은 휘발성/임시 콘텐츠이므로, Pod가 재시작되면 새로 생성되어도 무방해요.</li>
<li>html-generator가 생성하고, nginx가 읽어야하므로 공유 스토리지가 필요해요. 그런데 외부 스토리지 연동이 불필요하기 때문이기도 해요.</li>
<li>속도 역시 빠르다는 장점이 있어요.</li>
</ul>
<div class="language-yml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-yml codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token key atrule" style="color:#00a4db">apiVersion</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> apps/v1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">kind</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> Deployment</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">metadata</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> fortune</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">deployment</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">labels</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">app</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> fortune</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">spec</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">replicas</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">3</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">selector</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">matchLabels</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token key atrule" style="color:#00a4db">app</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> fortune</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">template</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">metadata</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token key atrule" style="color:#00a4db">labels</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token key atrule" style="color:#00a4db">app</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> fortune</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">spec</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token key atrule" style="color:#00a4db">containers</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">image</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> &lt;이미지를 가져와야해요.</span><span class="token punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> html</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">generator</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token key atrule" style="color:#00a4db">volumeMounts</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> html</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">              </span><span class="token key atrule" style="color:#00a4db">mountPath</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> /var/htdocs</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">image</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> nginx</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain">alpine</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> web</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">server</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token key atrule" style="color:#00a4db">volumeMounts</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> html</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">              </span><span class="token key atrule" style="color:#00a4db">mountPath</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> /usr/share/nginx/html</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">              </span><span class="token key atrule" style="color:#00a4db">readOnly</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token boolean important" style="color:#36acaa">true</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token key atrule" style="color:#00a4db">ports</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">containerPort</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">80</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">              </span><span class="token key atrule" style="color:#00a4db">protocol</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> TCP</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token key atrule" style="color:#00a4db">volumes</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> html</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token key atrule" style="color:#00a4db">emptyDir</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre></div></div>
<div class="language-yml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-yml codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic"># fortune-lb.yml</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">apiVersion</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> v1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">kind</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> Service</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">metadata</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> fortune</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">lb</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic"># annotations을 설정 해주지 않으면 aws에서는 외부에 접속을 허용하지 않아요.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">annotations</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic"># VPC 외부 접속이 가능하도록 해요.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">service.beta.kubernetes.io/aws-load-balancer-type</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> external</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic"># 노드가 아니라 POD IP로 직접 전달해요.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">service.beta.kubernetes.io/aws-load-balancer-nlb-target-type</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> ip</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic"># 공인 IP를 사용할 수 있어요.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">service.beta.kubernetes.io/aws-load-balancer-scheme</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> internet</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">facing</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">spec</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">selector</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">app</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> fortune</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">ports</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">port</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">80</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token key atrule" style="color:#00a4db">targetPort</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">80</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">type</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> LoadBalancer</span><br></span></code></pre></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="docker-arg-vs-yaml-env-vs-configmap-env-비교-실습">Docker ARG vs Yaml ENV vs CONFIGMAP ENV 비교 실습<a href="https://indianapoly.github.io/blog/2025/07/16/kubernetes/kubernetes-basic-2-title#docker-arg-vs-yaml-env-vs-configmap-env-%EB%B9%84%EA%B5%90-%EC%8B%A4%EC%8A%B5" class="hash-link" aria-label="Docker ARG vs Yaml ENV vs CONFIGMAP ENV 비교 실습에 대한 직접 링크" title="Docker ARG vs Yaml ENV vs CONFIGMAP ENV 비교 실습에 대한 직접 링크">​</a></h3>
<p>Docker ARG의 경우에는 args를 설정하여 넘겨줄 수 있어요.</p>
<div class="language-Dockerfile language-dockerfile codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-dockerfile codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">containers:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  - image: hyeonlim/fortune:args</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    args: ["5"]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    name: html-generator</span><br></span></code></pre></div></div>
<p>yml을 통해서도 args를 설정해줄 수 있어요. 설정은 yml 파일에 아래와 같이 설정을 해주면 돼요.</p>
<div class="language-yml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-yml codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token key atrule" style="color:#00a4db">env</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># 컨테이너의 매개변수가 아니라 환경변수로 들어가요. 따라서 효율적으로 전달을 할 수 있어요.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> INTERVAL</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">value</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"30"</span><br></span></code></pre></div></div>
<p>CONFIGMAP을 생성을 해줄 수 있어요. 아래 명령어를 통해 확인도 가능해요.</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">kubectl create configmap fortune-config --from-literal=sleep-interval=7</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">kubectl get cm fortune-config</span><br></span></code></pre></div></div>
<p>아래 사진의 cli를 입력하게 되면 사진과 같이 값이 들어가 있는 것을 확인할 수 있어요.</p>
<img src="https://indianapoly.github.io/img/blog/kubernetes/2025-07-16/img1.png">
<ul>
<li>Kubernetes Pod에서 ConfigMap의 값을 환경 변수로 주입할 때 사용하지만 목적과 범위가 달라요.</li>
</ul>
<img src="https://indianapoly.github.io/img/blog/kubernetes/2025-07-16/img2.png">
<ul>
<li>해당 사진에서는 특정 Key만 환경 변수로 주입이 되고 개별 환경 변수 설정이 필요할 때 주로 사용해요.</li>
</ul>
<img src="https://indianapoly.github.io/img/blog/kubernetes/2025-07-16/img3.png">
<ul>
<li>해당 사진은 ConfigMap의 모든 Key를 환경 변수로 자동 주입해요. 모든 설정을 한꺼번에 주입하고 싶을 때 사용해요.</li>
</ul>]]></content>
        <author>
            <name>고현림</name>
            <uri>https://www.linkedin.com/in/%ED%98%84%EB%A6%BC-%EA%B3%A0-b53602221/</uri>
        </author>
        <category label="TIL" term="TIL"/>
        <category label="Kubernetes" term="Kubernetes"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[kubernetes Basic(1)]]></title>
        <id>https://indianapoly.github.io/blog/2025/07/15/kubernetes/kubernetes-basic-1-title</id>
        <link href="https://indianapoly.github.io/blog/2025/07/15/kubernetes/kubernetes-basic-1-title"/>
        <updated>2025-07-15T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[{/ truncate /}]]></summary>
        <content type="html"><![CDATA[
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="deployment">Deployment<a href="https://indianapoly.github.io/blog/2025/07/15/kubernetes/kubernetes-basic-1-title#deployment" class="hash-link" aria-label="Deployment에 대한 직접 링크" title="Deployment에 대한 직접 링크">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="1-recreate-재가동-방식-v1--v2">1. RECREATE (재가동 방식: v1 → v2)<a href="https://indianapoly.github.io/blog/2025/07/15/kubernetes/kubernetes-basic-1-title#1-recreate-%EC%9E%AC%EA%B0%80%EB%8F%99-%EB%B0%A9%EC%8B%9D-v1--v2" class="hash-link" aria-label="1. RECREATE (재가동 방식: v1 → v2)에 대한 직접 링크" title="1. RECREATE (재가동 방식: v1 → v2)에 대한 직접 링크">​</a></h3>
<p>특징: 서비스 중단 발생</p>
<p>장점: 설정이 쉬움</p>
<p>비고: 현업에서 가장 흔히 사용되며, 서비스 중단을 감수해야 하는 방식</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="2-ramped-rolling-update">2. RAMPED (Rolling Update)<a href="https://indianapoly.github.io/blog/2025/07/15/kubernetes/kubernetes-basic-1-title#2-ramped-rolling-update" class="hash-link" aria-label="2. RAMPED (Rolling Update)에 대한 직접 링크" title="2. RAMPED (Rolling Update)에 대한 직접 링크">​</a></h3>
<p>특징: 순차적으로 연결 시도 → 무중단 서비스 제공</p>
<p>설정 방법:</p>
<div class="language-yml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-yml codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token key atrule" style="color:#00a4db">type</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> RollingUpdate</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">maxSurge</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> 예) 1 → replicas + maxSurge 만큼 pod 생성 가능</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">maxUnavailable</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> 예) 1 → replicas 중 동시에 중단 가능한 pod 수</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">⇒ 위 2개의 옵션을 통해서 재가동 속도를 제어할 수 있음</span><br></span></code></pre></div></div>
<p>추가 설정<!-- -->:Sticky<!-- --> session: 버전 간 이동 방지</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="3-blue--green-배포">3. Blue / Green 배포<a href="https://indianapoly.github.io/blog/2025/07/15/kubernetes/kubernetes-basic-1-title#3-blue--green-%EB%B0%B0%ED%8F%AC" class="hash-link" aria-label="3. Blue / Green 배포에 대한 직접 링크" title="3. Blue / Green 배포에 대한 직접 링크">​</a></h3>
<p>특징: selector의 버전 변경으로 전체 교체</p>
<p>사용 목적:개발 버전을 운영에 바로 반영해야 하는 상황</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="4-canary-배포">4. Canary 배포<a href="https://indianapoly.github.io/blog/2025/07/15/kubernetes/kubernetes-basic-1-title#4-canary-%EB%B0%B0%ED%8F%AC" class="hash-link" aria-label="4. Canary 배포에 대한 직접 링크" title="4. Canary 배포에 대한 직접 링크">​</a></h3>
<p>특징: ramped와 유사하지만, 일부 트래픽으로 먼저 안정성 검증 후 전체 이전</p>
<p>설정: replicas: 9(v1), 1(v2) 설정, RouteRule의 route → weight 설정으로 손쉽게 설정 가능</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="5-ab-테스트">5. A/B 테스트<a href="https://indianapoly.github.io/blog/2025/07/15/kubernetes/kubernetes-basic-1-title#5-ab-%ED%85%8C%EC%8A%A4%ED%8A%B8" class="hash-link" aria-label="5. A/B 테스트에 대한 직접 링크" title="5. A/B 테스트에 대한 직접 링크">​</a></h3>
<p>특징 : header, cookie 기반으로 사용자 그룹 분리</p>
<p>사용 목적: UI나 기능 개선의 효과를 확인하고자 할 때 (새로운 UI가 구매율을 높이는지 확인)</p>
<p>설정: match에 header 조건 추가</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="6-shadow-트래픽-미러링">6. Shadow 트래픽 (미러링)<a href="https://indianapoly.github.io/blog/2025/07/15/kubernetes/kubernetes-basic-1-title#6-shadow-%ED%8A%B8%EB%9E%98%ED%94%BD-%EB%AF%B8%EB%9F%AC%EB%A7%81" class="hash-link" aria-label="6. Shadow 트래픽 (미러링)에 대한 직접 링크" title="6. Shadow 트래픽 (미러링)에 대한 직접 링크">​</a></h3>
<p>사용 목적: 기존 성능 개선을 위해 (예시 : Monolith → Microservice 구조 전환 시 유용)</p>
<p>설정: mirror 설정으로 실제 요청을 복제하여 테스트 환경으로 전달</p>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="service">Service<a href="https://indianapoly.github.io/blog/2025/07/15/kubernetes/kubernetes-basic-1-title#service" class="hash-link" aria-label="Service에 대한 직접 링크" title="Service에 대한 직접 링크">​</a></h2>
<p>쿠버네티스의 서비스는 기본적으로 네트워크이다. (물리적인 것이 아니다.)</p>
<p>(쿠버네티스의 pod가 죽고 다른 노드로 이동하면 IP가 변동이되는데, 쿠버네티스 안에는 규칙 기반의 DNS 서버스가 있다.)</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="cluster-ip">cluster IP<a href="https://indianapoly.github.io/blog/2025/07/15/kubernetes/kubernetes-basic-1-title#cluster-ip" class="hash-link" aria-label="cluster IP에 대한 직접 링크" title="cluster IP에 대한 직접 링크">​</a></h3>
<p>디폴트 서비스, layer4 =&gt; 내부에만 접속이 가능하다.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="node-port">Node Port<a href="https://indianapoly.github.io/blog/2025/07/15/kubernetes/kubernetes-basic-1-title#node-port" class="hash-link" aria-label="Node Port에 대한 직접 링크" title="Node Port에 대한 직접 링크">​</a></h3>
<p>트래픽이 오면 노드의 특정 포트에 도착하고, 클러스터 IP로 가고 이를 분기 시킨다.</p>
<ul>
<li>개발자들이 확인하기 위해서 주로 사용하고 웬만하면 사용하지 않는다.</li>
<li>노드를 만드는 이유는?<!-- -->
<ul>
<li>트래픽이 몰리는 것을 반응하기 위함이다.</li>
<li>어떤 노드에 규칙을 적용해서 작업하기 위함이다.</li>
</ul>
</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="load-balancer">Load Balancer<a href="https://indianapoly.github.io/blog/2025/07/15/kubernetes/kubernetes-basic-1-title#load-balancer" class="hash-link" aria-label="Load Balancer에 대한 직접 링크" title="Load Balancer에 대한 직접 링크">​</a></h3>
<p>트래픽이 들어오면 나놈. cluster ip와 다른 점은 cluster ip는 내부에 있고 로드밸런서는 외부에 위치해있다.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="ingress">Ingress<a href="https://indianapoly.github.io/blog/2025/07/15/kubernetes/kubernetes-basic-1-title#ingress" class="hash-link" aria-label="Ingress에 대한 직접 링크" title="Ingress에 대한 직접 링크">​</a></h3>
<p>외부에 위치에 있음. 로드 밸런서와의 차이점은 로드 밸런서는 layer4이고 Ingress는 layer7이다. (layer1~layer7까지 확인을 해볼 수 있다.)</p>
<p>사용자가 xxx.xxx.xxx.com이 접속을 하면
igw를 통해 ingress(퍼블릭 도메인이 자동 활동, ALB, NLB)에 들어오고 k8s 서비스에 접속이 된다. 첫 번째 껍데기는 replicaset 두 번째 껍데기는 deployment
ingress만 생성하는 것이 아니라 내부 서비스를 생성해야 통신이 된다.</p>
<p>쿠버네티스 안에 LB controller가 ingress를 생성하고, 상태를 감시한다. 그리고 삭제도 해준다.</p>
<ul>
<li>ingress를 삭제하고 테라폼을 삭제하는 것이 더 빠르다. ingress는 외부 서비스이기 때문이다.</li>
</ul>
<p>✅ <strong>왜 ELB IP가 3개 나오는가?</strong></p>
<img src="https://indianapoly.github.io/img/blog/kubernetes/2025-07-15/img1.png" alt="설명" width="600">
<p>AWS에서 Network Load Balancer(NLB)는 <strong>서브넷이 존재하는 모든 가용영역(AZ)</strong> 에 <strong>자동으로
IP를 할당</strong>합니다. 이는 고가용성(High Availability)을 보장하기 위한 기본 동작이다.</p>
<ol>
<li>서울 리전(<code>ap-northeast-2</code>)에서 VPC 생성</li>
</ol>
<ul>
<li>아래와 같이 <strong>3개의 프라이빗 서브넷 생성</strong>:</li>
</ul>
<div class="language-hcl codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-hcl codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">variable "private_subnet_cidrs" {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  type = map(string)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  default = {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    a = "10.1.4.0/24"  // ap-northeast-2a (8층)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    b = "10.1.5.0/24"  // ap-northeast-2b (9층)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    c = "10.1.6.0/24"  // ap-northeast-2c (10층)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre></div></div>
<ol start="2">
<li>EKS 클러스터 생성</li>
</ol>
<p><img src="https://indianapoly.github.io/img/blog/kubernetes/2025-07-15/img2.png" alt="설명" width="600">-</p>
<p>EKS클러스터를 생성하면 노드 그룹을 구성 - 노드는 2개에만 배치가 된다.</p>
<ol start="3">
<li>Ingress 생성</li>
</ol>
<ul>
<li>Ingress 리소서를 생성을 하면 AWS에서 NLB 자동 생성</li>
<li>NLB는 연결된 서브넷에 있는 모든 AZ에 IP를 할당</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="headless-service">Headless service<a href="https://indianapoly.github.io/blog/2025/07/15/kubernetes/kubernetes-basic-1-title#headless-service" class="hash-link" aria-label="Headless service에 대한 직접 링크" title="Headless service에 대한 직접 링크">​</a></h3>
<p>아래와 같이 설정을 하면 headless service가 된다.</p>
<div class="language-yml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-yml codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token key atrule" style="color:#00a4db">clusterIP</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> None</span><br></span></code></pre></div></div>
<p>Headless를 하면 pod로 가는게 아니라 pod의 backend의 IP주소를 준다.</p>
<p>어디에 쓰는지? 왜 쓰는지?
분산형 데이터 저장 서비스(DB, Messeage Queue, InMemory DB)</p>
<ol>
<li>클라이언트 연결</li>
<li>몇 개가 살아있는지 확인하기 위해서</li>
<li><strong>특정 노드의 데이터를 확인해야할 때 -&gt; 이게 핵심</strong></li>
</ol>
<p>분산형 데이터베이스 (Cassandra, Mongo, Redis)에 저장이 될 때 데이터를 저장하기 위해서는 Hash Algorithm을 쓴다. 이 때 노드에 저장을 하기 위해서는 노드의 정보를 알야아하는데 어를 때 노드의 정보를 반환하기 위해서 Headless를 이용한다.</p>
<ul>
<li>Hash Algorithm을 사용할 때 Node의 갯수가 약 10 이상의 소수인 경우에 even하게 값이 분산이 되는 것을 확인할 수 있다.</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="volume">volume<a href="https://indianapoly.github.io/blog/2025/07/15/kubernetes/kubernetes-basic-1-title#volume" class="hash-link" aria-label="volume에 대한 직접 링크" title="volume에 대한 직접 링크">​</a></h3>
<p>docker image layer에 hash 값이 있는 이유는 ?</p>
<p>가상 머신의 디스크를 쓰게 된다면, 하나만 수정해도 전체가 변경이 된다. 이 때 docker 의 layer를 생각을 하면 캐시를 할 수 있다는 점이다. 따라서 변경이 되면 해시 값이 바뀜으로 인해서 변경 사항을 파악 가능하다.</p>
<p>컨테이너가 종료된다면? 다 사라짐.
-&gt; 컨테이너가 종료되어도 데이터를 유지할 수 있는 방법은 외부 디스크 볼륨을 마운트 하는 것입니다.</p>
<ul>
<li>
<p>EmptyDir: Pod가 종료되면 영구적으로 삭제됩니다. (즉 Pod와 동일한 LifeCycle을 가지게 됩니다.) --&gt; 그런데 왜 쓸까요? 대규모 기반 정렬 작업, Pod 내의 컨테이너 간 파일 교환을 하기 위함이에요.</p>
</li>
<li>
<p>HostPath: pod가 종료되어도 상태가 유지가 됩니다. 다만 Pod는 항상 다른 노드로 이동 가능성이 존재하기 때문에 에러가 날 수 있다는 문제가 있습니다.</p>
</li>
<li>
<p>persistent volume(PV)</p>
<ul>
<li>block disk (노트북 c drive) : 동시에 읽을 수는 있지만, 쓸 수 없습니다. | 순서가 제일 빠릅니다.</li>
<li>network file disk(systme) = NFS : 여러 사용자가 접근하여 동시에 쓸 수 있고, 읽을 수 있습니다. | 2순위</li>
<li>object dist (aws S3) : 3순위 =&gt; 대규모 작업은 여기서 진행을 합니다. 왜 그럴까요? Append only, 파일을 열어서 수정할 수 없습니다. =&gt; 왜 그럴까요? 분산 작업에 유리하기 때문입니다. (연산 중에 변경을 하면 처음부터 다시 해야하는데, 이런 작업을 애초에 닫아버립니다.)</li>
</ul>
</li>
</ul>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="실습">실습<a href="https://indianapoly.github.io/blog/2025/07/15/kubernetes/kubernetes-basic-1-title#%EC%8B%A4%EC%8A%B5" class="hash-link" aria-label="실습에 대한 직접 링크" title="실습에 대한 직접 링크">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="1-httpd-배포--이미지-업데이트--롤백--삭제">1. HTTPD 배포 → 이미지 업데이트 → 롤백 → 삭제<a href="https://indianapoly.github.io/blog/2025/07/15/kubernetes/kubernetes-basic-1-title#1-httpd-%EB%B0%B0%ED%8F%AC--%EC%9D%B4%EB%AF%B8%EC%A7%80-%EC%97%85%EB%8D%B0%EC%9D%B4%ED%8A%B8--%EB%A1%A4%EB%B0%B1--%EC%82%AD%EC%A0%9C" class="hash-link" aria-label="1. HTTPD 배포 → 이미지 업데이트 → 롤백 → 삭제에 대한 직접 링크" title="1. HTTPD 배포 → 이미지 업데이트 → 롤백 → 삭제에 대한 직접 링크">​</a></h3>
<p>아래 파일 통해서 httpd를 설치한다.</p>
<div class="language-yml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-yml codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token key atrule" style="color:#00a4db">apiVersion</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> apps/v1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">kind</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> Deployment</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">metadata</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> httpd</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">deployment</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">labels</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">app</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> httpd</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">spec</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">replicas</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">3</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">selector</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">matchLabels</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token key atrule" style="color:#00a4db">app</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> httpd</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">template</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">metadata</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token key atrule" style="color:#00a4db">labels</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token key atrule" style="color:#00a4db">app</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> httpd</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">spec</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token key atrule" style="color:#00a4db">containers</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> httpd</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token key atrule" style="color:#00a4db">image</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> httpd</span><span class="token punctuation" style="color:#393A34">:</span><span class="token number" style="color:#36acaa">2.4</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token key atrule" style="color:#00a4db">ports</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">containerPort</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">80</span><br></span></code></pre></div></div>
<p><strong>1. Deployment</strong></p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">kubectl apply -f ./deploy-practice.yml</span><br></span></code></pre></div></div>
<ul>
<li>httpd-deployment 라는 이름의 deployment가 생성이 된다.</li>
<li>POD는 기본 설정에 따라서 적용이 된다.</li>
</ul>
<p><strong>2. 변경 사유(Revision 1) 주석(Annotation) 추가</strong></p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">kubectl annotate deploy httpd-deployment kubernetes.io/change-cause="first"</span><br></span></code></pre></div></div>
<ul>
<li>기록에 "first"라는 설명을 추가한다.</li>
<li>rollout history 에 Revision 1로 기록이 된다.</li>
</ul>
<p><strong>3. 이미지 업데이트 및 변경 사유 등록 (Revision 2)</strong></p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">kubectl set image deploy httpd-deployment httpd=httpd:latest</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">kubectl annotate deploy httpd-deployment kubernetes.io/change-cause="update latest"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre></div></div>
<ul>
<li>httpd 컨터이너의 이미지가 httpd<!-- -->:latest<!-- -->로 업데이트가 된다.</li>
<li>update latest 로 주석 추가가 된다.</li>
</ul>
<p><strong>4. 롤아웃 상태 확인 및 파드 확인</strong></p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">kubectl rollout status deploy httpd-deployment</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">kubectl get pods -l app=httpd</span><br></span></code></pre></div></div>
<ul>
<li>파드가 정상적으로 배포가 된다.</li>
</ul>
<p><strong>5. Scale out</strong></p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">kubectl scale deploy httpd-deployment --replicas=5</span><br></span></code></pre></div></div>
<ul>
<li>레플리카 수가 5개로 증가가 된다. 기존에서 2개 추가가 된다.</li>
</ul>
<p><strong>6. Rollback</strong></p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">kubectl rollout undo deploy httpd-deployment</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">kubectl annotate deploy httpd-deployment kubernetes.io/change-cause="rollback"</span><br></span></code></pre></div></div>
<ul>
<li>이전 비전으로 롤백이 진행이 된다.</li>
<li>롤백 사유는 rollback으로 기록</li>
</ul>]]></content>
        <author>
            <name>고현림</name>
            <uri>https://www.linkedin.com/in/%ED%98%84%EB%A6%BC-%EA%B3%A0-b53602221/</uri>
        </author>
        <category label="TIL" term="TIL"/>
        <category label="Kubernetes" term="Kubernetes"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Docker Basic(1)]]></title>
        <id>https://indianapoly.github.io/blog/2025/07/14/docker/docker-basic-1-title</id>
        <link href="https://indianapoly.github.io/blog/2025/07/14/docker/docker-basic-1-title"/>
        <updated>2025-07-14T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[{/ truncate /}]]></summary>
        <content type="html"><![CDATA[
<p>cloudwave 6기 수업에서 들은 내용을 정리한 글입니다.</p>
<blockquote>
<p><a href="https://docs.docker.com/manuals/" target="_blank" rel="noopener noreferrer">Docker DOCS</a></p>
</blockquote>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="docker를-사용하는-이유">Docker를 사용하는 이유<a href="https://indianapoly.github.io/blog/2025/07/14/docker/docker-basic-1-title#docker%EB%A5%BC-%EC%82%AC%EC%9A%A9%ED%95%98%EB%8A%94-%EC%9D%B4%EC%9C%A0" class="hash-link" aria-label="Docker를 사용하는 이유에 대한 직접 링크" title="Docker를 사용하는 이유에 대한 직접 링크">​</a></h3>
<p>도커를 활용하는 이유는 크게 보면 서비스의 추상화입니다. HOST 환경과 서비스를 격리 시킴으로서</p>
<ol>
<li>
<p>서비스를 편하게 사용할 수 있습니다.</p>
</li>
<li>
<p>격자의 역할로 이들을 조립하여 새로운 결과물을 만들 수 있습니다.</p>
</li>
</ol>
<p>이와 같은 이점이 있어 도커를 사용합니다.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="dockerfile">Dockerfile<a href="https://indianapoly.github.io/blog/2025/07/14/docker/docker-basic-1-title#dockerfile" class="hash-link" aria-label="Dockerfile에 대한 직접 링크" title="Dockerfile에 대한 직접 링크">​</a></h3>
<div class="language-Dockerfile language-dockerfile codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-dockerfile codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># BASE_IMAGE에 @를 활용한 tag를 지정하지 않으면 latest를 사용합니다.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># FROM은 기본적으로 한 번만 사용이 되는데 2번 이상 사용에 대해서는 아래에서 설명을 하겠습니다.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">FROM BASE_IMAGE</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># 컨테이너 내의 working directory를 변경합니다.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">WORKDIR &lt;경로&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># 포트를 외부로 노출을 합니다.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">EXPOSE &lt;포트번호&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># ADD의 경우에는 github과 같은 RemotePath가 가능합니다.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># 넣고자 하는 파일: 상대 경로</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># 컨테이너 내 경로 : 절대 경로 사용</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">ADD &lt;넣고자하는 파일의 경로&gt; &lt;컨테이너 내 경로&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">COPY &lt;넣고자하는 파일의 경로&gt; &lt;컨테이너 내 경로&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># 이미지를 빌드하는 과정에 명령어를 실행</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">RUN &lt;명령어&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># CMD 같은 경우에는 docker run시 변경이 가능하지만 ENTRYPOINT는 변경이 불가능하다.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">CMD &lt;명령어 정의&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">ENTRYPOINT &lt;필수 실행 명령어&gt;</span><br></span></code></pre></div></div>
<ul>
<li>
<p>이미지에서는 tag와 digest를 사용할 수 있습니다. tag의 경우에는 시점에 따라서 이미지가 상이할 수 있습니다. 하지만 digest는 완전히 고정이 되어있습니다.</p>
</li>
<li>
<p>통용되진 않지만 <strong>ARG와 같은 명령어를 제외</strong>한다면 한줄의 도커 파일 명령어 한 줄마다 레이어가 되며, 레이어드르인 기본적으로 Read Only 상태를 가지게 됩니다.</p>
<blockquote>
<p>ARG 값을 Application 내부에서 사용을 하지 않기 때문에 굳이 Layer로 만들 필요가 없습니다.</p>
</blockquote>
</li>
<li>
<p>레이어의 최상단에는 <strong>container layer</strong>가 존재하는데 해당 레이어는 Read Write 상태를 가지게 됩니다. 컨테이너가 삭제가 된다면 container layer 역시 삭제가 됩니다.</p>
</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="dockerfile-이미지-생성">Dockerfile 이미지 생성<a href="https://indianapoly.github.io/blog/2025/07/14/docker/docker-basic-1-title#dockerfile-%EC%9D%B4%EB%AF%B8%EC%A7%80-%EC%83%9D%EC%84%B1" class="hash-link" aria-label="Dockerfile 이미지 생성에 대한 직접 링크" title="Dockerfile 이미지 생성에 대한 직접 링크">​</a></h3>
<blockquote>
<p>docker build 시에 -f 로 Dockerfile을 지정해주지 않으면 기본적으론 Dockerfile을 사용합니다.</p>
</blockquote>
<p>Dockerfile의 목적은 이미지를 만드는 것입니다.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="multi-stage">Multi Stage<a href="https://indianapoly.github.io/blog/2025/07/14/docker/docker-basic-1-title#multi-stage" class="hash-link" aria-label="Multi Stage에 대한 직접 링크" title="Multi Stage에 대한 직접 링크">​</a></h3>
<p>아래 예시는 golang을 image를 활용하여 Go application을 컴파일을 진행합니다. 그리고 위의 결과물을 Scratch 이미지로 가져와 Scratch를 실행합니다.</p>
<div class="language-Dockerfile language-dockerfile codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-dockerfile codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">FROM golang:1.19-alpine as build</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">WORKDIR /app</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">COPY src ./</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">RUN CGO_ENABLED=0 go build -o main</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">FROM scratch as release</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">COPY --from=build /app/main /app/</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">WORKDIR /app</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">CMD ["/app/main"]</span><br></span></code></pre></div></div>
<p>첫 번째로 사용된 FROM은 임시로 쓰이고 버려집니다. --from을 활용해서 첫 번째 FROM의 결과물을 넣을 수 있습니다. 이렇게 실행을 하게되면 alpine보다 scratch 이미지의 크기가 작다는 이점이 존재합니다.</p>
<p>Production 환경에서는 보안성 증대 및 이미지 경량화를 위해 사용하는 경우가 많이 있습니다.</p>]]></content>
        <author>
            <name>고현림</name>
            <uri>https://www.linkedin.com/in/%ED%98%84%EB%A6%BC-%EA%B3%A0-b53602221/</uri>
        </author>
        <category label="TIL" term="TIL"/>
        <category label="Docker" term="Docker"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Docker Basic(2)]]></title>
        <id>https://indianapoly.github.io/blog/2025/07/10/docker/docker-basic-2-title</id>
        <link href="https://indianapoly.github.io/blog/2025/07/10/docker/docker-basic-2-title"/>
        <updated>2025-07-10T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[{/ truncate /}]]></summary>
        <content type="html"><![CDATA[
<p>cloudwave 6기 수업에서 들은 내용을 정리한 글입니다.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="docker-network">Docker Network<a href="https://indianapoly.github.io/blog/2025/07/10/docker/docker-basic-2-title#docker-network" class="hash-link" aria-label="Docker Network에 대한 직접 링크" title="Docker Network에 대한 직접 링크">​</a></h3>
<p>네트워크를 사용하는 이유는 Data 송수신 및 접근 제어를 하기 위함입니다.</p>
<div class="language-text codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">docker network create [OPTIONS] NETWORK</span><br></span></code></pre></div></div>
<p>주요 옵션에는 --driver(-d), --label이 있습니다.</p>
<p>--driver의 종류</p>
<ul>
<li>bridge : 동일한 host 컴퓨터 내에서 컨테이너끼리 통신하기 위해서 사용을 합니다</li>
<li>host : 컨테이너가 host와 동일한 네트워크를 사용합니다. (인스턴스 별로 한개만 생성)</li>
<li>none</li>
</ul>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">docker network connect [OPTIONS] NETWORK CONTAINER</span><br></span></code></pre></div></div>
<p>주요 옵션에는 --alias, --ip가 있습니다.
--alias는 네트워크 alias를 추가하는 것으로 일종의 추상화입니다.</p>
<p>네트워크 연결을 제거하기 위해서는 <code>disconnect</code>를 쓰고, 삭제를 하기 위해서는 <code>rm</code>을 사용합니다. 모든 네트워크를 삭제하기 위해서는 <code>prune</code>을 사용합니다.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="buildx">buildx<a href="https://indianapoly.github.io/blog/2025/07/10/docker/docker-basic-2-title#buildx" class="hash-link" aria-label="buildx에 대한 직접 링크" title="buildx에 대한 직접 링크">​</a></h3>
<p>동일한 기능에 다른 아키텍처를 빌드하기 위해서 사용합니다.</p>
<p><strong>Multi-platform용 builder 생성</strong></p>
<p>플랫폼 옵션을 통해서 이미지를 빌드할 수 있는 빌더를 생성할 수 있습니다.</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">docker buildx create --driver docker-container --name multi-builder --platform linux/amd64,linux/arm64</span><br></span></code></pre></div></div>
<p><strong>이미지 빌드하기</strong></p>
<p>플랫폼 옵션을 활용하여 각 아키텍처에 맞는 이미지를 제작할 수 있습니다.</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">docker buildx build --platform linux/amd64,linux/arm64 -t &lt;이름태그 설정&gt; .</span><br></span></code></pre></div></div>]]></content>
        <author>
            <name>고현림</name>
            <uri>https://www.linkedin.com/in/%ED%98%84%EB%A6%BC-%EA%B3%A0-b53602221/</uri>
        </author>
        <category label="TIL" term="TIL"/>
        <category label="Docker" term="Docker"/>
    </entry>
</feed>